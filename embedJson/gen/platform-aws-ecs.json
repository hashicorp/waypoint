{
   "description": "Deploy the application into an ECS cluster on AWS",
   "example": "deploy {\n  use \"aws-ecs\" {\n    region = \"us-east-1\"\n    memory = 512\n  }\n}",
   "input": "docker.Image",
   "mappers": null,
   "name": "aws-ecs",
   "optionalFields": [
      {
         "Field": "alb",
         "Type": "ecs.ALBConfig",
         "Synopsis": "Provides additional configuration for using an ALB with ECS",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": true,
         "Example": "",
         "SubFields": [
            {
               "Field": "certificate",
               "Type": "string",
               "Synopsis": "the ARN of an AWS Certificate Manager cert to associate with the ALB",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "domain_name",
               "Type": "string",
               "Synopsis": "Fully qualified domain name to set for the ALB",
               "Summary": "set along with zone_id to have DNS automatically setup for the ALB. this value should include the full hostname and domain name, for instance app.example.com",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "ingress_port",
               "Type": "int64",
               "Synopsis": "Internet-facing traffic port. Defaults to 80 if 'certificate' is unset, 443 if set.",
               "Summary": "used to set the ALB listener port, and the ALB security group ingress port",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "internal",
               "Type": "bool",
               "Synopsis": "Whether or not the created ALB should be internal",
               "Summary": "used when listener_arn is not set. If set, the created ALB will have a scheme of `internal`, otherwise by default it has a scheme of `internet-facing`.",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "listener_arn",
               "Type": "string",
               "Synopsis": "the ARN on an existing ALB to configure",
               "Summary": "when this is set, no ALB or Listener is created. Instead the application is configured by manipulating this existing Listener. This allows users to configure their ALB outside waypoint but still have waypoint hook the application to that ALB",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "security_group_ids",
               "Type": "list of string",
               "Synopsis": "",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "subnets",
               "Type": "list of string",
               "Synopsis": "the VPC subnets to use for the ALB",
               "Summary": "",
               "Optional": true,
               "Default": "public subnets in the default VPC",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "zone_id",
               "Type": "string",
               "Synopsis": "Route53 ZoneID to create a DNS record into",
               "Summary": "set along with alb.domain_name to have DNS automatically setup for the ALB",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            }
         ]
      },
      {
         "Field": "architecture",
         "Type": "string",
         "Synopsis": "the instruction set CPU architecture that the Amazon ECS supports. Valid values are: \"x86_64\", \"arm64\"",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "assign_public_ip",
         "Type": "bool",
         "Synopsis": "assign a public ip address to tasks. Defaults to true. Ignored if using an ec2 cluster.",
         "Summary": "If this is set to false, deployments will fail unless tasks are able to egress to the container registry by some other means (i.e. a subnet default route to a NAT gateway).",
         "Optional": true,
         "Default": "true",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "cluster",
         "Type": "string",
         "Synopsis": "the name of the ECS cluster to deploy into",
         "Summary": "the ECS cluster that will run the application as a Service. if there is no ECS cluster with this name, the ECS cluster will be created and configured to use Fargate to run containers.",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "count",
         "Type": "int",
         "Synopsis": "how many instances of the application should run",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "cpu",
         "Type": "int",
         "Synopsis": "how many cpu shares the container running the application is allowed",
         "Summary": "on Fargate, possible values for this are configured by the amount of memory the container is using. Here is a complete listing of possible values: 512MB: 256\n1024MB: 256, 512\n2048MB: 256, 512, 1024\n3072MB: 512, 1024\n4096MB: 512, 1024\n5120MB: 1024\n6144MB: 1024\n7168MB: 1024\n8192MB: 1024",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "disable_alb",
         "Type": "bool",
         "Synopsis": "do not create a load balancer assigned to the service",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "ec2_cluster",
         "Type": "bool",
         "Synopsis": "indicate if the ECS cluster should be EC2 type rather than Fargate",
         "Summary": "this controls if we should verify the ECS cluster in EC2 type. The cluster will not be created if it doesn't exist, only that there as existing cluster this is using EC2 and not Fargate",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "execution_role_name",
         "Type": "string",
         "Synopsis": "the name of the IAM role to use for ECS execution",
         "Summary": "",
         "Optional": true,
         "Default": "create a new exeuction IAM role based on the application name",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "log_group",
         "Type": "string",
         "Synopsis": "the CloudWatchLogs log group to store container logs into",
         "Summary": "",
         "Optional": true,
         "Default": "derived from the application name",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "memory_reservation",
         "Type": "int",
         "Synopsis": "",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "secrets",
         "Type": "map of string to string",
         "Synopsis": "secret key/values to pass to the ECS container",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "security_group_ids",
         "Type": "list of string",
         "Synopsis": "Security Group IDs of existing security groups to use for the ECS service's network access",
         "Summary": "list of existing group IDs to use for the ECS service's network access. If none are specified, waypoint will create one. If DisableALB is false (the default), waypoint will only allow ingress from the ALB's security group",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "service_port",
         "Type": "int64",
         "Synopsis": "the TCP port that the application is listening on",
         "Summary": "",
         "Optional": true,
         "Default": "3000",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "static_environment",
         "Type": "map of string to string",
         "Synopsis": "static environment variables to make available",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "subnets",
         "Type": "list of string",
         "Synopsis": "the VPC subnets to use for the service",
         "Summary": "you may set a list of private subnets here to prevent your tasks from being directly exposed publicly",
         "Optional": true,
         "Default": "public subnets in the default VPC",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "task_role_name",
         "Type": "string",
         "Synopsis": "the name of the task IAM role to assign.",
         "Summary": "If no role exists and a one or more task role policies are requested, a role with this name will be created.",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "task_role_policy_arns",
         "Type": "list of string",
         "Synopsis": "IAM Policy arns for attaching to the task role.",
         "Summary": "If no task role name is specified a task role with a default name will be created for this app, and these policies will be attached.",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      }
   ],
   "output": "ecs.Deployment",
   "outputAttrs": [
      {
         "Field": "cluster",
         "Type": "string",
         "Synopsis": "",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "load_balancer_arn",
         "Type": "string",
         "Synopsis": "",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "resource_state",
         "Type": "opaqueany.Any",
         "Synopsis": "",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "service_arn",
         "Type": "string",
         "Synopsis": "",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "target_group_arn",
         "Type": "string",
         "Synopsis": "",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "task_arn",
         "Type": "string",
         "Synopsis": "",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "url",
         "Type": "string",
         "Synopsis": "",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      }
   ],
   "outputAttrsHelp": "Output attributes can be used in your `waypoint.hcl` as [variables](/waypoint/docs/waypoint-hcl/variables) via [`artifact`](/waypoint/docs/waypoint-hcl/variables/artifact) or [`deploy`](/waypoint/docs/waypoint-hcl/variables/deploy).",
   "requiredFields": [
      {
         "Field": "logging",
         "Type": "ecs.Logging",
         "Synopsis": "Provides additional configuration for logging flags for ECS",
         "Summary": "Part of the ecs task definition.  These configuration flags help control how the awslogs log driver is configured.",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": true,
         "Example": "",
         "SubFields": [
            {
               "Field": "create_group",
               "Type": "bool",
               "Synopsis": "Enables creation of the aws logs group if not present",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "datetime_format",
               "Type": "string",
               "Synopsis": "Defines the multiline start pattern in Python strftime format",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "max_buffer_size",
               "Type": "string",
               "Synopsis": "When using non-blocking logging mode, this is the buffer size for message storage",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "mode",
               "Type": "string",
               "Synopsis": "Delivery method for log messages, either 'blocking' or 'non-blocking'",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "multiline_pattern",
               "Type": "string",
               "Synopsis": "Defines the multiline start pattern using a regular expression",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "region",
               "Type": "",
               "Synopsis": "The region the logs are to be shipped to",
               "Summary": "",
               "Optional": false,
               "Default": "The same region the task is to be running",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "stream_prefix",
               "Type": "string",
               "Synopsis": "Prefix for application in cloudwatch logs path",
               "Summary": "",
               "Optional": true,
               "Default": "Generated based off timestamp",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            }
         ]
      },
      {
         "Field": "memory",
         "Type": "int",
         "Synopsis": "how much memory to assign to the container running the application",
         "Summary": "when running in Fargate, this must be one of a few values, specified in MB: 512, 1024, 2048, 3072, 4096, 5120, and up to 16384 in increments of 1024. The memory value also controls the possible values for cpu",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "region",
         "Type": "string",
         "Synopsis": "the AWS region for the ECS cluster",
         "Summary": "",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "Example": "",
         "SubFields": null
      },
      {
         "Field": "sidecar",
         "Type": "list of ecs.ContainerConfig",
         "Synopsis": "Additional container to run as a sidecar.",
         "Summary": "This runs additional containers in addition to the main container that comes from the build phase.",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": true,
         "Example": "",
         "SubFields": [
            {
               "Field": "container_port",
               "Type": "int",
               "Synopsis": "The port number for the container",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "health_check",
               "Type": "ecs.HealthCheckConfig",
               "Synopsis": "",
               "Summary": "",
               "Optional": false,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "host_port",
               "Type": "int",
               "Synopsis": "The port number on the host to reserve for the container",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "image",
               "Type": "string",
               "Synopsis": "Image of the sidecar container",
               "Summary": "",
               "Optional": false,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "memory",
               "Type": "int",
               "Synopsis": "The amount (in MiB) of memory to present to the container",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "memory_reservation",
               "Type": "int",
               "Synopsis": "The soft limit (in MiB) of memory to reserve for the container",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "name",
               "Type": "string",
               "Synopsis": "Name of the container",
               "Summary": "",
               "Optional": false,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "protocol",
               "Type": "string",
               "Synopsis": "The protocol used for port mapping.",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "secrets",
               "Type": "map of string to string",
               "Synopsis": "Secrets to expose to this container",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            },
            {
               "Field": "static_environment",
               "Type": "map of string to string",
               "Synopsis": "Environment variables to expose to this container",
               "Summary": "",
               "Optional": true,
               "Default": "",
               "EnvVar": "",
               "Category": false,
               "Example": "",
               "SubFields": null
            }
         ]
      }
   ],
   "type": "platform",
   "use": "the [`use` stanza](/waypoint/docs/waypoint-hcl/use) for this plugin."
}
