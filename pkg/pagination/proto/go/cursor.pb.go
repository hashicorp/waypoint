// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cursor.proto

package hashicorp_cloud_internal_common

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PaginationCursor holds the cursor state that can be used to generate a next and
// previous page token.
type PaginationCursor struct {
	// NextCursor stores the next cursor.
	Next *PaginationCursor_Cursor `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	// PreviousCursor stores the previous cursor.
	Previous             *PaginationCursor_Cursor `protobuf:"bytes,2,opt,name=previous,proto3" json:"previous,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PaginationCursor) Reset()         { *m = PaginationCursor{} }
func (m *PaginationCursor) String() string { return proto.CompactTextString(m) }
func (*PaginationCursor) ProtoMessage()    {}
func (*PaginationCursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_99dda993967bd47f, []int{0}
}

func (m *PaginationCursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationCursor.Unmarshal(m, b)
}
func (m *PaginationCursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationCursor.Marshal(b, m, deterministic)
}
func (m *PaginationCursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationCursor.Merge(m, src)
}
func (m *PaginationCursor) XXX_Size() int {
	return xxx_messageInfo_PaginationCursor.Size(m)
}
func (m *PaginationCursor) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationCursor.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationCursor proto.InternalMessageInfo

func (m *PaginationCursor) GetNext() *PaginationCursor_Cursor {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *PaginationCursor) GetPrevious() *PaginationCursor_Cursor {
	if m != nil {
		return m.Previous
	}
	return nil
}

// Cursor stores information for cursor. By storing the cursor
// as its own message, it allows use to change the implementation of cursors
// over time.
type PaginationCursor_Cursor struct {
	// Value is a one of that holds the type of cursor.
	//
	// Types that are valid to be assigned to Value:
	//	*PaginationCursor_Cursor_GormPagination
	Value                isPaginationCursor_Cursor_Value `protobuf_oneof:"Value"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *PaginationCursor_Cursor) Reset()         { *m = PaginationCursor_Cursor{} }
func (m *PaginationCursor_Cursor) String() string { return proto.CompactTextString(m) }
func (*PaginationCursor_Cursor) ProtoMessage()    {}
func (*PaginationCursor_Cursor) Descriptor() ([]byte, []int) {
	return fileDescriptor_99dda993967bd47f, []int{0, 0}
}

func (m *PaginationCursor_Cursor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationCursor_Cursor.Unmarshal(m, b)
}
func (m *PaginationCursor_Cursor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationCursor_Cursor.Marshal(b, m, deterministic)
}
func (m *PaginationCursor_Cursor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationCursor_Cursor.Merge(m, src)
}
func (m *PaginationCursor_Cursor) XXX_Size() int {
	return xxx_messageInfo_PaginationCursor_Cursor.Size(m)
}
func (m *PaginationCursor_Cursor) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationCursor_Cursor.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationCursor_Cursor proto.InternalMessageInfo

type isPaginationCursor_Cursor_Value interface {
	isPaginationCursor_Cursor_Value()
}

type PaginationCursor_Cursor_GormPagination struct {
	GormPagination string `protobuf:"bytes,1,opt,name=gorm_pagination,json=gormPagination,proto3,oneof"`
}

func (*PaginationCursor_Cursor_GormPagination) isPaginationCursor_Cursor_Value() {}

func (m *PaginationCursor_Cursor) GetValue() isPaginationCursor_Cursor_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PaginationCursor_Cursor) GetGormPagination() string {
	if x, ok := m.GetValue().(*PaginationCursor_Cursor_GormPagination); ok {
		return x.GormPagination
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PaginationCursor_Cursor) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PaginationCursor_Cursor_GormPagination)(nil),
	}
}

func init() {
	proto.RegisterType((*PaginationCursor)(nil), "hashicorp.cloud.internal.common.PaginationCursor")
	proto.RegisterType((*PaginationCursor_Cursor)(nil), "hashicorp.cloud.internal.common.PaginationCursor.Cursor")
}

func init() { proto.RegisterFile("cursor.proto", fileDescriptor_99dda993967bd47f) }

var fileDescriptor_99dda993967bd47f = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x2e, 0x2d, 0x2a,
	0xce, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0xcf, 0x48, 0x2c, 0xce, 0xc8, 0x4c,
	0xce, 0x2f, 0x2a, 0xd0, 0x4b, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0xcb, 0xcc, 0x2b, 0x49, 0x2d, 0xca,
	0x4b, 0xcc, 0xd1, 0x4b, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x53, 0xfa, 0xc2, 0xc8, 0x25, 0x10, 0x90,
	0x98, 0x9e, 0x99, 0x97, 0x58, 0x92, 0x99, 0x9f, 0xe7, 0x0c, 0xd6, 0x2b, 0xe4, 0xc3, 0xc5, 0x92,
	0x97, 0x5a, 0x51, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0x64, 0xa1, 0x47, 0xc0, 0x10, 0x3d,
	0x74, 0x03, 0xf4, 0x20, 0x54, 0x10, 0xd8, 0x14, 0xa1, 0x10, 0x2e, 0x8e, 0x82, 0xa2, 0xd4, 0xb2,
	0xcc, 0xfc, 0xd2, 0x62, 0x09, 0x26, 0x0a, 0x4d, 0x84, 0x9b, 0x24, 0x65, 0xc3, 0xc5, 0x06, 0x75,
	0xad, 0x26, 0x17, 0x7f, 0x7a, 0x7e, 0x51, 0x6e, 0x7c, 0x01, 0x5c, 0x0f, 0xd8, 0xe1, 0x9c, 0x1e,
	0x0c, 0x41, 0x7c, 0x20, 0x09, 0x84, 0x59, 0x4e, 0xec, 0x5c, 0xac, 0x61, 0x89, 0x39, 0xa5, 0xa9,
	0x49, 0x6c, 0xe0, 0xe0, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x7a, 0x3d, 0x14, 0x2e,
	0x01, 0x00, 0x00,
}
