{
   "description": "Read configuration values from Vault.",
   "example": "config {\n  env = {\n    \"DATABASE_USERNAME\" = dynamic(\"vault\", {\n      path = \"database/creds/my-role\"\n      key = \"username\"\n    })\n\n    \"DATABASE_PASSWORD\" = dynamic(\"vault\", {\n      path = \"database/creds/my-role\"\n      key = \"password\"\n    })\n\n    # KV Version 2\n    \"PASSWORD_FOO\" = dynamic(\"vault\", {\n      path = \"secret/data/my-secret\"\n      key = \"/data/password\"  # key must be prefixed with \"/data\" (see below)\n    })\n\n    # KV Version 1\n    \"PASSWORD_BAR\" = dynamic(\"vault\", {\n      path = \"kv1/my-secret\"\n      key = \"password\"\n    })\n  }\n}",
   "mappers": null,
   "name": "vault",
   "optionalFields": null,
   "optionalSourceFields": [
      {
         "Field": "addr",
         "Type": "string",
         "Synopsis": "The address to the Vault server.",
         "Summary": "If this is not set, the VAULT_ADDR environment variable will be read.",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_ADDR",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "agent_addr",
         "Type": "string",
         "Synopsis": "The address to the Vault agent.",
         "Summary": "If this is not set, Vault agent will not be used. This should only be set if you're deploying to an environment with a Vault agent.",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_AGENT_ADDR",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "auth_method",
         "Type": "string",
         "Synopsis": "The authentication method to use for Vault.",
         "Summary": "This can be one of: `aws`, `kubernetes`. When this is set, configuration fields prefixed with the auth method type should be set, if required. Configuration fields prefixed with non-matching auth method types will be ignored (except for type validation).  If no auth method is set, Vault assumes proper environment variables are set for Vault to find and connect to the Vault server. When this is set, `auth_method_mount_path` is required.",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "auth_method_mount_path",
         "Type": "string",
         "Synopsis": "The path where the configured auth method is mounted in Vault.",
         "Summary": "This is required when `auth_method` is set.",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "aws_access_key",
         "Type": "string",
         "Synopsis": "The access key to use for authentication to the IAM service, if needed.",
         "Summary": "This usually isn't needed since IAM instance profiles are used.",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "aws_credential_poll_interval",
         "Type": "int",
         "Synopsis": "The interval in seconds to wait before checking for new credentials.",
         "Summary": "",
         "Optional": true,
         "Default": "60",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "aws_header_value",
         "Type": "string",
         "Synopsis": "The value to match the [`iam_server_id_header_value`](https://www.vaultproject.io/api/auth/aws#iam_server_id_header_value) if set.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "aws_region",
         "Type": "string",
         "Synopsis": "The region for the STS endpoint when using that method of auth.",
         "Summary": "",
         "Optional": true,
         "Default": "us-east-1",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "aws_role",
         "Type": "string",
         "Synopsis": "The role to use for AWS authentication.",
         "Summary": "This is required for the `aws` auth method. This depends on how you configured the Vault [AWS Auth Method](https://www.vaultproject.io/docs/auth/aws).",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "aws_secret_key",
         "Type": "string",
         "Synopsis": "The secret key to use for authentication to the IAM service, if needed.",
         "Summary": "This usually isn't needed since IAM instance profiles are used.",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "aws_type",
         "Type": "string",
         "Synopsis": "The type of authentication to use for AWS: either `iam` or `ec2`.",
         "Summary": "This is required for the `aws` auth method. This depends on how you configured the Vault [AWS Auth Method](https://www.vaultproject.io/docs/auth/aws).",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "ca_cert",
         "Type": "string",
         "Synopsis": "The path to a PEM-encoded CA cert file to use to verify the Vault server SSL certificate.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_CACERT",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "ca_path",
         "Type": "string",
         "Synopsis": "The path to a directory of PEM-encoded CA cert files to verify the Vault server SSL certificate.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_CAPATH",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "client_cert",
         "Type": "string",
         "Synopsis": "The path to a PEM-encoded certificate to present as a client certificate.",
         "Summary": "This only needs to be set if Vault is configured to expect a client cert.",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_CLIENT_CERT",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "client_key",
         "Type": "string",
         "Synopsis": "The path to a private key for the client cert.",
         "Summary": "This only needs to be set if Vault is configured to expect a client cert.",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_CLIENT_KEY",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "gcp_credentials",
         "Type": "string",
         "Synopsis": "When using static credentials, the contents of the JSON credentials file.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "gcp_jwt_exp",
         "Type": "int",
         "Synopsis": "The number of minutes a generated JWT should be valid for when using the iam method.",
         "Summary": "",
         "Optional": true,
         "Default": "15",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "gcp_project",
         "Type": "string",
         "Synopsis": "The project to use, only if it cannot be automatically determined.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "gcp_role",
         "Type": "string",
         "Synopsis": "The role to use for GCP authentication.",
         "Summary": "This is required for the `gcp` auth method. This depends on how you configured the Vault [GCP Auth Method](https://www.vaultproject.io/docs/auth/gcp).",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "gcp_service_account",
         "Type": "string",
         "Synopsis": "The service account to use, only if it cannot be automatically determined.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "gcp_type",
         "Type": "string",
         "Synopsis": "The type of authentication; must be `gce` or `iam`.",
         "Summary": "This is required for the `gcp` auth method. This depends on how you configured the Vault [GCP Auth Method](https://www.vaultproject.io/docs/auth/gcp).",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "kubernetes_role",
         "Type": "string",
         "Synopsis": "The role to use for Kubernetes authentication.",
         "Summary": "This is required for the `kubernetes` auth method. This is a role that is setup with the [Kubernetes Auth Method in Vault](https://www.vaultproject.io/docs/auth/kubernetes).",
         "Optional": true,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "kubernetes_token_path",
         "Type": "string",
         "Synopsis": "The path to the Kubernetes service account token.",
         "Summary": "In standard Kubernetes environments, this doesn't have to be set.",
         "Optional": true,
         "Default": "/var/run/secrets/kubernetes.io/serviceaccount/token",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "namespace",
         "Type": "string",
         "Synopsis": "Default namespace to operate in if you're using Vault namespaces.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_NAMESPACE",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "skip_verify",
         "Type": "bool",
         "Synopsis": "Do not validate the TLS cert presented by the Vault server.",
         "Summary": "This is not recommended unless absolutely necessary.",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_SKIP_VERIFY",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "tls_server_name",
         "Type": "string",
         "Synopsis": "The TLS server name to verify with the Vault server.",
         "Summary": "",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_TLS_SERVER_NAME",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "token",
         "Type": "string",
         "Synopsis": "The token to use for communicating to Vault.",
         "Summary": "If you're using a Vault Agent or an `auth_method`, this may not be necessary. If you're using an `auth_method`, this may still be necessary as a minimal token with access to the auth method, but usually these are not protected.",
         "Optional": true,
         "Default": "",
         "EnvVar": "VAULT_TOKEN",
         "Category": false,
         "SubFields": null
      }
   ],
   "requiredFields": [
      {
         "Field": "key",
         "Type": "string",
         "Synopsis": "The key name that exists at the specified Vault `path` parameter.",
         "Summary": "The value can be a direct key such as `password` or it can be a [JSON pointer](https://tools.ietf.org/html/rfc6901) string to retrieve a nested value. When using the Vault KV [Version 2](https://www.vaultproject.io/docs/secrets/kv/kv-v2) secret backend, the key must be prefixed with an additional string of `/data`. For example, `/data/password`. When using the Vault KV [Version 1](https://www.vaultproject.io/docs/secrets/kv/kv-v1) secret backend, the key can be a direct key name such as `password`. This is because the Vault KV API returns different data structures in its response depending on the Vault KV version the key is stored in. Therefore, the `/data` prefix is required for keys stored in the Vault KV `Version 2` secret backend in order to retrieve its nested value using JSON pointer string.",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      },
      {
         "Field": "path",
         "Type": "string",
         "Synopsis": "the Vault path to read the secret",
         "Summary": "within a single application, multiple dynamic values that use the same path will only read the value once. This allows multiple keys from a single secret to be extracted into multiple values. The example above shows this functionality by reading the username and password into separate values. When using the Vault KV secret backend, the path is usually `\u003cmount\u003e/data/\u003ckey\u003e`. For example, if you wrote data with `vault kv put secret/myapp` then the key for Waypoint must be `secret/data/myapp`. This can be confusing but is caused by the fact that the Vault API is what Waypoint uses and the Vault CLI does this automatically for KV.",
         "Optional": false,
         "Default": "",
         "EnvVar": "",
         "Category": false,
         "SubFields": null
      }
   ],
   "requiredSourceFields": null,
   "sourceFieldsHelp": "Source Parameters\nThe parameters below are used with `waypoint config source-set` to configure\nthe behavior this plugin. These are _not_ used in `dynamic` calls. The\nparameters used for `dynamic` are in the previous section.\n",
   "type": "configsourcer",
   "use": "`dynamic` for sourcing [configuration values](/docs/app-config/dynamic) or [input variable values](/docs/waypoint-hcl/variables/dynamic)."
}
