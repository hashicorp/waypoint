/* module: tokens/typography */
@use "../theme";
@use "./font" as Font;

// TODO: should this module be under theme/* ?

$LINE_HEIGHTS: (
  default: 1.5,
  dense: 1.2
);

/// ------------------------------------------------------------ ///
/// NAMED STYLES
/// ------------------------------------------------------------ ///
// per https://www.figma.com/file/mPNsU1nPLmXtFCPSiqdaT9/Spacing-and-line-height-demo?node-id=118%3A1368

@mixin Heading($level: 2) {
  /* [debug] Typography.Heading */

  @if $level == 0 {
    /* [debug] Heading/H0 - Dashboard title (36/Dense Bold) */

    //<p> spacing = 0.5em (~18px)
    font-size: theme.$size-xl;
    font-weight: Font.weight(Bold);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else if $level == 1 {
    /* [debug] Heading/H1 - Page title (28/Dense Bold) */

    //<p> spacing = 0.5em (~14px)
    font-size: 1.75rem; // TODO: need var?
    font-weight: Font.weight(Bold);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else if $level == 2 {
    /* [debug] Heading/H2 - Section title (20/Dense Bold) */

    //<p> spacing = 0.5em (~10px)
    font-size: 1.25rem; // TODO: need var?
    font-weight: Font.weight(Bold);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else if $level == 3 {
    /* [debug] Heading/H3 - Subsection title (16/Dense Bold) */

    //<p> spacing = 0.5em (~8px)
    font-size: theme.$size-md;
    font-weight: Font.weight(Bold);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else if $level == 4 {
    /* [debug] Heading/H4 - Subsection title (14/Dense Bold) */

    //<p> spacing = 0.5em (~7px)
    font-size: 0.875rem; // TODO: need var?
    font-weight: Font.weight(Bold);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else {
    /* [ERROR] unknown Typography.Heading level: #{$level} */
  }
}

@mixin Body($size: M) {
  /* [debug] Typography.Body */

  @if $size == S {
    /* [debug] Body/S (12/Regular) */

    //<p> spacing = 1em (~12px)
    font-size: theme.$size-sm;
    font-weight: Font.weight(Medium);
    line-height: map-get($LINE_HEIGHTS, default);
  }
  @else if $size == M {
    /* [debug] Body/M (16/Regular) */

    //<p> spacing = 1em (~16px)
    font-size: theme.$size-md;
    font-weight: Font.weight(Medium);
    line-height: map-get($LINE_HEIGHTS, default);
  }
  @else if $size == L {
    /* [debug] Body/L (20/Regular) */

    //<p> spacing = 1em (~20px)
    font-size: 1.25rem; // TODO: need var?
    font-weight: Font.weight(Medium);
    line-height: map-get($LINE_HEIGHTS, default);
  }
  @else {
    /* [ERROR] unknown Typography.Body size: #{$size} */
  }
}

@mixin Interface($size: M) {
  /* [debug] Typography.Interface */

  @if $size == S {
    /* [debug] Interface/S (12/Dense Medium) */

    //<p> spacing = 0.5em (~6px)
    font-size: theme.$size-sm;
    font-weight: Font.weight(Medium);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else if $size == M {
    /* [debug] Interface/M (14/Dense Medium) */

    //<p> spacing = 0.5em (~7px)
    font-size: 0.875rem; // TODO: need var?
    font-weight: Font.weight(Medium);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else if $size == L {
    /* [debug] Interface/L (16/Dense Medium) */

    //<p> spacing = 0.5em (~8px)
    font-size: theme.$size-md;
    font-weight: Font.weight(Medium);
    line-height: map-get($LINE_HEIGHTS, dense);
  }
  @else {
    /* [ERROR] unknown Typography.Interface size: #{$size} */
  }
}

@mixin Label {
  /* [debug] Typography.Label (14/Dense Bold) */

  //<p> spacing = 0.5em (~7px)
  font-size: 0.875rem; // TODO: need var?
  font-weight: Font.weight(Bold);
  line-height: map-get($LINE_HEIGHTS, dense);
}

@mixin Code {
  /* [debug] Typography.Code (14/Medium) */

  //<p> spacing = 0.5em (~7px)
  font-size: 0.875rem; // TODO: need var?
  font-weight: Font.weight(Medium);
  line-height: map-get($LINE_HEIGHTS, default);
}
