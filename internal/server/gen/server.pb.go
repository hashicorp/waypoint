// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package hashicorp_waypoint

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Supported component types, the values here MUST match the enum values
// in the Go sdk/component package exactly. A test in internal/server
// validates this.
type Component_Type int32

const (
	Component_UNKNOWN  Component_Type = 0
	Component_BUILDER  Component_Type = 1
	Component_REGISTRY Component_Type = 2
)

var Component_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "BUILDER",
	2: "REGISTRY",
}

var Component_Type_value = map[string]int32{
	"UNKNOWN":  0,
	"BUILDER":  1,
	"REGISTRY": 2,
}

func (x Component_Type) String() string {
	return proto.EnumName(Component_Type_name, int32(x))
}

func (Component_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4, 0}
}

type Status_State int32

const (
	Status_UNKNOWN Status_State = 0
	Status_RUNNING Status_State = 1
	Status_SUCCESS Status_State = 2
	Status_ERROR   Status_State = 3
)

var Status_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "RUNNING",
	2: "SUCCESS",
	3: "ERROR",
}

var Status_State_value = map[string]int32{
	"UNKNOWN": 0,
	"RUNNING": 1,
	"SUCCESS": 2,
	"ERROR":   3,
}

func (x Status_State) String() string {
	return proto.EnumName(Status_State_name, int32(x))
}

func (Status_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5, 0}
}

type OperationOrder_Order int32

const (
	OperationOrder_UNSET         OperationOrder_Order = 0
	OperationOrder_START_TIME    OperationOrder_Order = 1
	OperationOrder_COMPLETE_TIME OperationOrder_Order = 2
)

var OperationOrder_Order_name = map[int32]string{
	0: "UNSET",
	1: "START_TIME",
	2: "COMPLETE_TIME",
}

var OperationOrder_Order_value = map[string]int32{
	"UNSET":         0,
	"START_TIME":    1,
	"COMPLETE_TIME": 2,
}

func (x OperationOrder_Order) String() string {
	return proto.EnumName(OperationOrder_Order_name, int32(x))
}

func (OperationOrder_Order) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7, 0}
}

type Job_State int32

const (
	Job_UNKNOWN Job_State = 0
	Job_QUEUED  Job_State = 1
	Job_WAITING Job_State = 2
	Job_RUNNING Job_State = 3
	Job_ERROR   Job_State = 4
	Job_SUCCESS Job_State = 5
)

var Job_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "QUEUED",
	2: "WAITING",
	3: "RUNNING",
	4: "ERROR",
	5: "SUCCESS",
}

var Job_State_value = map[string]int32{
	"UNKNOWN": 0,
	"QUEUED":  1,
	"WAITING": 2,
	"RUNNING": 3,
	"ERROR":   4,
	"SUCCESS": 5,
}

func (x Job_State) String() string {
	return proto.EnumName(Job_State_name, int32(x))
}

func (Job_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 0}
}

type Deployment_State int32

const (
	Deployment_UNKNOWN Deployment_State = 0
	Deployment_PENDING Deployment_State = 1
	Deployment_DEPLOY  Deployment_State = 3
	Deployment_DESTROY Deployment_State = 4
)

var Deployment_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "PENDING",
	3: "DEPLOY",
	4: "DESTROY",
}

var Deployment_State_value = map[string]int32{
	"UNKNOWN": 0,
	"PENDING": 1,
	"DEPLOY":  3,
	"DESTROY": 4,
}

func (x Deployment_State) String() string {
	return proto.EnumName(Deployment_State_name, int32(x))
}

func (Deployment_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{45, 0}
}

type ExecStreamResponse_Output_Channel int32

const (
	ExecStreamResponse_Output_UNKNOWN ExecStreamResponse_Output_Channel = 0
	ExecStreamResponse_Output_STDOUT  ExecStreamResponse_Output_Channel = 1
	ExecStreamResponse_Output_STDERR  ExecStreamResponse_Output_Channel = 2
)

var ExecStreamResponse_Output_Channel_name = map[int32]string{
	0: "UNKNOWN",
	1: "STDOUT",
	2: "STDERR",
}

var ExecStreamResponse_Output_Channel_value = map[string]int32{
	"UNKNOWN": 0,
	"STDOUT":  1,
	"STDERR":  2,
}

func (x ExecStreamResponse_Output_Channel) String() string {
	return proto.EnumName(ExecStreamResponse_Output_Channel_name, int32(x))
}

func (ExecStreamResponse_Output_Channel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{57, 1, 0}
}

type EntrypointExecRequest_Output_Channel int32

const (
	EntrypointExecRequest_Output_UNKNOWN EntrypointExecRequest_Output_Channel = 0
	EntrypointExecRequest_Output_STDOUT  EntrypointExecRequest_Output_Channel = 1
	EntrypointExecRequest_Output_STDERR  EntrypointExecRequest_Output_Channel = 2
)

var EntrypointExecRequest_Output_Channel_name = map[int32]string{
	0: "UNKNOWN",
	1: "STDOUT",
	2: "STDERR",
}

var EntrypointExecRequest_Output_Channel_value = map[string]int32{
	"UNKNOWN": 0,
	"STDOUT":  1,
	"STDERR":  2,
}

func (x EntrypointExecRequest_Output_Channel) String() string {
	return proto.EnumName(EntrypointExecRequest_Output_Channel_name, int32(x))
}

func (EntrypointExecRequest_Output_Channel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{62, 2, 0}
}

type Application struct {
	Project              *Ref_Project `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Application) Reset()         { *m = Application{} }
func (m *Application) String() string { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()    {}
func (*Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *Application) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Application.Unmarshal(m, b)
}
func (m *Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Application.Marshal(b, m, deterministic)
}
func (m *Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application.Merge(m, src)
}
func (m *Application) XXX_Size() int {
	return xxx_messageInfo_Application.Size(m)
}
func (m *Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Application proto.InternalMessageInfo

func (m *Application) GetProject() *Ref_Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Project struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Workspace struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workspace) Reset()         { *m = Workspace{} }
func (m *Workspace) String() string { return proto.CompactTextString(m) }
func (*Workspace) ProtoMessage()    {}
func (*Workspace) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *Workspace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workspace.Unmarshal(m, b)
}
func (m *Workspace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workspace.Marshal(b, m, deterministic)
}
func (m *Workspace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workspace.Merge(m, src)
}
func (m *Workspace) XXX_Size() int {
	return xxx_messageInfo_Workspace.Size(m)
}
func (m *Workspace) XXX_DiscardUnknown() {
	xxx_messageInfo_Workspace.DiscardUnknown(m)
}

var xxx_messageInfo_Workspace proto.InternalMessageInfo

func (m *Workspace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Ref contains shared messages used for references to other resources.
//
// Refs should be used when the full type shouldn't be embedded in the message.
type Ref struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref) Reset()         { *m = Ref{} }
func (m *Ref) String() string { return proto.CompactTextString(m) }
func (*Ref) ProtoMessage()    {}
func (*Ref) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *Ref) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref.Unmarshal(m, b)
}
func (m *Ref) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref.Marshal(b, m, deterministic)
}
func (m *Ref) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref.Merge(m, src)
}
func (m *Ref) XXX_Size() int {
	return xxx_messageInfo_Ref.Size(m)
}
func (m *Ref) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref.DiscardUnknown(m)
}

var xxx_messageInfo_Ref proto.InternalMessageInfo

// Application references an application. To uniquely identify an
// application, this must encapsulate the full hierarchy to the application.
type Ref_Application struct {
	Application          string   `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	Project              string   `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref_Application) Reset()         { *m = Ref_Application{} }
func (m *Ref_Application) String() string { return proto.CompactTextString(m) }
func (*Ref_Application) ProtoMessage()    {}
func (*Ref_Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3, 0}
}

func (m *Ref_Application) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref_Application.Unmarshal(m, b)
}
func (m *Ref_Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref_Application.Marshal(b, m, deterministic)
}
func (m *Ref_Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref_Application.Merge(m, src)
}
func (m *Ref_Application) XXX_Size() int {
	return xxx_messageInfo_Ref_Application.Size(m)
}
func (m *Ref_Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Ref_Application proto.InternalMessageInfo

func (m *Ref_Application) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *Ref_Application) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

// Project references a project.
type Ref_Project struct {
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref_Project) Reset()         { *m = Ref_Project{} }
func (m *Ref_Project) String() string { return proto.CompactTextString(m) }
func (*Ref_Project) ProtoMessage()    {}
func (*Ref_Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3, 1}
}

func (m *Ref_Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref_Project.Unmarshal(m, b)
}
func (m *Ref_Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref_Project.Marshal(b, m, deterministic)
}
func (m *Ref_Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref_Project.Merge(m, src)
}
func (m *Ref_Project) XXX_Size() int {
	return xxx_messageInfo_Ref_Project.Size(m)
}
func (m *Ref_Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Ref_Project proto.InternalMessageInfo

func (m *Ref_Project) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

// Workspace references a workspace.
type Ref_Workspace struct {
	Workspace            string   `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref_Workspace) Reset()         { *m = Ref_Workspace{} }
func (m *Ref_Workspace) String() string { return proto.CompactTextString(m) }
func (*Ref_Workspace) ProtoMessage()    {}
func (*Ref_Workspace) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3, 2}
}

func (m *Ref_Workspace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref_Workspace.Unmarshal(m, b)
}
func (m *Ref_Workspace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref_Workspace.Marshal(b, m, deterministic)
}
func (m *Ref_Workspace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref_Workspace.Merge(m, src)
}
func (m *Ref_Workspace) XXX_Size() int {
	return xxx_messageInfo_Ref_Workspace.Size(m)
}
func (m *Ref_Workspace) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref_Workspace.DiscardUnknown(m)
}

var xxx_messageInfo_Ref_Workspace proto.InternalMessageInfo

func (m *Ref_Workspace) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

// Runner references a runner process which executes operations. This
// can reference a runner by any of the more specific types, such as
// by ID. If you want to constrain which runners can be targeted,
// a different ref type should be used.
type Ref_Runner struct {
	// Types that are valid to be assigned to Target:
	//	*Ref_Runner_Any
	//	*Ref_Runner_Id
	Target               isRef_Runner_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Ref_Runner) Reset()         { *m = Ref_Runner{} }
func (m *Ref_Runner) String() string { return proto.CompactTextString(m) }
func (*Ref_Runner) ProtoMessage()    {}
func (*Ref_Runner) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3, 3}
}

func (m *Ref_Runner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref_Runner.Unmarshal(m, b)
}
func (m *Ref_Runner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref_Runner.Marshal(b, m, deterministic)
}
func (m *Ref_Runner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref_Runner.Merge(m, src)
}
func (m *Ref_Runner) XXX_Size() int {
	return xxx_messageInfo_Ref_Runner.Size(m)
}
func (m *Ref_Runner) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref_Runner.DiscardUnknown(m)
}

var xxx_messageInfo_Ref_Runner proto.InternalMessageInfo

type isRef_Runner_Target interface {
	isRef_Runner_Target()
}

type Ref_Runner_Any struct {
	Any *Ref_RunnerAny `protobuf:"bytes,1,opt,name=any,proto3,oneof"`
}

type Ref_Runner_Id struct {
	Id *Ref_RunnerId `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*Ref_Runner_Any) isRef_Runner_Target() {}

func (*Ref_Runner_Id) isRef_Runner_Target() {}

func (m *Ref_Runner) GetTarget() isRef_Runner_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Ref_Runner) GetAny() *Ref_RunnerAny {
	if x, ok := m.GetTarget().(*Ref_Runner_Any); ok {
		return x.Any
	}
	return nil
}

func (m *Ref_Runner) GetId() *Ref_RunnerId {
	if x, ok := m.GetTarget().(*Ref_Runner_Id); ok {
		return x.Id
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Ref_Runner) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Ref_Runner_Any)(nil),
		(*Ref_Runner_Id)(nil),
	}
}

// RunenrId references a runner by ID.
type Ref_RunnerId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref_RunnerId) Reset()         { *m = Ref_RunnerId{} }
func (m *Ref_RunnerId) String() string { return proto.CompactTextString(m) }
func (*Ref_RunnerId) ProtoMessage()    {}
func (*Ref_RunnerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3, 4}
}

func (m *Ref_RunnerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref_RunnerId.Unmarshal(m, b)
}
func (m *Ref_RunnerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref_RunnerId.Marshal(b, m, deterministic)
}
func (m *Ref_RunnerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref_RunnerId.Merge(m, src)
}
func (m *Ref_RunnerId) XXX_Size() int {
	return xxx_messageInfo_Ref_RunnerId.Size(m)
}
func (m *Ref_RunnerId) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref_RunnerId.DiscardUnknown(m)
}

var xxx_messageInfo_Ref_RunnerId proto.InternalMessageInfo

func (m *Ref_RunnerId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// RunnerAny will reference any runner.
type Ref_RunnerAny struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref_RunnerAny) Reset()         { *m = Ref_RunnerAny{} }
func (m *Ref_RunnerAny) String() string { return proto.CompactTextString(m) }
func (*Ref_RunnerAny) ProtoMessage()    {}
func (*Ref_RunnerAny) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3, 5}
}

func (m *Ref_RunnerAny) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref_RunnerAny.Unmarshal(m, b)
}
func (m *Ref_RunnerAny) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref_RunnerAny.Marshal(b, m, deterministic)
}
func (m *Ref_RunnerAny) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref_RunnerAny.Merge(m, src)
}
func (m *Ref_RunnerAny) XXX_Size() int {
	return xxx_messageInfo_Ref_RunnerAny.Size(m)
}
func (m *Ref_RunnerAny) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref_RunnerAny.DiscardUnknown(m)
}

var xxx_messageInfo_Ref_RunnerAny proto.InternalMessageInfo

// Component represents metadata about a component. A component is the
// generic name for a builder, registry, platform, etc.
type Component struct {
	// type of the component
	Type Component_Type `protobuf:"varint,1,opt,name=type,proto3,enum=hashicorp.waypoint.Component_Type" json:"type,omitempty"`
	// name of the component
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Component) Reset()         { *m = Component{} }
func (m *Component) String() string { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()    {}
func (*Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Component.Unmarshal(m, b)
}
func (m *Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Component.Marshal(b, m, deterministic)
}
func (m *Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Component.Merge(m, src)
}
func (m *Component) XXX_Size() int {
	return xxx_messageInfo_Component.Size(m)
}
func (m *Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Component proto.InternalMessageInfo

func (m *Component) GetType() Component_Type {
	if m != nil {
		return m.Type
	}
	return Component_UNKNOWN
}

func (m *Component) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Status represents the status of an async operation.
type Status struct {
	// state is the state of this operation.
	State Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=hashicorp.waypoint.Status_State" json:"state,omitempty"`
	// details may be non-empty to provide human-friendly information
	// about the current status. This may change between status updates
	// for the same state to provide updated details about the state.
	Details string `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	// error is set if the state == ERROR with the error that occurred.
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// start_time is the time the operation was started.
	StartTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// complete_time is the time the operation completed (success or fail).
	CompleteTime         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=complete_time,json=completeTime,proto3" json:"complete_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetState() Status_State {
	if m != nil {
		return m.State
	}
	return Status_UNKNOWN
}

func (m *Status) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Status) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Status) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Status) GetCompleteTime() *timestamp.Timestamp {
	if m != nil {
		return m.CompleteTime
	}
	return nil
}

type StatusFilter struct {
	// Filters are ANDed together.
	Filters              []*StatusFilter_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StatusFilter) Reset()         { *m = StatusFilter{} }
func (m *StatusFilter) String() string { return proto.CompactTextString(m) }
func (*StatusFilter) ProtoMessage()    {}
func (*StatusFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *StatusFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusFilter.Unmarshal(m, b)
}
func (m *StatusFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusFilter.Marshal(b, m, deterministic)
}
func (m *StatusFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusFilter.Merge(m, src)
}
func (m *StatusFilter) XXX_Size() int {
	return xxx_messageInfo_StatusFilter.Size(m)
}
func (m *StatusFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusFilter.DiscardUnknown(m)
}

var xxx_messageInfo_StatusFilter proto.InternalMessageInfo

func (m *StatusFilter) GetFilters() []*StatusFilter_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type StatusFilter_Filter struct {
	// Types that are valid to be assigned to Filter:
	//	*StatusFilter_Filter_State
	Filter               isStatusFilter_Filter_Filter `protobuf_oneof:"filter"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *StatusFilter_Filter) Reset()         { *m = StatusFilter_Filter{} }
func (m *StatusFilter_Filter) String() string { return proto.CompactTextString(m) }
func (*StatusFilter_Filter) ProtoMessage()    {}
func (*StatusFilter_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6, 0}
}

func (m *StatusFilter_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusFilter_Filter.Unmarshal(m, b)
}
func (m *StatusFilter_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusFilter_Filter.Marshal(b, m, deterministic)
}
func (m *StatusFilter_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusFilter_Filter.Merge(m, src)
}
func (m *StatusFilter_Filter) XXX_Size() int {
	return xxx_messageInfo_StatusFilter_Filter.Size(m)
}
func (m *StatusFilter_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusFilter_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_StatusFilter_Filter proto.InternalMessageInfo

type isStatusFilter_Filter_Filter interface {
	isStatusFilter_Filter_Filter()
}

type StatusFilter_Filter_State struct {
	State Status_State `protobuf:"varint,2,opt,name=state,proto3,enum=hashicorp.waypoint.Status_State,oneof"`
}

func (*StatusFilter_Filter_State) isStatusFilter_Filter_Filter() {}

func (m *StatusFilter_Filter) GetFilter() isStatusFilter_Filter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *StatusFilter_Filter) GetState() Status_State {
	if x, ok := m.GetFilter().(*StatusFilter_Filter_State); ok {
		return x.State
	}
	return Status_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StatusFilter_Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StatusFilter_Filter_State)(nil),
	}
}

// OperationOrder is a shared message type used for controlling the order
// of results in queries for app operations such as build, deploys, etc.
type OperationOrder struct {
	// Order for the results.
	Order OperationOrder_Order `protobuf:"varint,2,opt,name=order,proto3,enum=hashicorp.waypoint.OperationOrder_Order" json:"order,omitempty"`
	Desc  bool                 `protobuf:"varint,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// Limit the number of results
	Limit                uint32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationOrder) Reset()         { *m = OperationOrder{} }
func (m *OperationOrder) String() string { return proto.CompactTextString(m) }
func (*OperationOrder) ProtoMessage()    {}
func (*OperationOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *OperationOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationOrder.Unmarshal(m, b)
}
func (m *OperationOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationOrder.Marshal(b, m, deterministic)
}
func (m *OperationOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationOrder.Merge(m, src)
}
func (m *OperationOrder) XXX_Size() int {
	return xxx_messageInfo_OperationOrder.Size(m)
}
func (m *OperationOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationOrder.DiscardUnknown(m)
}

var xxx_messageInfo_OperationOrder proto.InternalMessageInfo

func (m *OperationOrder) GetOrder() OperationOrder_Order {
	if m != nil {
		return m.Order
	}
	return OperationOrder_UNSET
}

func (m *OperationOrder) GetDesc() bool {
	if m != nil {
		return m.Desc
	}
	return false
}

func (m *OperationOrder) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type QueueJobRequest struct {
	// The job to queue. See the Job message documentation for more details
	// on what to set.
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueJobRequest) Reset()         { *m = QueueJobRequest{} }
func (m *QueueJobRequest) String() string { return proto.CompactTextString(m) }
func (*QueueJobRequest) ProtoMessage()    {}
func (*QueueJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *QueueJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueJobRequest.Unmarshal(m, b)
}
func (m *QueueJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueJobRequest.Marshal(b, m, deterministic)
}
func (m *QueueJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueJobRequest.Merge(m, src)
}
func (m *QueueJobRequest) XXX_Size() int {
	return xxx_messageInfo_QueueJobRequest.Size(m)
}
func (m *QueueJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueJobRequest proto.InternalMessageInfo

func (m *QueueJobRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type QueueJobResponse struct {
	// the job ID that was queued. This can be used with other RPC methods
	// to check on the status, cancel, etc.
	JobId                string   `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueJobResponse) Reset()         { *m = QueueJobResponse{} }
func (m *QueueJobResponse) String() string { return proto.CompactTextString(m) }
func (*QueueJobResponse) ProtoMessage()    {}
func (*QueueJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *QueueJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueJobResponse.Unmarshal(m, b)
}
func (m *QueueJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueJobResponse.Marshal(b, m, deterministic)
}
func (m *QueueJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueJobResponse.Merge(m, src)
}
func (m *QueueJobResponse) XXX_Size() int {
	return xxx_messageInfo_QueueJobResponse.Size(m)
}
func (m *QueueJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueJobResponse proto.InternalMessageInfo

func (m *QueueJobResponse) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ValidateJobRequest struct {
	// The job to validate.
	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	// If true, will NOT validate that the job is assignable.
	DisableAssign        bool     `protobuf:"varint,2,opt,name=disable_assign,json=disableAssign,proto3" json:"disable_assign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateJobRequest) Reset()         { *m = ValidateJobRequest{} }
func (m *ValidateJobRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateJobRequest) ProtoMessage()    {}
func (*ValidateJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{10}
}

func (m *ValidateJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateJobRequest.Unmarshal(m, b)
}
func (m *ValidateJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateJobRequest.Marshal(b, m, deterministic)
}
func (m *ValidateJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateJobRequest.Merge(m, src)
}
func (m *ValidateJobRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateJobRequest.Size(m)
}
func (m *ValidateJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateJobRequest proto.InternalMessageInfo

func (m *ValidateJobRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *ValidateJobRequest) GetDisableAssign() bool {
	if m != nil {
		return m.DisableAssign
	}
	return false
}

type ValidateJobResponse struct {
	// valid will be true if the job structure is valid. If it is invalid
	// validation_error will be set with a reason.
	Valid           bool           `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	ValidationError *status.Status `protobuf:"bytes,2,opt,name=validation_error,json=validationError,proto3" json:"validation_error,omitempty"`
	// assignable will be true if the job is assignable at this point-in-time.
	// Assignable means that there are runners registered with the server that
	// claim to be able to service this job. Note that this is a point-in-time
	// result so it doesn't guarantee that a job will be serviced when queued.
	// Additionally, assignability doesn't imply anything about queue length,
	// so the job may still be queued for some time.
	//
	// This will always be false if "valid" is false since we don't check
	// assignability of invalid jobs.
	Assignable           bool     `protobuf:"varint,3,opt,name=assignable,proto3" json:"assignable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateJobResponse) Reset()         { *m = ValidateJobResponse{} }
func (m *ValidateJobResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateJobResponse) ProtoMessage()    {}
func (*ValidateJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{11}
}

func (m *ValidateJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateJobResponse.Unmarshal(m, b)
}
func (m *ValidateJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateJobResponse.Marshal(b, m, deterministic)
}
func (m *ValidateJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateJobResponse.Merge(m, src)
}
func (m *ValidateJobResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateJobResponse.Size(m)
}
func (m *ValidateJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateJobResponse proto.InternalMessageInfo

func (m *ValidateJobResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ValidateJobResponse) GetValidationError() *status.Status {
	if m != nil {
		return m.ValidationError
	}
	return nil
}

func (m *ValidateJobResponse) GetAssignable() bool {
	if m != nil {
		return m.Assignable
	}
	return false
}

// A Job is a job that executes on a runner and is queued by QueueOperation.
type Job struct {
	// id of the job. This is generated on the server side when queued. If
	// you are queueing a job, this must be empty or unset.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The application to target for the operation. Some operations may allow
	// certain fields of this to be empty, so check with the operation
	// documentation to determine what needs to be set. Generally, project
	// must be set.
	Application *Ref_Application `protobuf:"bytes,2,opt,name=application,proto3" json:"application,omitempty"`
	// The workspace to perform the operation in.
	Workspace *Ref_Workspace `protobuf:"bytes,3,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// The runner that should execute this job. This is required.
	TargetRunner *Ref_Runner `protobuf:"bytes,4,opt,name=target_runner,json=targetRunner,proto3" json:"target_runner,omitempty"`
	// Labels are the labels to set for this operation.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// data_source determines where the data to operate on (such as the
	// application source code and Waypoint configuration) comes from.
	//
	// Types that are valid to be assigned to DataSource:
	//	*Job_Local_
	DataSource isJob_DataSource `protobuf_oneof:"data_source"`
	// The operation to execute. See the message docs for details on the operation.
	//
	// Types that are valid to be assigned to Operation:
	//	*Job_Noop_
	//	*Job_Build
	//	*Job_Push
	//	*Job_Deploy
	//	*Job_DestroyDeploy
	//	*Job_Release
	Operation isJob_Operation `protobuf_oneof:"operation"`
	// state of the job
	State Job_State `protobuf:"varint,100,opt,name=state,proto3,enum=hashicorp.waypoint.Job_State" json:"state,omitempty"`
	// The runner that was assigned to execute this job. Note that the
	// runner may have been ephemeral and may no longer exist.
	AssignedRunner *Ref_RunnerId `protobuf:"bytes,101,opt,name=assigned_runner,json=assignedRunner,proto3" json:"assigned_runner,omitempty"`
	// The time when the job was queued.
	QueueTime    *timestamp.Timestamp `protobuf:"bytes,102,opt,name=queue_time,json=queueTime,proto3" json:"queue_time,omitempty"`
	AssignTime   *timestamp.Timestamp `protobuf:"bytes,103,opt,name=assign_time,json=assignTime,proto3" json:"assign_time,omitempty"`
	AckTime      *timestamp.Timestamp `protobuf:"bytes,104,opt,name=ack_time,json=ackTime,proto3" json:"ack_time,omitempty"`
	CompleteTime *timestamp.Timestamp `protobuf:"bytes,105,opt,name=complete_time,json=completeTime,proto3" json:"complete_time,omitempty"`
	// error is set if state == ERROR
	Error *status.Status `protobuf:"bytes,106,opt,name=error,proto3" json:"error,omitempty"`
	// result is set based on the operation specified. A nil result is possible
	// for some operations.
	Result               *Job_Result `protobuf:"bytes,107,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *Job) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *Job) GetTargetRunner() *Ref_Runner {
	if m != nil {
		return m.TargetRunner
	}
	return nil
}

func (m *Job) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type isJob_DataSource interface {
	isJob_DataSource()
}

type Job_Local_ struct {
	Local *Job_Local `protobuf:"bytes,20,opt,name=local,proto3,oneof"`
}

func (*Job_Local_) isJob_DataSource() {}

func (m *Job) GetDataSource() isJob_DataSource {
	if m != nil {
		return m.DataSource
	}
	return nil
}

func (m *Job) GetLocal() *Job_Local {
	if x, ok := m.GetDataSource().(*Job_Local_); ok {
		return x.Local
	}
	return nil
}

type isJob_Operation interface {
	isJob_Operation()
}

type Job_Noop_ struct {
	Noop *Job_Noop `protobuf:"bytes,50,opt,name=noop,proto3,oneof"`
}

type Job_Build struct {
	Build *Job_BuildOp `protobuf:"bytes,51,opt,name=build,proto3,oneof"`
}

type Job_Push struct {
	Push *Job_PushOp `protobuf:"bytes,52,opt,name=push,proto3,oneof"`
}

type Job_Deploy struct {
	Deploy *Job_DeployOp `protobuf:"bytes,53,opt,name=deploy,proto3,oneof"`
}

type Job_DestroyDeploy struct {
	DestroyDeploy *Job_DestroyDeployOp `protobuf:"bytes,54,opt,name=destroy_deploy,json=destroyDeploy,proto3,oneof"`
}

type Job_Release struct {
	Release *Job_ReleaseOp `protobuf:"bytes,55,opt,name=release,proto3,oneof"`
}

func (*Job_Noop_) isJob_Operation() {}

func (*Job_Build) isJob_Operation() {}

func (*Job_Push) isJob_Operation() {}

func (*Job_Deploy) isJob_Operation() {}

func (*Job_DestroyDeploy) isJob_Operation() {}

func (*Job_Release) isJob_Operation() {}

func (m *Job) GetOperation() isJob_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *Job) GetNoop() *Job_Noop {
	if x, ok := m.GetOperation().(*Job_Noop_); ok {
		return x.Noop
	}
	return nil
}

func (m *Job) GetBuild() *Job_BuildOp {
	if x, ok := m.GetOperation().(*Job_Build); ok {
		return x.Build
	}
	return nil
}

func (m *Job) GetPush() *Job_PushOp {
	if x, ok := m.GetOperation().(*Job_Push); ok {
		return x.Push
	}
	return nil
}

func (m *Job) GetDeploy() *Job_DeployOp {
	if x, ok := m.GetOperation().(*Job_Deploy); ok {
		return x.Deploy
	}
	return nil
}

func (m *Job) GetDestroyDeploy() *Job_DestroyDeployOp {
	if x, ok := m.GetOperation().(*Job_DestroyDeploy); ok {
		return x.DestroyDeploy
	}
	return nil
}

func (m *Job) GetRelease() *Job_ReleaseOp {
	if x, ok := m.GetOperation().(*Job_Release); ok {
		return x.Release
	}
	return nil
}

func (m *Job) GetState() Job_State {
	if m != nil {
		return m.State
	}
	return Job_UNKNOWN
}

func (m *Job) GetAssignedRunner() *Ref_RunnerId {
	if m != nil {
		return m.AssignedRunner
	}
	return nil
}

func (m *Job) GetQueueTime() *timestamp.Timestamp {
	if m != nil {
		return m.QueueTime
	}
	return nil
}

func (m *Job) GetAssignTime() *timestamp.Timestamp {
	if m != nil {
		return m.AssignTime
	}
	return nil
}

func (m *Job) GetAckTime() *timestamp.Timestamp {
	if m != nil {
		return m.AckTime
	}
	return nil
}

func (m *Job) GetCompleteTime() *timestamp.Timestamp {
	if m != nil {
		return m.CompleteTime
	}
	return nil
}

func (m *Job) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Job) GetResult() *Job_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Job) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Job_Local_)(nil),
		(*Job_Noop_)(nil),
		(*Job_Build)(nil),
		(*Job_Push)(nil),
		(*Job_Deploy)(nil),
		(*Job_DestroyDeploy)(nil),
		(*Job_Release)(nil),
	}
}

type Job_Result struct {
	Build                *Job_BuildResult   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	Push                 *Job_PushResult    `protobuf:"bytes,2,opt,name=push,proto3" json:"push,omitempty"`
	Deploy               *Job_DeployResult  `protobuf:"bytes,3,opt,name=deploy,proto3" json:"deploy,omitempty"`
	Release              *Job_ReleaseResult `protobuf:"bytes,4,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Job_Result) Reset()         { *m = Job_Result{} }
func (m *Job_Result) String() string { return proto.CompactTextString(m) }
func (*Job_Result) ProtoMessage()    {}
func (*Job_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 1}
}

func (m *Job_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_Result.Unmarshal(m, b)
}
func (m *Job_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_Result.Marshal(b, m, deterministic)
}
func (m *Job_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_Result.Merge(m, src)
}
func (m *Job_Result) XXX_Size() int {
	return xxx_messageInfo_Job_Result.Size(m)
}
func (m *Job_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Job_Result proto.InternalMessageInfo

func (m *Job_Result) GetBuild() *Job_BuildResult {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *Job_Result) GetPush() *Job_PushResult {
	if m != nil {
		return m.Push
	}
	return nil
}

func (m *Job_Result) GetDeploy() *Job_DeployResult {
	if m != nil {
		return m.Deploy
	}
	return nil
}

func (m *Job_Result) GetRelease() *Job_ReleaseResult {
	if m != nil {
		return m.Release
	}
	return nil
}

type Job_Local struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job_Local) Reset()         { *m = Job_Local{} }
func (m *Job_Local) String() string { return proto.CompactTextString(m) }
func (*Job_Local) ProtoMessage()    {}
func (*Job_Local) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 2}
}

func (m *Job_Local) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_Local.Unmarshal(m, b)
}
func (m *Job_Local) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_Local.Marshal(b, m, deterministic)
}
func (m *Job_Local) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_Local.Merge(m, src)
}
func (m *Job_Local) XXX_Size() int {
	return xxx_messageInfo_Job_Local.Size(m)
}
func (m *Job_Local) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_Local.DiscardUnknown(m)
}

var xxx_messageInfo_Job_Local proto.InternalMessageInfo

// Noop operations do nothing. This is primarily used for testing.
// This operation will still download the data from the data source.
// A noop may be useful outside of testing to verify a runner is
// executing properly or can access data properly.
type Job_Noop struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job_Noop) Reset()         { *m = Job_Noop{} }
func (m *Job_Noop) String() string { return proto.CompactTextString(m) }
func (*Job_Noop) ProtoMessage()    {}
func (*Job_Noop) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 3}
}

func (m *Job_Noop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_Noop.Unmarshal(m, b)
}
func (m *Job_Noop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_Noop.Marshal(b, m, deterministic)
}
func (m *Job_Noop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_Noop.Merge(m, src)
}
func (m *Job_Noop) XXX_Size() int {
	return xxx_messageInfo_Job_Noop.Size(m)
}
func (m *Job_Noop) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_Noop.DiscardUnknown(m)
}

var xxx_messageInfo_Job_Noop proto.InternalMessageInfo

type Job_BuildOp struct {
	// Don't push the build to any configured registry.
	DisablePush          bool     `protobuf:"varint,1,opt,name=disable_push,json=disablePush,proto3" json:"disable_push,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job_BuildOp) Reset()         { *m = Job_BuildOp{} }
func (m *Job_BuildOp) String() string { return proto.CompactTextString(m) }
func (*Job_BuildOp) ProtoMessage()    {}
func (*Job_BuildOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 4}
}

func (m *Job_BuildOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_BuildOp.Unmarshal(m, b)
}
func (m *Job_BuildOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_BuildOp.Marshal(b, m, deterministic)
}
func (m *Job_BuildOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_BuildOp.Merge(m, src)
}
func (m *Job_BuildOp) XXX_Size() int {
	return xxx_messageInfo_Job_BuildOp.Size(m)
}
func (m *Job_BuildOp) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_BuildOp.DiscardUnknown(m)
}

var xxx_messageInfo_Job_BuildOp proto.InternalMessageInfo

func (m *Job_BuildOp) GetDisablePush() bool {
	if m != nil {
		return m.DisablePush
	}
	return false
}

type Job_BuildResult struct {
	// The resulting build
	Build *Build `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	// The artifact that was pushed. This will be nil if DisablePush was set.
	Push                 *PushedArtifact `protobuf:"bytes,2,opt,name=push,proto3" json:"push,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Job_BuildResult) Reset()         { *m = Job_BuildResult{} }
func (m *Job_BuildResult) String() string { return proto.CompactTextString(m) }
func (*Job_BuildResult) ProtoMessage()    {}
func (*Job_BuildResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 5}
}

func (m *Job_BuildResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_BuildResult.Unmarshal(m, b)
}
func (m *Job_BuildResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_BuildResult.Marshal(b, m, deterministic)
}
func (m *Job_BuildResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_BuildResult.Merge(m, src)
}
func (m *Job_BuildResult) XXX_Size() int {
	return xxx_messageInfo_Job_BuildResult.Size(m)
}
func (m *Job_BuildResult) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_BuildResult.DiscardUnknown(m)
}

var xxx_messageInfo_Job_BuildResult proto.InternalMessageInfo

func (m *Job_BuildResult) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *Job_BuildResult) GetPush() *PushedArtifact {
	if m != nil {
		return m.Push
	}
	return nil
}

type Job_PushOp struct {
	// Build to push
	Build                *Build   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job_PushOp) Reset()         { *m = Job_PushOp{} }
func (m *Job_PushOp) String() string { return proto.CompactTextString(m) }
func (*Job_PushOp) ProtoMessage()    {}
func (*Job_PushOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 6}
}

func (m *Job_PushOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_PushOp.Unmarshal(m, b)
}
func (m *Job_PushOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_PushOp.Marshal(b, m, deterministic)
}
func (m *Job_PushOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_PushOp.Merge(m, src)
}
func (m *Job_PushOp) XXX_Size() int {
	return xxx_messageInfo_Job_PushOp.Size(m)
}
func (m *Job_PushOp) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_PushOp.DiscardUnknown(m)
}

var xxx_messageInfo_Job_PushOp proto.InternalMessageInfo

func (m *Job_PushOp) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type Job_PushResult struct {
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Job_PushResult) Reset()         { *m = Job_PushResult{} }
func (m *Job_PushResult) String() string { return proto.CompactTextString(m) }
func (*Job_PushResult) ProtoMessage()    {}
func (*Job_PushResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 7}
}

func (m *Job_PushResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_PushResult.Unmarshal(m, b)
}
func (m *Job_PushResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_PushResult.Marshal(b, m, deterministic)
}
func (m *Job_PushResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_PushResult.Merge(m, src)
}
func (m *Job_PushResult) XXX_Size() int {
	return xxx_messageInfo_Job_PushResult.Size(m)
}
func (m *Job_PushResult) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_PushResult.DiscardUnknown(m)
}

var xxx_messageInfo_Job_PushResult proto.InternalMessageInfo

func (m *Job_PushResult) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type Job_DeployOp struct {
	// Artifact to deploy
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Job_DeployOp) Reset()         { *m = Job_DeployOp{} }
func (m *Job_DeployOp) String() string { return proto.CompactTextString(m) }
func (*Job_DeployOp) ProtoMessage()    {}
func (*Job_DeployOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 8}
}

func (m *Job_DeployOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_DeployOp.Unmarshal(m, b)
}
func (m *Job_DeployOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_DeployOp.Marshal(b, m, deterministic)
}
func (m *Job_DeployOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_DeployOp.Merge(m, src)
}
func (m *Job_DeployOp) XXX_Size() int {
	return xxx_messageInfo_Job_DeployOp.Size(m)
}
func (m *Job_DeployOp) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_DeployOp.DiscardUnknown(m)
}

var xxx_messageInfo_Job_DeployOp proto.InternalMessageInfo

func (m *Job_DeployOp) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type Job_DeployResult struct {
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Job_DeployResult) Reset()         { *m = Job_DeployResult{} }
func (m *Job_DeployResult) String() string { return proto.CompactTextString(m) }
func (*Job_DeployResult) ProtoMessage()    {}
func (*Job_DeployResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 9}
}

func (m *Job_DeployResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_DeployResult.Unmarshal(m, b)
}
func (m *Job_DeployResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_DeployResult.Marshal(b, m, deterministic)
}
func (m *Job_DeployResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_DeployResult.Merge(m, src)
}
func (m *Job_DeployResult) XXX_Size() int {
	return xxx_messageInfo_Job_DeployResult.Size(m)
}
func (m *Job_DeployResult) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_DeployResult.DiscardUnknown(m)
}

var xxx_messageInfo_Job_DeployResult proto.InternalMessageInfo

func (m *Job_DeployResult) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type Job_DestroyDeployOp struct {
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Job_DestroyDeployOp) Reset()         { *m = Job_DestroyDeployOp{} }
func (m *Job_DestroyDeployOp) String() string { return proto.CompactTextString(m) }
func (*Job_DestroyDeployOp) ProtoMessage()    {}
func (*Job_DestroyDeployOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 10}
}

func (m *Job_DestroyDeployOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_DestroyDeployOp.Unmarshal(m, b)
}
func (m *Job_DestroyDeployOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_DestroyDeployOp.Marshal(b, m, deterministic)
}
func (m *Job_DestroyDeployOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_DestroyDeployOp.Merge(m, src)
}
func (m *Job_DestroyDeployOp) XXX_Size() int {
	return xxx_messageInfo_Job_DestroyDeployOp.Size(m)
}
func (m *Job_DestroyDeployOp) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_DestroyDeployOp.DiscardUnknown(m)
}

var xxx_messageInfo_Job_DestroyDeployOp proto.InternalMessageInfo

func (m *Job_DestroyDeployOp) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type Job_ReleaseOp struct {
	TrafficSplit         *Release_Split `protobuf:"bytes,1,opt,name=traffic_split,json=trafficSplit,proto3" json:"traffic_split,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Job_ReleaseOp) Reset()         { *m = Job_ReleaseOp{} }
func (m *Job_ReleaseOp) String() string { return proto.CompactTextString(m) }
func (*Job_ReleaseOp) ProtoMessage()    {}
func (*Job_ReleaseOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 11}
}

func (m *Job_ReleaseOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_ReleaseOp.Unmarshal(m, b)
}
func (m *Job_ReleaseOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_ReleaseOp.Marshal(b, m, deterministic)
}
func (m *Job_ReleaseOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_ReleaseOp.Merge(m, src)
}
func (m *Job_ReleaseOp) XXX_Size() int {
	return xxx_messageInfo_Job_ReleaseOp.Size(m)
}
func (m *Job_ReleaseOp) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_ReleaseOp.DiscardUnknown(m)
}

var xxx_messageInfo_Job_ReleaseOp proto.InternalMessageInfo

func (m *Job_ReleaseOp) GetTrafficSplit() *Release_Split {
	if m != nil {
		return m.TrafficSplit
	}
	return nil
}

type Job_ReleaseResult struct {
	Release              *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job_ReleaseResult) Reset()         { *m = Job_ReleaseResult{} }
func (m *Job_ReleaseResult) String() string { return proto.CompactTextString(m) }
func (*Job_ReleaseResult) ProtoMessage()    {}
func (*Job_ReleaseResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12, 12}
}

func (m *Job_ReleaseResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_ReleaseResult.Unmarshal(m, b)
}
func (m *Job_ReleaseResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_ReleaseResult.Marshal(b, m, deterministic)
}
func (m *Job_ReleaseResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_ReleaseResult.Merge(m, src)
}
func (m *Job_ReleaseResult) XXX_Size() int {
	return xxx_messageInfo_Job_ReleaseResult.Size(m)
}
func (m *Job_ReleaseResult) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_ReleaseResult.DiscardUnknown(m)
}

var xxx_messageInfo_Job_ReleaseResult proto.InternalMessageInfo

func (m *Job_ReleaseResult) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type GetJobRequest struct {
	// ID of the job to request.
	JobId                string   `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{13}
}

func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (m *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(m, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type GetJobStreamRequest struct {
	JobId                string   `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobStreamRequest) Reset()         { *m = GetJobStreamRequest{} }
func (m *GetJobStreamRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamRequest) ProtoMessage()    {}
func (*GetJobStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{14}
}

func (m *GetJobStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamRequest.Unmarshal(m, b)
}
func (m *GetJobStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamRequest.Marshal(b, m, deterministic)
}
func (m *GetJobStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamRequest.Merge(m, src)
}
func (m *GetJobStreamRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamRequest.Size(m)
}
func (m *GetJobStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamRequest proto.InternalMessageInfo

func (m *GetJobStreamRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type GetJobStreamResponse struct {
	// Types that are valid to be assigned to Event:
	//	*GetJobStreamResponse_Open_
	//	*GetJobStreamResponse_State_
	//	*GetJobStreamResponse_Terminal_
	//	*GetJobStreamResponse_Error_
	//	*GetJobStreamResponse_Complete_
	Event                isGetJobStreamResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetJobStreamResponse) Reset()         { *m = GetJobStreamResponse{} }
func (m *GetJobStreamResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamResponse) ProtoMessage()    {}
func (*GetJobStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15}
}

func (m *GetJobStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamResponse.Unmarshal(m, b)
}
func (m *GetJobStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamResponse.Marshal(b, m, deterministic)
}
func (m *GetJobStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamResponse.Merge(m, src)
}
func (m *GetJobStreamResponse) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamResponse.Size(m)
}
func (m *GetJobStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamResponse proto.InternalMessageInfo

type isGetJobStreamResponse_Event interface {
	isGetJobStreamResponse_Event()
}

type GetJobStreamResponse_Open_ struct {
	Open *GetJobStreamResponse_Open `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

type GetJobStreamResponse_State_ struct {
	State *GetJobStreamResponse_State `protobuf:"bytes,2,opt,name=state,proto3,oneof"`
}

type GetJobStreamResponse_Terminal_ struct {
	Terminal *GetJobStreamResponse_Terminal `protobuf:"bytes,3,opt,name=terminal,proto3,oneof"`
}

type GetJobStreamResponse_Error_ struct {
	Error *GetJobStreamResponse_Error `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

type GetJobStreamResponse_Complete_ struct {
	Complete *GetJobStreamResponse_Complete `protobuf:"bytes,5,opt,name=complete,proto3,oneof"`
}

func (*GetJobStreamResponse_Open_) isGetJobStreamResponse_Event() {}

func (*GetJobStreamResponse_State_) isGetJobStreamResponse_Event() {}

func (*GetJobStreamResponse_Terminal_) isGetJobStreamResponse_Event() {}

func (*GetJobStreamResponse_Error_) isGetJobStreamResponse_Event() {}

func (*GetJobStreamResponse_Complete_) isGetJobStreamResponse_Event() {}

func (m *GetJobStreamResponse) GetEvent() isGetJobStreamResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *GetJobStreamResponse) GetOpen() *GetJobStreamResponse_Open {
	if x, ok := m.GetEvent().(*GetJobStreamResponse_Open_); ok {
		return x.Open
	}
	return nil
}

func (m *GetJobStreamResponse) GetState() *GetJobStreamResponse_State {
	if x, ok := m.GetEvent().(*GetJobStreamResponse_State_); ok {
		return x.State
	}
	return nil
}

func (m *GetJobStreamResponse) GetTerminal() *GetJobStreamResponse_Terminal {
	if x, ok := m.GetEvent().(*GetJobStreamResponse_Terminal_); ok {
		return x.Terminal
	}
	return nil
}

func (m *GetJobStreamResponse) GetError() *GetJobStreamResponse_Error {
	if x, ok := m.GetEvent().(*GetJobStreamResponse_Error_); ok {
		return x.Error
	}
	return nil
}

func (m *GetJobStreamResponse) GetComplete() *GetJobStreamResponse_Complete {
	if x, ok := m.GetEvent().(*GetJobStreamResponse_Complete_); ok {
		return x.Complete
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetJobStreamResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetJobStreamResponse_Open_)(nil),
		(*GetJobStreamResponse_State_)(nil),
		(*GetJobStreamResponse_Terminal_)(nil),
		(*GetJobStreamResponse_Error_)(nil),
		(*GetJobStreamResponse_Complete_)(nil),
	}
}

type GetJobStreamResponse_Open struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobStreamResponse_Open) Reset()         { *m = GetJobStreamResponse_Open{} }
func (m *GetJobStreamResponse_Open) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamResponse_Open) ProtoMessage()    {}
func (*GetJobStreamResponse_Open) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15, 0}
}

func (m *GetJobStreamResponse_Open) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamResponse_Open.Unmarshal(m, b)
}
func (m *GetJobStreamResponse_Open) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamResponse_Open.Marshal(b, m, deterministic)
}
func (m *GetJobStreamResponse_Open) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamResponse_Open.Merge(m, src)
}
func (m *GetJobStreamResponse_Open) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamResponse_Open.Size(m)
}
func (m *GetJobStreamResponse_Open) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamResponse_Open.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamResponse_Open proto.InternalMessageInfo

type GetJobStreamResponse_State struct {
	// previous and current are the previous and current states, respectively.
	Previous Job_State `protobuf:"varint,1,opt,name=previous,proto3,enum=hashicorp.waypoint.Job_State" json:"previous,omitempty"`
	Current  Job_State `protobuf:"varint,2,opt,name=current,proto3,enum=hashicorp.waypoint.Job_State" json:"current,omitempty"`
	// The full updated job is also sent because additional fields may be
	// set depending on the state (such as the assigned runner, assignment
	// times, etc.)
	Job                  *Job     `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobStreamResponse_State) Reset()         { *m = GetJobStreamResponse_State{} }
func (m *GetJobStreamResponse_State) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamResponse_State) ProtoMessage()    {}
func (*GetJobStreamResponse_State) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15, 1}
}

func (m *GetJobStreamResponse_State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamResponse_State.Unmarshal(m, b)
}
func (m *GetJobStreamResponse_State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamResponse_State.Marshal(b, m, deterministic)
}
func (m *GetJobStreamResponse_State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamResponse_State.Merge(m, src)
}
func (m *GetJobStreamResponse_State) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamResponse_State.Size(m)
}
func (m *GetJobStreamResponse_State) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamResponse_State.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamResponse_State proto.InternalMessageInfo

func (m *GetJobStreamResponse_State) GetPrevious() Job_State {
	if m != nil {
		return m.Previous
	}
	return Job_UNKNOWN
}

func (m *GetJobStreamResponse_State) GetCurrent() Job_State {
	if m != nil {
		return m.Current
	}
	return Job_UNKNOWN
}

func (m *GetJobStreamResponse_State) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type GetJobStreamResponse_Terminal struct {
	// lines are each line of terminal output in order for this batch
	Lines []*GetJobStreamResponse_Terminal_Line `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
	// buffered if true signifies that the data being sent is from the
	// server buffer and is historical vs real-time since the stream was
	// opened. If this is true, all lines are buffered. We will never mix
	// buffered and non-buffered lines.
	Buffered             bool     `protobuf:"varint,2,opt,name=buffered,proto3" json:"buffered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobStreamResponse_Terminal) Reset()         { *m = GetJobStreamResponse_Terminal{} }
func (m *GetJobStreamResponse_Terminal) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamResponse_Terminal) ProtoMessage()    {}
func (*GetJobStreamResponse_Terminal) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15, 2}
}

func (m *GetJobStreamResponse_Terminal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamResponse_Terminal.Unmarshal(m, b)
}
func (m *GetJobStreamResponse_Terminal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamResponse_Terminal.Marshal(b, m, deterministic)
}
func (m *GetJobStreamResponse_Terminal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamResponse_Terminal.Merge(m, src)
}
func (m *GetJobStreamResponse_Terminal) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamResponse_Terminal.Size(m)
}
func (m *GetJobStreamResponse_Terminal) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamResponse_Terminal.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamResponse_Terminal proto.InternalMessageInfo

func (m *GetJobStreamResponse_Terminal) GetLines() []*GetJobStreamResponse_Terminal_Line {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *GetJobStreamResponse_Terminal) GetBuffered() bool {
	if m != nil {
		return m.Buffered
	}
	return false
}

type GetJobStreamResponse_Terminal_Line struct {
	// raw is the uncolorized, minimally formatted output.
	Raw string `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	// line message is potentially formatted with ANSI escape sequences.
	Line string `protobuf:"bytes,2,opt,name=line,proto3" json:"line,omitempty"`
	// timestamp of the terminal line as seen by the runner. This might be
	// skewed from the server or the client but relative to all other
	// line output, it will be accurate.
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetJobStreamResponse_Terminal_Line) Reset()         { *m = GetJobStreamResponse_Terminal_Line{} }
func (m *GetJobStreamResponse_Terminal_Line) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamResponse_Terminal_Line) ProtoMessage()    {}
func (*GetJobStreamResponse_Terminal_Line) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15, 2, 0}
}

func (m *GetJobStreamResponse_Terminal_Line) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamResponse_Terminal_Line.Unmarshal(m, b)
}
func (m *GetJobStreamResponse_Terminal_Line) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamResponse_Terminal_Line.Marshal(b, m, deterministic)
}
func (m *GetJobStreamResponse_Terminal_Line) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamResponse_Terminal_Line.Merge(m, src)
}
func (m *GetJobStreamResponse_Terminal_Line) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamResponse_Terminal_Line.Size(m)
}
func (m *GetJobStreamResponse_Terminal_Line) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamResponse_Terminal_Line.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamResponse_Terminal_Line proto.InternalMessageInfo

func (m *GetJobStreamResponse_Terminal_Line) GetRaw() string {
	if m != nil {
		return m.Raw
	}
	return ""
}

func (m *GetJobStreamResponse_Terminal_Line) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

func (m *GetJobStreamResponse_Terminal_Line) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type GetJobStreamResponse_Error struct {
	Error                *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetJobStreamResponse_Error) Reset()         { *m = GetJobStreamResponse_Error{} }
func (m *GetJobStreamResponse_Error) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamResponse_Error) ProtoMessage()    {}
func (*GetJobStreamResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15, 3}
}

func (m *GetJobStreamResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamResponse_Error.Unmarshal(m, b)
}
func (m *GetJobStreamResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamResponse_Error.Marshal(b, m, deterministic)
}
func (m *GetJobStreamResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamResponse_Error.Merge(m, src)
}
func (m *GetJobStreamResponse_Error) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamResponse_Error.Size(m)
}
func (m *GetJobStreamResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamResponse_Error proto.InternalMessageInfo

func (m *GetJobStreamResponse_Error) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetJobStreamResponse_Complete struct {
	// error, if set, is an error that occurred as part of the job execution
	// and resulted in job termination. This is different than the "error"
	// event which is an error in the stream itself.
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// Result will be set to the final result of the job execution, if any.
	Result               *Job_Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetJobStreamResponse_Complete) Reset()         { *m = GetJobStreamResponse_Complete{} }
func (m *GetJobStreamResponse_Complete) String() string { return proto.CompactTextString(m) }
func (*GetJobStreamResponse_Complete) ProtoMessage()    {}
func (*GetJobStreamResponse_Complete) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15, 4}
}

func (m *GetJobStreamResponse_Complete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobStreamResponse_Complete.Unmarshal(m, b)
}
func (m *GetJobStreamResponse_Complete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobStreamResponse_Complete.Marshal(b, m, deterministic)
}
func (m *GetJobStreamResponse_Complete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobStreamResponse_Complete.Merge(m, src)
}
func (m *GetJobStreamResponse_Complete) XXX_Size() int {
	return xxx_messageInfo_GetJobStreamResponse_Complete.Size(m)
}
func (m *GetJobStreamResponse_Complete) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobStreamResponse_Complete.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobStreamResponse_Complete proto.InternalMessageInfo

func (m *GetJobStreamResponse_Complete) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetJobStreamResponse_Complete) GetResult() *Job_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type Runner struct {
	// id is a unique ID generated by the runner. This should be a UUID or some
	// other guaranteed unique mechanism. This is not an auth mechanism, just
	// a way to associate an ID to a runner.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The runner will only be assigned jobs that directly target this
	// runner by ID. This is used by local runners to prevent external
	// jobs from being assigned to them.
	ByIdOnly bool `protobuf:"varint,2,opt,name=by_id_only,json=byIdOnly,proto3" json:"by_id_only,omitempty"`
	// Components are the list of components that the runner supports. This
	// is used to match jobs to this runner.
	Components           []*Component `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Runner) Reset()         { *m = Runner{} }
func (m *Runner) String() string { return proto.CompactTextString(m) }
func (*Runner) ProtoMessage()    {}
func (*Runner) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{16}
}

func (m *Runner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Runner.Unmarshal(m, b)
}
func (m *Runner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Runner.Marshal(b, m, deterministic)
}
func (m *Runner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Runner.Merge(m, src)
}
func (m *Runner) XXX_Size() int {
	return xxx_messageInfo_Runner.Size(m)
}
func (m *Runner) XXX_DiscardUnknown() {
	xxx_messageInfo_Runner.DiscardUnknown(m)
}

var xxx_messageInfo_Runner proto.InternalMessageInfo

func (m *Runner) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Runner) GetByIdOnly() bool {
	if m != nil {
		return m.ByIdOnly
	}
	return false
}

func (m *Runner) GetComponents() []*Component {
	if m != nil {
		return m.Components
	}
	return nil
}

type RunnerConfigRequest struct {
	// Types that are valid to be assigned to Event:
	//	*RunnerConfigRequest_Open_
	Event                isRunnerConfigRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RunnerConfigRequest) Reset()         { *m = RunnerConfigRequest{} }
func (m *RunnerConfigRequest) String() string { return proto.CompactTextString(m) }
func (*RunnerConfigRequest) ProtoMessage()    {}
func (*RunnerConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{17}
}

func (m *RunnerConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerConfigRequest.Unmarshal(m, b)
}
func (m *RunnerConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerConfigRequest.Marshal(b, m, deterministic)
}
func (m *RunnerConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerConfigRequest.Merge(m, src)
}
func (m *RunnerConfigRequest) XXX_Size() int {
	return xxx_messageInfo_RunnerConfigRequest.Size(m)
}
func (m *RunnerConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerConfigRequest proto.InternalMessageInfo

type isRunnerConfigRequest_Event interface {
	isRunnerConfigRequest_Event()
}

type RunnerConfigRequest_Open_ struct {
	Open *RunnerConfigRequest_Open `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

func (*RunnerConfigRequest_Open_) isRunnerConfigRequest_Event() {}

func (m *RunnerConfigRequest) GetEvent() isRunnerConfigRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *RunnerConfigRequest) GetOpen() *RunnerConfigRequest_Open {
	if x, ok := m.GetEvent().(*RunnerConfigRequest_Open_); ok {
		return x.Open
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RunnerConfigRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RunnerConfigRequest_Open_)(nil),
	}
}

type RunnerConfigRequest_Open struct {
	// Runner to register. See Runner for what fields can be set.
	Runner               *Runner  `protobuf:"bytes,1,opt,name=runner,proto3" json:"runner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunnerConfigRequest_Open) Reset()         { *m = RunnerConfigRequest_Open{} }
func (m *RunnerConfigRequest_Open) String() string { return proto.CompactTextString(m) }
func (*RunnerConfigRequest_Open) ProtoMessage()    {}
func (*RunnerConfigRequest_Open) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{17, 0}
}

func (m *RunnerConfigRequest_Open) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerConfigRequest_Open.Unmarshal(m, b)
}
func (m *RunnerConfigRequest_Open) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerConfigRequest_Open.Marshal(b, m, deterministic)
}
func (m *RunnerConfigRequest_Open) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerConfigRequest_Open.Merge(m, src)
}
func (m *RunnerConfigRequest_Open) XXX_Size() int {
	return xxx_messageInfo_RunnerConfigRequest_Open.Size(m)
}
func (m *RunnerConfigRequest_Open) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerConfigRequest_Open.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerConfigRequest_Open proto.InternalMessageInfo

func (m *RunnerConfigRequest_Open) GetRunner() *Runner {
	if m != nil {
		return m.Runner
	}
	return nil
}

type RunnerConfigResponse struct {
	// config is any updated configuration for the runner.
	Config               *RunnerConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RunnerConfigResponse) Reset()         { *m = RunnerConfigResponse{} }
func (m *RunnerConfigResponse) String() string { return proto.CompactTextString(m) }
func (*RunnerConfigResponse) ProtoMessage()    {}
func (*RunnerConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{18}
}

func (m *RunnerConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerConfigResponse.Unmarshal(m, b)
}
func (m *RunnerConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerConfigResponse.Marshal(b, m, deterministic)
}
func (m *RunnerConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerConfigResponse.Merge(m, src)
}
func (m *RunnerConfigResponse) XXX_Size() int {
	return xxx_messageInfo_RunnerConfigResponse.Size(m)
}
func (m *RunnerConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerConfigResponse proto.InternalMessageInfo

func (m *RunnerConfigResponse) GetConfig() *RunnerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type RunnerConfig struct {
	// The configuration for the runner. Any locally set runner config will
	// take priority in a conflict. This allows operators to setup runners
	// with specific configuration without fear that the server will override
	// them.
	ConfigVars           []*ConfigVar `protobuf:"bytes,1,rep,name=config_vars,json=configVars,proto3" json:"config_vars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RunnerConfig) Reset()         { *m = RunnerConfig{} }
func (m *RunnerConfig) String() string { return proto.CompactTextString(m) }
func (*RunnerConfig) ProtoMessage()    {}
func (*RunnerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{19}
}

func (m *RunnerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerConfig.Unmarshal(m, b)
}
func (m *RunnerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerConfig.Marshal(b, m, deterministic)
}
func (m *RunnerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerConfig.Merge(m, src)
}
func (m *RunnerConfig) XXX_Size() int {
	return xxx_messageInfo_RunnerConfig.Size(m)
}
func (m *RunnerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerConfig proto.InternalMessageInfo

func (m *RunnerConfig) GetConfigVars() []*ConfigVar {
	if m != nil {
		return m.ConfigVars
	}
	return nil
}

type RunnerJobStreamRequest struct {
	// Types that are valid to be assigned to Event:
	//	*RunnerJobStreamRequest_Request_
	//	*RunnerJobStreamRequest_Ack_
	//	*RunnerJobStreamRequest_Complete_
	//	*RunnerJobStreamRequest_Error_
	//	*RunnerJobStreamRequest_Terminal
	Event                isRunnerJobStreamRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RunnerJobStreamRequest) Reset()         { *m = RunnerJobStreamRequest{} }
func (m *RunnerJobStreamRequest) String() string { return proto.CompactTextString(m) }
func (*RunnerJobStreamRequest) ProtoMessage()    {}
func (*RunnerJobStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20}
}

func (m *RunnerJobStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerJobStreamRequest.Unmarshal(m, b)
}
func (m *RunnerJobStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerJobStreamRequest.Marshal(b, m, deterministic)
}
func (m *RunnerJobStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerJobStreamRequest.Merge(m, src)
}
func (m *RunnerJobStreamRequest) XXX_Size() int {
	return xxx_messageInfo_RunnerJobStreamRequest.Size(m)
}
func (m *RunnerJobStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerJobStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerJobStreamRequest proto.InternalMessageInfo

type isRunnerJobStreamRequest_Event interface {
	isRunnerJobStreamRequest_Event()
}

type RunnerJobStreamRequest_Request_ struct {
	Request *RunnerJobStreamRequest_Request `protobuf:"bytes,1,opt,name=request,proto3,oneof"`
}

type RunnerJobStreamRequest_Ack_ struct {
	Ack *RunnerJobStreamRequest_Ack `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

type RunnerJobStreamRequest_Complete_ struct {
	Complete *RunnerJobStreamRequest_Complete `protobuf:"bytes,3,opt,name=complete,proto3,oneof"`
}

type RunnerJobStreamRequest_Error_ struct {
	Error *RunnerJobStreamRequest_Error `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

type RunnerJobStreamRequest_Terminal struct {
	Terminal *GetJobStreamResponse_Terminal `protobuf:"bytes,5,opt,name=terminal,proto3,oneof"`
}

func (*RunnerJobStreamRequest_Request_) isRunnerJobStreamRequest_Event() {}

func (*RunnerJobStreamRequest_Ack_) isRunnerJobStreamRequest_Event() {}

func (*RunnerJobStreamRequest_Complete_) isRunnerJobStreamRequest_Event() {}

func (*RunnerJobStreamRequest_Error_) isRunnerJobStreamRequest_Event() {}

func (*RunnerJobStreamRequest_Terminal) isRunnerJobStreamRequest_Event() {}

func (m *RunnerJobStreamRequest) GetEvent() isRunnerJobStreamRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *RunnerJobStreamRequest) GetRequest() *RunnerJobStreamRequest_Request {
	if x, ok := m.GetEvent().(*RunnerJobStreamRequest_Request_); ok {
		return x.Request
	}
	return nil
}

func (m *RunnerJobStreamRequest) GetAck() *RunnerJobStreamRequest_Ack {
	if x, ok := m.GetEvent().(*RunnerJobStreamRequest_Ack_); ok {
		return x.Ack
	}
	return nil
}

func (m *RunnerJobStreamRequest) GetComplete() *RunnerJobStreamRequest_Complete {
	if x, ok := m.GetEvent().(*RunnerJobStreamRequest_Complete_); ok {
		return x.Complete
	}
	return nil
}

func (m *RunnerJobStreamRequest) GetError() *RunnerJobStreamRequest_Error {
	if x, ok := m.GetEvent().(*RunnerJobStreamRequest_Error_); ok {
		return x.Error
	}
	return nil
}

func (m *RunnerJobStreamRequest) GetTerminal() *GetJobStreamResponse_Terminal {
	if x, ok := m.GetEvent().(*RunnerJobStreamRequest_Terminal); ok {
		return x.Terminal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RunnerJobStreamRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RunnerJobStreamRequest_Request_)(nil),
		(*RunnerJobStreamRequest_Ack_)(nil),
		(*RunnerJobStreamRequest_Complete_)(nil),
		(*RunnerJobStreamRequest_Error_)(nil),
		(*RunnerJobStreamRequest_Terminal)(nil),
	}
}

type RunnerJobStreamRequest_Request struct {
	RunnerId             string   `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunnerJobStreamRequest_Request) Reset()         { *m = RunnerJobStreamRequest_Request{} }
func (m *RunnerJobStreamRequest_Request) String() string { return proto.CompactTextString(m) }
func (*RunnerJobStreamRequest_Request) ProtoMessage()    {}
func (*RunnerJobStreamRequest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20, 0}
}

func (m *RunnerJobStreamRequest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerJobStreamRequest_Request.Unmarshal(m, b)
}
func (m *RunnerJobStreamRequest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerJobStreamRequest_Request.Marshal(b, m, deterministic)
}
func (m *RunnerJobStreamRequest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerJobStreamRequest_Request.Merge(m, src)
}
func (m *RunnerJobStreamRequest_Request) XXX_Size() int {
	return xxx_messageInfo_RunnerJobStreamRequest_Request.Size(m)
}
func (m *RunnerJobStreamRequest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerJobStreamRequest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerJobStreamRequest_Request proto.InternalMessageInfo

func (m *RunnerJobStreamRequest_Request) GetRunnerId() string {
	if m != nil {
		return m.RunnerId
	}
	return ""
}

type RunnerJobStreamRequest_Ack struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunnerJobStreamRequest_Ack) Reset()         { *m = RunnerJobStreamRequest_Ack{} }
func (m *RunnerJobStreamRequest_Ack) String() string { return proto.CompactTextString(m) }
func (*RunnerJobStreamRequest_Ack) ProtoMessage()    {}
func (*RunnerJobStreamRequest_Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20, 1}
}

func (m *RunnerJobStreamRequest_Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerJobStreamRequest_Ack.Unmarshal(m, b)
}
func (m *RunnerJobStreamRequest_Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerJobStreamRequest_Ack.Marshal(b, m, deterministic)
}
func (m *RunnerJobStreamRequest_Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerJobStreamRequest_Ack.Merge(m, src)
}
func (m *RunnerJobStreamRequest_Ack) XXX_Size() int {
	return xxx_messageInfo_RunnerJobStreamRequest_Ack.Size(m)
}
func (m *RunnerJobStreamRequest_Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerJobStreamRequest_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerJobStreamRequest_Ack proto.InternalMessageInfo

type RunnerJobStreamRequest_Complete struct {
	Result               *Job_Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RunnerJobStreamRequest_Complete) Reset()         { *m = RunnerJobStreamRequest_Complete{} }
func (m *RunnerJobStreamRequest_Complete) String() string { return proto.CompactTextString(m) }
func (*RunnerJobStreamRequest_Complete) ProtoMessage()    {}
func (*RunnerJobStreamRequest_Complete) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20, 2}
}

func (m *RunnerJobStreamRequest_Complete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerJobStreamRequest_Complete.Unmarshal(m, b)
}
func (m *RunnerJobStreamRequest_Complete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerJobStreamRequest_Complete.Marshal(b, m, deterministic)
}
func (m *RunnerJobStreamRequest_Complete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerJobStreamRequest_Complete.Merge(m, src)
}
func (m *RunnerJobStreamRequest_Complete) XXX_Size() int {
	return xxx_messageInfo_RunnerJobStreamRequest_Complete.Size(m)
}
func (m *RunnerJobStreamRequest_Complete) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerJobStreamRequest_Complete.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerJobStreamRequest_Complete proto.InternalMessageInfo

func (m *RunnerJobStreamRequest_Complete) GetResult() *Job_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type RunnerJobStreamRequest_Error struct {
	Error                *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RunnerJobStreamRequest_Error) Reset()         { *m = RunnerJobStreamRequest_Error{} }
func (m *RunnerJobStreamRequest_Error) String() string { return proto.CompactTextString(m) }
func (*RunnerJobStreamRequest_Error) ProtoMessage()    {}
func (*RunnerJobStreamRequest_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{20, 3}
}

func (m *RunnerJobStreamRequest_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerJobStreamRequest_Error.Unmarshal(m, b)
}
func (m *RunnerJobStreamRequest_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerJobStreamRequest_Error.Marshal(b, m, deterministic)
}
func (m *RunnerJobStreamRequest_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerJobStreamRequest_Error.Merge(m, src)
}
func (m *RunnerJobStreamRequest_Error) XXX_Size() int {
	return xxx_messageInfo_RunnerJobStreamRequest_Error.Size(m)
}
func (m *RunnerJobStreamRequest_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerJobStreamRequest_Error.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerJobStreamRequest_Error proto.InternalMessageInfo

func (m *RunnerJobStreamRequest_Error) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

type RunnerJobStreamResponse struct {
	// Types that are valid to be assigned to Event:
	//	*RunnerJobStreamResponse_Assignment
	Event                isRunnerJobStreamResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RunnerJobStreamResponse) Reset()         { *m = RunnerJobStreamResponse{} }
func (m *RunnerJobStreamResponse) String() string { return proto.CompactTextString(m) }
func (*RunnerJobStreamResponse) ProtoMessage()    {}
func (*RunnerJobStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{21}
}

func (m *RunnerJobStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerJobStreamResponse.Unmarshal(m, b)
}
func (m *RunnerJobStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerJobStreamResponse.Marshal(b, m, deterministic)
}
func (m *RunnerJobStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerJobStreamResponse.Merge(m, src)
}
func (m *RunnerJobStreamResponse) XXX_Size() int {
	return xxx_messageInfo_RunnerJobStreamResponse.Size(m)
}
func (m *RunnerJobStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerJobStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerJobStreamResponse proto.InternalMessageInfo

type isRunnerJobStreamResponse_Event interface {
	isRunnerJobStreamResponse_Event()
}

type RunnerJobStreamResponse_Assignment struct {
	Assignment *RunnerJobStreamResponse_JobAssignment `protobuf:"bytes,1,opt,name=assignment,proto3,oneof"`
}

func (*RunnerJobStreamResponse_Assignment) isRunnerJobStreamResponse_Event() {}

func (m *RunnerJobStreamResponse) GetEvent() isRunnerJobStreamResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *RunnerJobStreamResponse) GetAssignment() *RunnerJobStreamResponse_JobAssignment {
	if x, ok := m.GetEvent().(*RunnerJobStreamResponse_Assignment); ok {
		return x.Assignment
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RunnerJobStreamResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RunnerJobStreamResponse_Assignment)(nil),
	}
}

type RunnerJobStreamResponse_JobAssignment struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunnerJobStreamResponse_JobAssignment) Reset()         { *m = RunnerJobStreamResponse_JobAssignment{} }
func (m *RunnerJobStreamResponse_JobAssignment) String() string { return proto.CompactTextString(m) }
func (*RunnerJobStreamResponse_JobAssignment) ProtoMessage()    {}
func (*RunnerJobStreamResponse_JobAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{21, 0}
}

func (m *RunnerJobStreamResponse_JobAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerJobStreamResponse_JobAssignment.Unmarshal(m, b)
}
func (m *RunnerJobStreamResponse_JobAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerJobStreamResponse_JobAssignment.Marshal(b, m, deterministic)
}
func (m *RunnerJobStreamResponse_JobAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerJobStreamResponse_JobAssignment.Merge(m, src)
}
func (m *RunnerJobStreamResponse_JobAssignment) XXX_Size() int {
	return xxx_messageInfo_RunnerJobStreamResponse_JobAssignment.Size(m)
}
func (m *RunnerJobStreamResponse_JobAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerJobStreamResponse_JobAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerJobStreamResponse_JobAssignment proto.InternalMessageInfo

func (m *RunnerJobStreamResponse_JobAssignment) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type RunnerGetDeploymentConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunnerGetDeploymentConfigRequest) Reset()         { *m = RunnerGetDeploymentConfigRequest{} }
func (m *RunnerGetDeploymentConfigRequest) String() string { return proto.CompactTextString(m) }
func (*RunnerGetDeploymentConfigRequest) ProtoMessage()    {}
func (*RunnerGetDeploymentConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{22}
}

func (m *RunnerGetDeploymentConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerGetDeploymentConfigRequest.Unmarshal(m, b)
}
func (m *RunnerGetDeploymentConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerGetDeploymentConfigRequest.Marshal(b, m, deterministic)
}
func (m *RunnerGetDeploymentConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerGetDeploymentConfigRequest.Merge(m, src)
}
func (m *RunnerGetDeploymentConfigRequest) XXX_Size() int {
	return xxx_messageInfo_RunnerGetDeploymentConfigRequest.Size(m)
}
func (m *RunnerGetDeploymentConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerGetDeploymentConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerGetDeploymentConfigRequest proto.InternalMessageInfo

type RunnerGetDeploymentConfigResponse struct {
	ServerAddr           string   `protobuf:"bytes,1,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	ServerInsecure       bool     `protobuf:"varint,2,opt,name=server_insecure,json=serverInsecure,proto3" json:"server_insecure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunnerGetDeploymentConfigResponse) Reset()         { *m = RunnerGetDeploymentConfigResponse{} }
func (m *RunnerGetDeploymentConfigResponse) String() string { return proto.CompactTextString(m) }
func (*RunnerGetDeploymentConfigResponse) ProtoMessage()    {}
func (*RunnerGetDeploymentConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{23}
}

func (m *RunnerGetDeploymentConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunnerGetDeploymentConfigResponse.Unmarshal(m, b)
}
func (m *RunnerGetDeploymentConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunnerGetDeploymentConfigResponse.Marshal(b, m, deterministic)
}
func (m *RunnerGetDeploymentConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunnerGetDeploymentConfigResponse.Merge(m, src)
}
func (m *RunnerGetDeploymentConfigResponse) XXX_Size() int {
	return xxx_messageInfo_RunnerGetDeploymentConfigResponse.Size(m)
}
func (m *RunnerGetDeploymentConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunnerGetDeploymentConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunnerGetDeploymentConfigResponse proto.InternalMessageInfo

func (m *RunnerGetDeploymentConfigResponse) GetServerAddr() string {
	if m != nil {
		return m.ServerAddr
	}
	return ""
}

func (m *RunnerGetDeploymentConfigResponse) GetServerInsecure() bool {
	if m != nil {
		return m.ServerInsecure
	}
	return false
}

type GetRunnerRequest struct {
	// ID of the runner to request.
	RunnerId             string   `protobuf:"bytes,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRunnerRequest) Reset()         { *m = GetRunnerRequest{} }
func (m *GetRunnerRequest) String() string { return proto.CompactTextString(m) }
func (*GetRunnerRequest) ProtoMessage()    {}
func (*GetRunnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{24}
}

func (m *GetRunnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunnerRequest.Unmarshal(m, b)
}
func (m *GetRunnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunnerRequest.Marshal(b, m, deterministic)
}
func (m *GetRunnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunnerRequest.Merge(m, src)
}
func (m *GetRunnerRequest) XXX_Size() int {
	return xxx_messageInfo_GetRunnerRequest.Size(m)
}
func (m *GetRunnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunnerRequest proto.InternalMessageInfo

func (m *GetRunnerRequest) GetRunnerId() string {
	if m != nil {
		return m.RunnerId
	}
	return ""
}

type SetServerConfigRequest struct {
	Config               *ServerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetServerConfigRequest) Reset()         { *m = SetServerConfigRequest{} }
func (m *SetServerConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetServerConfigRequest) ProtoMessage()    {}
func (*SetServerConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{25}
}

func (m *SetServerConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetServerConfigRequest.Unmarshal(m, b)
}
func (m *SetServerConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetServerConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetServerConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetServerConfigRequest.Merge(m, src)
}
func (m *SetServerConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetServerConfigRequest.Size(m)
}
func (m *SetServerConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetServerConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetServerConfigRequest proto.InternalMessageInfo

func (m *SetServerConfigRequest) GetConfig() *ServerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// ServerConfig is the configuration for the server that can be read and
// set online. This differs from the configuration used to start the server
// since some settings can only be set via the file vs. the API.
type ServerConfig struct {
	// The addresses that are advertised for entrypoints. These define how
	// applications reach back to the server. Currently you may only set
	// EXACTLY ONE address. In the future, we'll support multiple advertise
	// addrs and more controls over which are advertised when.
	AdvertiseAddrs       []*ServerConfig_AdvertiseAddr `protobuf:"bytes,1,rep,name=advertise_addrs,json=advertiseAddrs,proto3" json:"advertise_addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ServerConfig) Reset()         { *m = ServerConfig{} }
func (m *ServerConfig) String() string { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()    {}
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{26}
}

func (m *ServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfig.Unmarshal(m, b)
}
func (m *ServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfig.Marshal(b, m, deterministic)
}
func (m *ServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfig.Merge(m, src)
}
func (m *ServerConfig) XXX_Size() int {
	return xxx_messageInfo_ServerConfig.Size(m)
}
func (m *ServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfig proto.InternalMessageInfo

func (m *ServerConfig) GetAdvertiseAddrs() []*ServerConfig_AdvertiseAddr {
	if m != nil {
		return m.AdvertiseAddrs
	}
	return nil
}

type ServerConfig_AdvertiseAddr struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Insecure             bool     `protobuf:"varint,2,opt,name=insecure,proto3" json:"insecure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerConfig_AdvertiseAddr) Reset()         { *m = ServerConfig_AdvertiseAddr{} }
func (m *ServerConfig_AdvertiseAddr) String() string { return proto.CompactTextString(m) }
func (*ServerConfig_AdvertiseAddr) ProtoMessage()    {}
func (*ServerConfig_AdvertiseAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{26, 0}
}

func (m *ServerConfig_AdvertiseAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfig_AdvertiseAddr.Unmarshal(m, b)
}
func (m *ServerConfig_AdvertiseAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfig_AdvertiseAddr.Marshal(b, m, deterministic)
}
func (m *ServerConfig_AdvertiseAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfig_AdvertiseAddr.Merge(m, src)
}
func (m *ServerConfig_AdvertiseAddr) XXX_Size() int {
	return xxx_messageInfo_ServerConfig_AdvertiseAddr.Size(m)
}
func (m *ServerConfig_AdvertiseAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfig_AdvertiseAddr.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfig_AdvertiseAddr proto.InternalMessageInfo

func (m *ServerConfig_AdvertiseAddr) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ServerConfig_AdvertiseAddr) GetInsecure() bool {
	if m != nil {
		return m.Insecure
	}
	return false
}

type UpsertBuildRequest struct {
	// Build to upsert. If an ID is not set, this will be an insert operation.
	// If the ID is set, that build is updated. It is an error if an update
	// is requested on a non-existent build.
	Build                *Build   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertBuildRequest) Reset()         { *m = UpsertBuildRequest{} }
func (m *UpsertBuildRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertBuildRequest) ProtoMessage()    {}
func (*UpsertBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{27}
}

func (m *UpsertBuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertBuildRequest.Unmarshal(m, b)
}
func (m *UpsertBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertBuildRequest.Marshal(b, m, deterministic)
}
func (m *UpsertBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertBuildRequest.Merge(m, src)
}
func (m *UpsertBuildRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertBuildRequest.Size(m)
}
func (m *UpsertBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertBuildRequest proto.InternalMessageInfo

func (m *UpsertBuildRequest) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type UpsertBuildResponse struct {
	Build                *Build   `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertBuildResponse) Reset()         { *m = UpsertBuildResponse{} }
func (m *UpsertBuildResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertBuildResponse) ProtoMessage()    {}
func (*UpsertBuildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{28}
}

func (m *UpsertBuildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertBuildResponse.Unmarshal(m, b)
}
func (m *UpsertBuildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertBuildResponse.Marshal(b, m, deterministic)
}
func (m *UpsertBuildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertBuildResponse.Merge(m, src)
}
func (m *UpsertBuildResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertBuildResponse.Size(m)
}
func (m *UpsertBuildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertBuildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertBuildResponse proto.InternalMessageInfo

func (m *UpsertBuildResponse) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

type ListBuildsRequest struct {
	// The application whose builds to list. This must be set.
	Application *Ref_Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	// The workspace to list builds for. If this isn't set, then all builds
	// for the other filters are listed.
	Workspace            *Ref_Workspace `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListBuildsRequest) Reset()         { *m = ListBuildsRequest{} }
func (m *ListBuildsRequest) String() string { return proto.CompactTextString(m) }
func (*ListBuildsRequest) ProtoMessage()    {}
func (*ListBuildsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{29}
}

func (m *ListBuildsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBuildsRequest.Unmarshal(m, b)
}
func (m *ListBuildsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBuildsRequest.Marshal(b, m, deterministic)
}
func (m *ListBuildsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBuildsRequest.Merge(m, src)
}
func (m *ListBuildsRequest) XXX_Size() int {
	return xxx_messageInfo_ListBuildsRequest.Size(m)
}
func (m *ListBuildsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBuildsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBuildsRequest proto.InternalMessageInfo

func (m *ListBuildsRequest) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *ListBuildsRequest) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

type ListBuildsResponse struct {
	// builds is the list of builds.
	Builds               []*Build `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBuildsResponse) Reset()         { *m = ListBuildsResponse{} }
func (m *ListBuildsResponse) String() string { return proto.CompactTextString(m) }
func (*ListBuildsResponse) ProtoMessage()    {}
func (*ListBuildsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{30}
}

func (m *ListBuildsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBuildsResponse.Unmarshal(m, b)
}
func (m *ListBuildsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBuildsResponse.Marshal(b, m, deterministic)
}
func (m *ListBuildsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBuildsResponse.Merge(m, src)
}
func (m *ListBuildsResponse) XXX_Size() int {
	return xxx_messageInfo_ListBuildsResponse.Size(m)
}
func (m *ListBuildsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBuildsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBuildsResponse proto.InternalMessageInfo

func (m *ListBuildsResponse) GetBuilds() []*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type GetLatestBuildRequest struct {
	Application          *Ref_Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	Workspace            *Ref_Workspace   `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetLatestBuildRequest) Reset()         { *m = GetLatestBuildRequest{} }
func (m *GetLatestBuildRequest) String() string { return proto.CompactTextString(m) }
func (*GetLatestBuildRequest) ProtoMessage()    {}
func (*GetLatestBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{31}
}

func (m *GetLatestBuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLatestBuildRequest.Unmarshal(m, b)
}
func (m *GetLatestBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLatestBuildRequest.Marshal(b, m, deterministic)
}
func (m *GetLatestBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLatestBuildRequest.Merge(m, src)
}
func (m *GetLatestBuildRequest) XXX_Size() int {
	return xxx_messageInfo_GetLatestBuildRequest.Size(m)
}
func (m *GetLatestBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLatestBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLatestBuildRequest proto.InternalMessageInfo

func (m *GetLatestBuildRequest) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *GetLatestBuildRequest) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

// Build represents a process of creating an artifact that can be in any state,
// such as complete. A successful complete build produces an artifact.
type Build struct {
	// The application that this build is part of.
	Application *Ref_Application `protobuf:"bytes,6,opt,name=application,proto3" json:"application,omitempty"`
	// The workspace that this exists in
	Workspace *Ref_Workspace `protobuf:"bytes,7,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// id is the unique ID of the build
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the build
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component is the component that was used for this build
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// artifact is the result of the build if the status.state == SUCCESS
	Artifact *Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{32}
}

func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *Build) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *Build) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Build) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Build) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Build) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *Build) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// Artifact is the result of a build or registry. This is the metadata only.
// The binary contents of an artifact are expected to be stored in a registry.
type Artifact struct {
	// artifact is the full artifact encoded directly from the component plugin.
	// The receiving end must have access to the component proto files to
	// know how to decode this.
	Artifact             *any.Any `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{33}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetArtifact() *any.Any {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpsertPushedArtifactRequest struct {
	// artifact to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpsertPushedArtifactRequest) Reset()         { *m = UpsertPushedArtifactRequest{} }
func (m *UpsertPushedArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPushedArtifactRequest) ProtoMessage()    {}
func (*UpsertPushedArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{34}
}

func (m *UpsertPushedArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Unmarshal(m, b)
}
func (m *UpsertPushedArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Marshal(b, m, deterministic)
}
func (m *UpsertPushedArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPushedArtifactRequest.Merge(m, src)
}
func (m *UpsertPushedArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPushedArtifactRequest.Size(m)
}
func (m *UpsertPushedArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPushedArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPushedArtifactRequest proto.InternalMessageInfo

func (m *UpsertPushedArtifactRequest) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type UpsertPushedArtifactResponse struct {
	// resulting push object, you should replace this with what was sent
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Artifact             *PushedArtifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpsertPushedArtifactResponse) Reset()         { *m = UpsertPushedArtifactResponse{} }
func (m *UpsertPushedArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPushedArtifactResponse) ProtoMessage()    {}
func (*UpsertPushedArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{35}
}

func (m *UpsertPushedArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Unmarshal(m, b)
}
func (m *UpsertPushedArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Marshal(b, m, deterministic)
}
func (m *UpsertPushedArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPushedArtifactResponse.Merge(m, src)
}
func (m *UpsertPushedArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPushedArtifactResponse.Size(m)
}
func (m *UpsertPushedArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPushedArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPushedArtifactResponse proto.InternalMessageInfo

func (m *UpsertPushedArtifactResponse) GetArtifact() *PushedArtifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

type GetLatestPushedArtifactRequest struct {
	// application that this belongs to
	Application *Ref_Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	// workspace for the artifact, any workspace if empty
	Workspace            *Ref_Workspace `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetLatestPushedArtifactRequest) Reset()         { *m = GetLatestPushedArtifactRequest{} }
func (m *GetLatestPushedArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*GetLatestPushedArtifactRequest) ProtoMessage()    {}
func (*GetLatestPushedArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{36}
}

func (m *GetLatestPushedArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLatestPushedArtifactRequest.Unmarshal(m, b)
}
func (m *GetLatestPushedArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLatestPushedArtifactRequest.Marshal(b, m, deterministic)
}
func (m *GetLatestPushedArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLatestPushedArtifactRequest.Merge(m, src)
}
func (m *GetLatestPushedArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_GetLatestPushedArtifactRequest.Size(m)
}
func (m *GetLatestPushedArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLatestPushedArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLatestPushedArtifactRequest proto.InternalMessageInfo

func (m *GetLatestPushedArtifactRequest) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *GetLatestPushedArtifactRequest) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

type ListPushedArtifactsRequest struct {
	// application that this belongs to
	Application *Ref_Application `protobuf:"bytes,3,opt,name=application,proto3" json:"application,omitempty"`
	// workspace for the results, or all if not set
	Workspace *Ref_Workspace `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// The filters to apply to this request. These are ORed, so you should
	// specify multiple filters in the StatusFilter for AND behavior.
	Status []*StatusFilter `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	// Specifies the order of results. If this isn't specified, the results
	// are in an undefined order.
	Order                *OperationOrder `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListPushedArtifactsRequest) Reset()         { *m = ListPushedArtifactsRequest{} }
func (m *ListPushedArtifactsRequest) String() string { return proto.CompactTextString(m) }
func (*ListPushedArtifactsRequest) ProtoMessage()    {}
func (*ListPushedArtifactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{37}
}

func (m *ListPushedArtifactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPushedArtifactsRequest.Unmarshal(m, b)
}
func (m *ListPushedArtifactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPushedArtifactsRequest.Marshal(b, m, deterministic)
}
func (m *ListPushedArtifactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPushedArtifactsRequest.Merge(m, src)
}
func (m *ListPushedArtifactsRequest) XXX_Size() int {
	return xxx_messageInfo_ListPushedArtifactsRequest.Size(m)
}
func (m *ListPushedArtifactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPushedArtifactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPushedArtifactsRequest proto.InternalMessageInfo

func (m *ListPushedArtifactsRequest) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *ListPushedArtifactsRequest) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *ListPushedArtifactsRequest) GetStatus() []*StatusFilter {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListPushedArtifactsRequest) GetOrder() *OperationOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

type ListPushedArtifactsResponse struct {
	// artifacts is the list of artifacts.
	Artifacts            []*PushedArtifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListPushedArtifactsResponse) Reset()         { *m = ListPushedArtifactsResponse{} }
func (m *ListPushedArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListPushedArtifactsResponse) ProtoMessage()    {}
func (*ListPushedArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{38}
}

func (m *ListPushedArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPushedArtifactsResponse.Unmarshal(m, b)
}
func (m *ListPushedArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPushedArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *ListPushedArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPushedArtifactsResponse.Merge(m, src)
}
func (m *ListPushedArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListPushedArtifactsResponse.Size(m)
}
func (m *ListPushedArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPushedArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPushedArtifactsResponse proto.InternalMessageInfo

func (m *ListPushedArtifactsResponse) GetArtifacts() []*PushedArtifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

type PushedArtifact struct {
	// application that this belongs to
	Application *Ref_Application `protobuf:"bytes,7,opt,name=application,proto3" json:"application,omitempty"`
	// The workspace that this exists in
	Workspace *Ref_Workspace `protobuf:"bytes,8,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// id is a unique ID for this push
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the push operation
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component that pushed this artifact
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// artifact is the artifact that was a result from the push.
	Artifact *Artifact `protobuf:"bytes,4,opt,name=artifact,proto3" json:"artifact,omitempty"`
	// the id of the build that this pushed artifact was sourced from.
	BuildId string `protobuf:"bytes,5,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PushedArtifact) Reset()         { *m = PushedArtifact{} }
func (m *PushedArtifact) String() string { return proto.CompactTextString(m) }
func (*PushedArtifact) ProtoMessage()    {}
func (*PushedArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{39}
}

func (m *PushedArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushedArtifact.Unmarshal(m, b)
}
func (m *PushedArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushedArtifact.Marshal(b, m, deterministic)
}
func (m *PushedArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushedArtifact.Merge(m, src)
}
func (m *PushedArtifact) XXX_Size() int {
	return xxx_messageInfo_PushedArtifact.Size(m)
}
func (m *PushedArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_PushedArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_PushedArtifact proto.InternalMessageInfo

func (m *PushedArtifact) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *PushedArtifact) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *PushedArtifact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PushedArtifact) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *PushedArtifact) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *PushedArtifact) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *PushedArtifact) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

func (m *PushedArtifact) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type GetDeploymentRequest struct {
	// Deployment to return.
	DeploymentId         string   `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeploymentRequest) Reset()         { *m = GetDeploymentRequest{} }
func (m *GetDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeploymentRequest) ProtoMessage()    {}
func (*GetDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{40}
}

func (m *GetDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeploymentRequest.Unmarshal(m, b)
}
func (m *GetDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *GetDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeploymentRequest.Merge(m, src)
}
func (m *GetDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeploymentRequest.Size(m)
}
func (m *GetDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeploymentRequest proto.InternalMessageInfo

func (m *GetDeploymentRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

type UpsertDeploymentRequest struct {
	// deployment to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpsertDeploymentRequest) Reset()         { *m = UpsertDeploymentRequest{} }
func (m *UpsertDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertDeploymentRequest) ProtoMessage()    {}
func (*UpsertDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{41}
}

func (m *UpsertDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertDeploymentRequest.Unmarshal(m, b)
}
func (m *UpsertDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertDeploymentRequest.Marshal(b, m, deterministic)
}
func (m *UpsertDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertDeploymentRequest.Merge(m, src)
}
func (m *UpsertDeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertDeploymentRequest.Size(m)
}
func (m *UpsertDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertDeploymentRequest proto.InternalMessageInfo

func (m *UpsertDeploymentRequest) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type UpsertDeploymentResponse struct {
	// resulting object, you should replace this with what was sent in the request
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Deployment           *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpsertDeploymentResponse) Reset()         { *m = UpsertDeploymentResponse{} }
func (m *UpsertDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertDeploymentResponse) ProtoMessage()    {}
func (*UpsertDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{42}
}

func (m *UpsertDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertDeploymentResponse.Unmarshal(m, b)
}
func (m *UpsertDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertDeploymentResponse.Marshal(b, m, deterministic)
}
func (m *UpsertDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertDeploymentResponse.Merge(m, src)
}
func (m *UpsertDeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertDeploymentResponse.Size(m)
}
func (m *UpsertDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertDeploymentResponse proto.InternalMessageInfo

func (m *UpsertDeploymentResponse) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

type ListDeploymentsRequest struct {
	// application that this deployment belongs to
	Application *Ref_Application `protobuf:"bytes,3,opt,name=application,proto3" json:"application,omitempty"`
	// workspace that this should belong to. If this is empty, values in
	// all workspaces will be listed.
	Workspace *Ref_Workspace `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// The filters to apply to this request. These are ORed, so you should
	// specify multiple filters in the StatusFilter for AND behavior.
	Status []*StatusFilter `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	// Specifies the order of results. If this isn't specified, the results
	// are in an undefined order.
	Order                *OperationOrder `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListDeploymentsRequest) Reset()         { *m = ListDeploymentsRequest{} }
func (m *ListDeploymentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsRequest) ProtoMessage()    {}
func (*ListDeploymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{43}
}

func (m *ListDeploymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeploymentsRequest.Unmarshal(m, b)
}
func (m *ListDeploymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeploymentsRequest.Marshal(b, m, deterministic)
}
func (m *ListDeploymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsRequest.Merge(m, src)
}
func (m *ListDeploymentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeploymentsRequest.Size(m)
}
func (m *ListDeploymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsRequest proto.InternalMessageInfo

func (m *ListDeploymentsRequest) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *ListDeploymentsRequest) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *ListDeploymentsRequest) GetStatus() []*StatusFilter {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListDeploymentsRequest) GetOrder() *OperationOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

type ListDeploymentsResponse struct {
	// deployments is the list of deployments.
	Deployments          []*Deployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDeploymentsResponse) Reset()         { *m = ListDeploymentsResponse{} }
func (m *ListDeploymentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsResponse) ProtoMessage()    {}
func (*ListDeploymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{44}
}

func (m *ListDeploymentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeploymentsResponse.Unmarshal(m, b)
}
func (m *ListDeploymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeploymentsResponse.Marshal(b, m, deterministic)
}
func (m *ListDeploymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsResponse.Merge(m, src)
}
func (m *ListDeploymentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeploymentsResponse.Size(m)
}
func (m *ListDeploymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsResponse proto.InternalMessageInfo

func (m *ListDeploymentsResponse) GetDeployments() []*Deployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

type Deployment struct {
	// application that this deployment belongs to
	Application *Ref_Application `protobuf:"bytes,8,opt,name=application,proto3" json:"application,omitempty"`
	// The workspace that this exists in
	Workspace *Ref_Workspace `protobuf:"bytes,9,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// id is the unique ID for this deployment
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// state is the state of this deployment.
	State Deployment_State `protobuf:"varint,2,opt,name=state,proto3,enum=hashicorp.waypoint.Deployment_State" json:"state,omitempty"`
	// status of the current state of the deployment.
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// component that initiated this deployment
	Component *Component `protobuf:"bytes,4,opt,name=component,proto3" json:"component,omitempty"`
	// ID of the PushedArtifact that was deployed.
	ArtifactId string `protobuf:"bytes,5,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// deployment is the full raw deployment object encoded directly from
	// the plugin. The client must have all the plugins setup to properly
	// decode this.
	Deployment *any.Any `protobuf:"bytes,6,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels               map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{45}
}

func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployment.Unmarshal(m, b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
}
func (m *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(m, src)
}
func (m *Deployment) XXX_Size() int {
	return xxx_messageInfo_Deployment.Size(m)
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *Deployment) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *Deployment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Deployment) GetState() Deployment_State {
	if m != nil {
		return m.State
	}
	return Deployment_UNKNOWN
}

func (m *Deployment) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Deployment) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Deployment) GetArtifactId() string {
	if m != nil {
		return m.ArtifactId
	}
	return ""
}

func (m *Deployment) GetDeployment() *any.Any {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *Deployment) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type UpsertReleaseRequest struct {
	// release to upsert. If the id in the artifact is empty, then this
	// will be an insert. Otherwise, this will be an update and if the ID
	// isn't found, it will be an error.
	Release              *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertReleaseRequest) Reset()         { *m = UpsertReleaseRequest{} }
func (m *UpsertReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertReleaseRequest) ProtoMessage()    {}
func (*UpsertReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{46}
}

func (m *UpsertReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertReleaseRequest.Unmarshal(m, b)
}
func (m *UpsertReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertReleaseRequest.Marshal(b, m, deterministic)
}
func (m *UpsertReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertReleaseRequest.Merge(m, src)
}
func (m *UpsertReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertReleaseRequest.Size(m)
}
func (m *UpsertReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertReleaseRequest proto.InternalMessageInfo

func (m *UpsertReleaseRequest) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type UpsertReleaseResponse struct {
	// resulting object, you should replace this with what was sent in the request
	// since the update operation may touch up the input data (i.e. update
	// timestamps)
	Release              *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertReleaseResponse) Reset()         { *m = UpsertReleaseResponse{} }
func (m *UpsertReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertReleaseResponse) ProtoMessage()    {}
func (*UpsertReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{47}
}

func (m *UpsertReleaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertReleaseResponse.Unmarshal(m, b)
}
func (m *UpsertReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertReleaseResponse.Marshal(b, m, deterministic)
}
func (m *UpsertReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertReleaseResponse.Merge(m, src)
}
func (m *UpsertReleaseResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertReleaseResponse.Size(m)
}
func (m *UpsertReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertReleaseResponse proto.InternalMessageInfo

func (m *UpsertReleaseResponse) GetRelease() *Release {
	if m != nil {
		return m.Release
	}
	return nil
}

type Release struct {
	// application that this deployment belongs to
	Application *Ref_Application `protobuf:"bytes,7,opt,name=application,proto3" json:"application,omitempty"`
	// The workspace that this exists in
	Workspace *Ref_Workspace `protobuf:"bytes,8,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// id is the unique ID for this release.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// status of the release operation.
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// component managing the release process.
	Component *Component `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	// release is the raw release object encoded directly from the plugin.
	Release *any.Any `protobuf:"bytes,4,opt,name=release,proto3" json:"release,omitempty"`
	// split traffic between multiple deployments
	TrafficSplit *Release_Split `protobuf:"bytes,5,opt,name=traffic_split,json=trafficSplit,proto3" json:"traffic_split,omitempty"`
	// labels are the set of labels that are present on this build.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// URL for this release. This is valid while the release is still
	// in use. After the release is not in use, this may still be set but
	// may no longer be valid.
	Url                  string   `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Release) Reset()         { *m = Release{} }
func (m *Release) String() string { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()    {}
func (*Release) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{48}
}

func (m *Release) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release.Unmarshal(m, b)
}
func (m *Release) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release.Marshal(b, m, deterministic)
}
func (m *Release) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release.Merge(m, src)
}
func (m *Release) XXX_Size() int {
	return xxx_messageInfo_Release.Size(m)
}
func (m *Release) XXX_DiscardUnknown() {
	xxx_messageInfo_Release.DiscardUnknown(m)
}

var xxx_messageInfo_Release proto.InternalMessageInfo

func (m *Release) GetApplication() *Ref_Application {
	if m != nil {
		return m.Application
	}
	return nil
}

func (m *Release) GetWorkspace() *Ref_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *Release) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Release) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Release) GetComponent() *Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (m *Release) GetRelease() *any.Any {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *Release) GetTrafficSplit() *Release_Split {
	if m != nil {
		return m.TrafficSplit
	}
	return nil
}

func (m *Release) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Release) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Release_Split struct {
	Targets              []*Release_SplitTarget `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Release_Split) Reset()         { *m = Release_Split{} }
func (m *Release_Split) String() string { return proto.CompactTextString(m) }
func (*Release_Split) ProtoMessage()    {}
func (*Release_Split) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{48, 1}
}

func (m *Release_Split) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release_Split.Unmarshal(m, b)
}
func (m *Release_Split) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release_Split.Marshal(b, m, deterministic)
}
func (m *Release_Split) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release_Split.Merge(m, src)
}
func (m *Release_Split) XXX_Size() int {
	return xxx_messageInfo_Release_Split.Size(m)
}
func (m *Release_Split) XXX_DiscardUnknown() {
	xxx_messageInfo_Release_Split.DiscardUnknown(m)
}

var xxx_messageInfo_Release_Split proto.InternalMessageInfo

func (m *Release_Split) GetTargets() []*Release_SplitTarget {
	if m != nil {
		return m.Targets
	}
	return nil
}

type Release_SplitTarget struct {
	// id the deployment target
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// percentage of traffic
	Percent              int32    `protobuf:"varint,2,opt,name=percent,proto3" json:"percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Release_SplitTarget) Reset()         { *m = Release_SplitTarget{} }
func (m *Release_SplitTarget) String() string { return proto.CompactTextString(m) }
func (*Release_SplitTarget) ProtoMessage()    {}
func (*Release_SplitTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{48, 2}
}

func (m *Release_SplitTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Release_SplitTarget.Unmarshal(m, b)
}
func (m *Release_SplitTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Release_SplitTarget.Marshal(b, m, deterministic)
}
func (m *Release_SplitTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Release_SplitTarget.Merge(m, src)
}
func (m *Release_SplitTarget) XXX_Size() int {
	return xxx_messageInfo_Release_SplitTarget.Size(m)
}
func (m *Release_SplitTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_Release_SplitTarget.DiscardUnknown(m)
}

var xxx_messageInfo_Release_SplitTarget proto.InternalMessageInfo

func (m *Release_SplitTarget) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *Release_SplitTarget) GetPercent() int32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

type GetLogStreamRequest struct {
	// Deployment to request logs for.
	DeploymentId         string   `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLogStreamRequest) Reset()         { *m = GetLogStreamRequest{} }
func (m *GetLogStreamRequest) String() string { return proto.CompactTextString(m) }
func (*GetLogStreamRequest) ProtoMessage()    {}
func (*GetLogStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{49}
}

func (m *GetLogStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogStreamRequest.Unmarshal(m, b)
}
func (m *GetLogStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogStreamRequest.Marshal(b, m, deterministic)
}
func (m *GetLogStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogStreamRequest.Merge(m, src)
}
func (m *GetLogStreamRequest) XXX_Size() int {
	return xxx_messageInfo_GetLogStreamRequest.Size(m)
}
func (m *GetLogStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogStreamRequest proto.InternalMessageInfo

func (m *GetLogStreamRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

type LogBatch struct {
	DeploymentId         string            `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	InstanceId           string            `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Lines                []*LogBatch_Entry `protobuf:"bytes,3,rep,name=lines,proto3" json:"lines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *LogBatch) Reset()         { *m = LogBatch{} }
func (m *LogBatch) String() string { return proto.CompactTextString(m) }
func (*LogBatch) ProtoMessage()    {}
func (*LogBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{50}
}

func (m *LogBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBatch.Unmarshal(m, b)
}
func (m *LogBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBatch.Marshal(b, m, deterministic)
}
func (m *LogBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBatch.Merge(m, src)
}
func (m *LogBatch) XXX_Size() int {
	return xxx_messageInfo_LogBatch.Size(m)
}
func (m *LogBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBatch.DiscardUnknown(m)
}

var xxx_messageInfo_LogBatch proto.InternalMessageInfo

func (m *LogBatch) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *LogBatch) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *LogBatch) GetLines() []*LogBatch_Entry {
	if m != nil {
		return m.Lines
	}
	return nil
}

type LogBatch_Entry struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Line                 string               `protobuf:"bytes,2,opt,name=line,proto3" json:"line,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogBatch_Entry) Reset()         { *m = LogBatch_Entry{} }
func (m *LogBatch_Entry) String() string { return proto.CompactTextString(m) }
func (*LogBatch_Entry) ProtoMessage()    {}
func (*LogBatch_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{50, 0}
}

func (m *LogBatch_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogBatch_Entry.Unmarshal(m, b)
}
func (m *LogBatch_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogBatch_Entry.Marshal(b, m, deterministic)
}
func (m *LogBatch_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogBatch_Entry.Merge(m, src)
}
func (m *LogBatch_Entry) XXX_Size() int {
	return xxx_messageInfo_LogBatch_Entry.Size(m)
}
func (m *LogBatch_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogBatch_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_LogBatch_Entry proto.InternalMessageInfo

func (m *LogBatch_Entry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogBatch_Entry) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

type ConfigVar struct {
	// scope is the scoping for this config variable.
	//
	// Types that are valid to be assigned to Scope:
	//	*ConfigVar_Application
	//	*ConfigVar_Project
	Scope                isConfigVar_Scope `protobuf_oneof:"scope"`
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConfigVar) Reset()         { *m = ConfigVar{} }
func (m *ConfigVar) String() string { return proto.CompactTextString(m) }
func (*ConfigVar) ProtoMessage()    {}
func (*ConfigVar) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{51}
}

func (m *ConfigVar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigVar.Unmarshal(m, b)
}
func (m *ConfigVar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigVar.Marshal(b, m, deterministic)
}
func (m *ConfigVar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigVar.Merge(m, src)
}
func (m *ConfigVar) XXX_Size() int {
	return xxx_messageInfo_ConfigVar.Size(m)
}
func (m *ConfigVar) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigVar.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigVar proto.InternalMessageInfo

type isConfigVar_Scope interface {
	isConfigVar_Scope()
}

type ConfigVar_Application struct {
	Application *Ref_Application `protobuf:"bytes,3,opt,name=application,proto3,oneof"`
}

type ConfigVar_Project struct {
	Project *Ref_Project `protobuf:"bytes,4,opt,name=project,proto3,oneof"`
}

func (*ConfigVar_Application) isConfigVar_Scope() {}

func (*ConfigVar_Project) isConfigVar_Scope() {}

func (m *ConfigVar) GetScope() isConfigVar_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *ConfigVar) GetApplication() *Ref_Application {
	if x, ok := m.GetScope().(*ConfigVar_Application); ok {
		return x.Application
	}
	return nil
}

func (m *ConfigVar) GetProject() *Ref_Project {
	if x, ok := m.GetScope().(*ConfigVar_Project); ok {
		return x.Project
	}
	return nil
}

func (m *ConfigVar) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigVar) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigVar) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigVar_Application)(nil),
		(*ConfigVar_Project)(nil),
	}
}

type ConfigSetRequest struct {
	Variables            []*ConfigVar `protobuf:"bytes,1,rep,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ConfigSetRequest) Reset()         { *m = ConfigSetRequest{} }
func (m *ConfigSetRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigSetRequest) ProtoMessage()    {}
func (*ConfigSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{52}
}

func (m *ConfigSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSetRequest.Unmarshal(m, b)
}
func (m *ConfigSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSetRequest.Marshal(b, m, deterministic)
}
func (m *ConfigSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSetRequest.Merge(m, src)
}
func (m *ConfigSetRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigSetRequest.Size(m)
}
func (m *ConfigSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSetRequest proto.InternalMessageInfo

func (m *ConfigSetRequest) GetVariables() []*ConfigVar {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ConfigSetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigSetResponse) Reset()         { *m = ConfigSetResponse{} }
func (m *ConfigSetResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigSetResponse) ProtoMessage()    {}
func (*ConfigSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{53}
}

func (m *ConfigSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSetResponse.Unmarshal(m, b)
}
func (m *ConfigSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSetResponse.Marshal(b, m, deterministic)
}
func (m *ConfigSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSetResponse.Merge(m, src)
}
func (m *ConfigSetResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigSetResponse.Size(m)
}
func (m *ConfigSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSetResponse proto.InternalMessageInfo

type ConfigGetRequest struct {
	// scope is the scoping for this config variable.
	//
	// Types that are valid to be assigned to Scope:
	//	*ConfigGetRequest_Application
	//	*ConfigGetRequest_Project
	Scope isConfigGetRequest_Scope `protobuf_oneof:"scope"`
	// Get all configuration entries under the given prefix. When empty,
	// returns all config variables.
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigGetRequest) Reset()         { *m = ConfigGetRequest{} }
func (m *ConfigGetRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigGetRequest) ProtoMessage()    {}
func (*ConfigGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{54}
}

func (m *ConfigGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigGetRequest.Unmarshal(m, b)
}
func (m *ConfigGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigGetRequest.Marshal(b, m, deterministic)
}
func (m *ConfigGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigGetRequest.Merge(m, src)
}
func (m *ConfigGetRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigGetRequest.Size(m)
}
func (m *ConfigGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigGetRequest proto.InternalMessageInfo

type isConfigGetRequest_Scope interface {
	isConfigGetRequest_Scope()
}

type ConfigGetRequest_Application struct {
	Application *Ref_Application `protobuf:"bytes,2,opt,name=application,proto3,oneof"`
}

type ConfigGetRequest_Project struct {
	Project *Ref_Project `protobuf:"bytes,3,opt,name=project,proto3,oneof"`
}

func (*ConfigGetRequest_Application) isConfigGetRequest_Scope() {}

func (*ConfigGetRequest_Project) isConfigGetRequest_Scope() {}

func (m *ConfigGetRequest) GetScope() isConfigGetRequest_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *ConfigGetRequest) GetApplication() *Ref_Application {
	if x, ok := m.GetScope().(*ConfigGetRequest_Application); ok {
		return x.Application
	}
	return nil
}

func (m *ConfigGetRequest) GetProject() *Ref_Project {
	if x, ok := m.GetScope().(*ConfigGetRequest_Project); ok {
		return x.Project
	}
	return nil
}

func (m *ConfigGetRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigGetRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigGetRequest_Application)(nil),
		(*ConfigGetRequest_Project)(nil),
	}
}

type ConfigGetResponse struct {
	Variables            []*ConfigVar `protobuf:"bytes,1,rep,name=variables,proto3" json:"variables,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ConfigGetResponse) Reset()         { *m = ConfigGetResponse{} }
func (m *ConfigGetResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigGetResponse) ProtoMessage()    {}
func (*ConfigGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{55}
}

func (m *ConfigGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigGetResponse.Unmarshal(m, b)
}
func (m *ConfigGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigGetResponse.Marshal(b, m, deterministic)
}
func (m *ConfigGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigGetResponse.Merge(m, src)
}
func (m *ConfigGetResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigGetResponse.Size(m)
}
func (m *ConfigGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigGetResponse proto.InternalMessageInfo

func (m *ConfigGetResponse) GetVariables() []*ConfigVar {
	if m != nil {
		return m.Variables
	}
	return nil
}

type ExecStreamRequest struct {
	// Types that are valid to be assigned to Event:
	//	*ExecStreamRequest_Start_
	//	*ExecStreamRequest_Input_
	//	*ExecStreamRequest_Winch
	Event                isExecStreamRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ExecStreamRequest) Reset()         { *m = ExecStreamRequest{} }
func (m *ExecStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest) ProtoMessage()    {}
func (*ExecStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{56}
}

func (m *ExecStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest.Unmarshal(m, b)
}
func (m *ExecStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest.Merge(m, src)
}
func (m *ExecStreamRequest) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest.Size(m)
}
func (m *ExecStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest proto.InternalMessageInfo

type isExecStreamRequest_Event interface {
	isExecStreamRequest_Event()
}

type ExecStreamRequest_Start_ struct {
	Start *ExecStreamRequest_Start `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type ExecStreamRequest_Input_ struct {
	Input *ExecStreamRequest_Input `protobuf:"bytes,2,opt,name=input,proto3,oneof"`
}

type ExecStreamRequest_Winch struct {
	Winch *ExecStreamRequest_WindowSize `protobuf:"bytes,3,opt,name=winch,proto3,oneof"`
}

func (*ExecStreamRequest_Start_) isExecStreamRequest_Event() {}

func (*ExecStreamRequest_Input_) isExecStreamRequest_Event() {}

func (*ExecStreamRequest_Winch) isExecStreamRequest_Event() {}

func (m *ExecStreamRequest) GetEvent() isExecStreamRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ExecStreamRequest) GetStart() *ExecStreamRequest_Start {
	if x, ok := m.GetEvent().(*ExecStreamRequest_Start_); ok {
		return x.Start
	}
	return nil
}

func (m *ExecStreamRequest) GetInput() *ExecStreamRequest_Input {
	if x, ok := m.GetEvent().(*ExecStreamRequest_Input_); ok {
		return x.Input
	}
	return nil
}

func (m *ExecStreamRequest) GetWinch() *ExecStreamRequest_WindowSize {
	if x, ok := m.GetEvent().(*ExecStreamRequest_Winch); ok {
		return x.Winch
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExecStreamRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExecStreamRequest_Start_)(nil),
		(*ExecStreamRequest_Input_)(nil),
		(*ExecStreamRequest_Winch)(nil),
	}
}

type ExecStreamRequest_Start struct {
	// Deployment to exec into
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Args including the command at args[0] to execute.
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// Pty is set if we should allocate a PTY for this exec stream.
	Pty                  *ExecStreamRequest_PTY `protobuf:"bytes,3,opt,name=pty,proto3" json:"pty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ExecStreamRequest_Start) Reset()         { *m = ExecStreamRequest_Start{} }
func (m *ExecStreamRequest_Start) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_Start) ProtoMessage()    {}
func (*ExecStreamRequest_Start) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{56, 0}
}

func (m *ExecStreamRequest_Start) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_Start.Unmarshal(m, b)
}
func (m *ExecStreamRequest_Start) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_Start.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_Start) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_Start.Merge(m, src)
}
func (m *ExecStreamRequest_Start) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_Start.Size(m)
}
func (m *ExecStreamRequest_Start) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_Start.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_Start proto.InternalMessageInfo

func (m *ExecStreamRequest_Start) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *ExecStreamRequest_Start) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ExecStreamRequest_Start) GetPty() *ExecStreamRequest_PTY {
	if m != nil {
		return m.Pty
	}
	return nil
}

type ExecStreamRequest_Input struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStreamRequest_Input) Reset()         { *m = ExecStreamRequest_Input{} }
func (m *ExecStreamRequest_Input) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_Input) ProtoMessage()    {}
func (*ExecStreamRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{56, 1}
}

func (m *ExecStreamRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_Input.Unmarshal(m, b)
}
func (m *ExecStreamRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_Input.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_Input.Merge(m, src)
}
func (m *ExecStreamRequest_Input) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_Input.Size(m)
}
func (m *ExecStreamRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_Input proto.InternalMessageInfo

func (m *ExecStreamRequest_Input) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExecStreamRequest_PTY struct {
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	// term is the TERM value to request on the remote side. This should be set.
	Term string `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	// window_size is the initial window size
	WindowSize           *ExecStreamRequest_WindowSize `protobuf:"bytes,3,opt,name=window_size,json=windowSize,proto3" json:"window_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ExecStreamRequest_PTY) Reset()         { *m = ExecStreamRequest_PTY{} }
func (m *ExecStreamRequest_PTY) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_PTY) ProtoMessage()    {}
func (*ExecStreamRequest_PTY) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{56, 2}
}

func (m *ExecStreamRequest_PTY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_PTY.Unmarshal(m, b)
}
func (m *ExecStreamRequest_PTY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_PTY.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_PTY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_PTY.Merge(m, src)
}
func (m *ExecStreamRequest_PTY) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_PTY.Size(m)
}
func (m *ExecStreamRequest_PTY) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_PTY.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_PTY proto.InternalMessageInfo

func (m *ExecStreamRequest_PTY) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *ExecStreamRequest_PTY) GetTerm() string {
	if m != nil {
		return m.Term
	}
	return ""
}

func (m *ExecStreamRequest_PTY) GetWindowSize() *ExecStreamRequest_WindowSize {
	if m != nil {
		return m.WindowSize
	}
	return nil
}

type ExecStreamRequest_WindowSize struct {
	Rows                 int32    `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols                 int32    `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStreamRequest_WindowSize) Reset()         { *m = ExecStreamRequest_WindowSize{} }
func (m *ExecStreamRequest_WindowSize) String() string { return proto.CompactTextString(m) }
func (*ExecStreamRequest_WindowSize) ProtoMessage()    {}
func (*ExecStreamRequest_WindowSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{56, 3}
}

func (m *ExecStreamRequest_WindowSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamRequest_WindowSize.Unmarshal(m, b)
}
func (m *ExecStreamRequest_WindowSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamRequest_WindowSize.Marshal(b, m, deterministic)
}
func (m *ExecStreamRequest_WindowSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamRequest_WindowSize.Merge(m, src)
}
func (m *ExecStreamRequest_WindowSize) XXX_Size() int {
	return xxx_messageInfo_ExecStreamRequest_WindowSize.Size(m)
}
func (m *ExecStreamRequest_WindowSize) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamRequest_WindowSize.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamRequest_WindowSize proto.InternalMessageInfo

func (m *ExecStreamRequest_WindowSize) GetRows() int32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *ExecStreamRequest_WindowSize) GetCols() int32 {
	if m != nil {
		return m.Cols
	}
	return 0
}

func (m *ExecStreamRequest_WindowSize) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ExecStreamRequest_WindowSize) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ExecStreamResponse struct {
	// Types that are valid to be assigned to Event:
	//	*ExecStreamResponse_Output_
	//	*ExecStreamResponse_Exit_
	Event                isExecStreamResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ExecStreamResponse) Reset()         { *m = ExecStreamResponse{} }
func (m *ExecStreamResponse) String() string { return proto.CompactTextString(m) }
func (*ExecStreamResponse) ProtoMessage()    {}
func (*ExecStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{57}
}

func (m *ExecStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamResponse.Unmarshal(m, b)
}
func (m *ExecStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamResponse.Marshal(b, m, deterministic)
}
func (m *ExecStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamResponse.Merge(m, src)
}
func (m *ExecStreamResponse) XXX_Size() int {
	return xxx_messageInfo_ExecStreamResponse.Size(m)
}
func (m *ExecStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamResponse proto.InternalMessageInfo

type isExecStreamResponse_Event interface {
	isExecStreamResponse_Event()
}

type ExecStreamResponse_Output_ struct {
	Output *ExecStreamResponse_Output `protobuf:"bytes,1,opt,name=output,proto3,oneof"`
}

type ExecStreamResponse_Exit_ struct {
	Exit *ExecStreamResponse_Exit `protobuf:"bytes,2,opt,name=exit,proto3,oneof"`
}

func (*ExecStreamResponse_Output_) isExecStreamResponse_Event() {}

func (*ExecStreamResponse_Exit_) isExecStreamResponse_Event() {}

func (m *ExecStreamResponse) GetEvent() isExecStreamResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ExecStreamResponse) GetOutput() *ExecStreamResponse_Output {
	if x, ok := m.GetEvent().(*ExecStreamResponse_Output_); ok {
		return x.Output
	}
	return nil
}

func (m *ExecStreamResponse) GetExit() *ExecStreamResponse_Exit {
	if x, ok := m.GetEvent().(*ExecStreamResponse_Exit_); ok {
		return x.Exit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExecStreamResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExecStreamResponse_Output_)(nil),
		(*ExecStreamResponse_Exit_)(nil),
	}
}

type ExecStreamResponse_Exit struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecStreamResponse_Exit) Reset()         { *m = ExecStreamResponse_Exit{} }
func (m *ExecStreamResponse_Exit) String() string { return proto.CompactTextString(m) }
func (*ExecStreamResponse_Exit) ProtoMessage()    {}
func (*ExecStreamResponse_Exit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{57, 0}
}

func (m *ExecStreamResponse_Exit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamResponse_Exit.Unmarshal(m, b)
}
func (m *ExecStreamResponse_Exit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamResponse_Exit.Marshal(b, m, deterministic)
}
func (m *ExecStreamResponse_Exit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamResponse_Exit.Merge(m, src)
}
func (m *ExecStreamResponse_Exit) XXX_Size() int {
	return xxx_messageInfo_ExecStreamResponse_Exit.Size(m)
}
func (m *ExecStreamResponse_Exit) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamResponse_Exit.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamResponse_Exit proto.InternalMessageInfo

func (m *ExecStreamResponse_Exit) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type ExecStreamResponse_Output struct {
	Channel              ExecStreamResponse_Output_Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=hashicorp.waypoint.ExecStreamResponse_Output_Channel" json:"channel,omitempty"`
	Data                 []byte                            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ExecStreamResponse_Output) Reset()         { *m = ExecStreamResponse_Output{} }
func (m *ExecStreamResponse_Output) String() string { return proto.CompactTextString(m) }
func (*ExecStreamResponse_Output) ProtoMessage()    {}
func (*ExecStreamResponse_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{57, 1}
}

func (m *ExecStreamResponse_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecStreamResponse_Output.Unmarshal(m, b)
}
func (m *ExecStreamResponse_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecStreamResponse_Output.Marshal(b, m, deterministic)
}
func (m *ExecStreamResponse_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecStreamResponse_Output.Merge(m, src)
}
func (m *ExecStreamResponse_Output) XXX_Size() int {
	return xxx_messageInfo_ExecStreamResponse_Output.Size(m)
}
func (m *ExecStreamResponse_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecStreamResponse_Output.DiscardUnknown(m)
}

var xxx_messageInfo_ExecStreamResponse_Output proto.InternalMessageInfo

func (m *ExecStreamResponse_Output) GetChannel() ExecStreamResponse_Output_Channel {
	if m != nil {
		return m.Channel
	}
	return ExecStreamResponse_Output_UNKNOWN
}

func (m *ExecStreamResponse_Output) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EntrypointConfigRequest struct {
	// id of the deployment that this instance is a part of
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// instance_id is a unique ID generated by the running entrypoint. This is
	// not an auth mechanism, just a way to associate data with the correct instance.
	InstanceId           string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntrypointConfigRequest) Reset()         { *m = EntrypointConfigRequest{} }
func (m *EntrypointConfigRequest) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfigRequest) ProtoMessage()    {}
func (*EntrypointConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{58}
}

func (m *EntrypointConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfigRequest.Unmarshal(m, b)
}
func (m *EntrypointConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfigRequest.Marshal(b, m, deterministic)
}
func (m *EntrypointConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfigRequest.Merge(m, src)
}
func (m *EntrypointConfigRequest) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfigRequest.Size(m)
}
func (m *EntrypointConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfigRequest proto.InternalMessageInfo

func (m *EntrypointConfigRequest) GetDeploymentId() string {
	if m != nil {
		return m.DeploymentId
	}
	return ""
}

func (m *EntrypointConfigRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type EntrypointConfigResponse struct {
	Config               *EntrypointConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EntrypointConfigResponse) Reset()         { *m = EntrypointConfigResponse{} }
func (m *EntrypointConfigResponse) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfigResponse) ProtoMessage()    {}
func (*EntrypointConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{59}
}

func (m *EntrypointConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfigResponse.Unmarshal(m, b)
}
func (m *EntrypointConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfigResponse.Marshal(b, m, deterministic)
}
func (m *EntrypointConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfigResponse.Merge(m, src)
}
func (m *EntrypointConfigResponse) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfigResponse.Size(m)
}
func (m *EntrypointConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfigResponse proto.InternalMessageInfo

func (m *EntrypointConfigResponse) GetConfig() *EntrypointConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type EntrypointConfig struct {
	// Exec are requested exec sessions for this instance.
	Exec                 []*EntrypointConfig_Exec `protobuf:"bytes,1,rep,name=exec,proto3" json:"exec,omitempty"`
	EnvVars              []*ConfigVar             `protobuf:"bytes,2,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *EntrypointConfig) Reset()         { *m = EntrypointConfig{} }
func (m *EntrypointConfig) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfig) ProtoMessage()    {}
func (*EntrypointConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{60}
}

func (m *EntrypointConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfig.Unmarshal(m, b)
}
func (m *EntrypointConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfig.Marshal(b, m, deterministic)
}
func (m *EntrypointConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfig.Merge(m, src)
}
func (m *EntrypointConfig) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfig.Size(m)
}
func (m *EntrypointConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfig proto.InternalMessageInfo

func (m *EntrypointConfig) GetExec() []*EntrypointConfig_Exec {
	if m != nil {
		return m.Exec
	}
	return nil
}

func (m *EntrypointConfig) GetEnvVars() []*ConfigVar {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

type EntrypointConfig_Exec struct {
	Index                int64                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Args                 []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Pty                  *ExecStreamRequest_PTY `protobuf:"bytes,3,opt,name=pty,proto3" json:"pty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EntrypointConfig_Exec) Reset()         { *m = EntrypointConfig_Exec{} }
func (m *EntrypointConfig_Exec) String() string { return proto.CompactTextString(m) }
func (*EntrypointConfig_Exec) ProtoMessage()    {}
func (*EntrypointConfig_Exec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{60, 0}
}

func (m *EntrypointConfig_Exec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointConfig_Exec.Unmarshal(m, b)
}
func (m *EntrypointConfig_Exec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointConfig_Exec.Marshal(b, m, deterministic)
}
func (m *EntrypointConfig_Exec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointConfig_Exec.Merge(m, src)
}
func (m *EntrypointConfig_Exec) XXX_Size() int {
	return xxx_messageInfo_EntrypointConfig_Exec.Size(m)
}
func (m *EntrypointConfig_Exec) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointConfig_Exec.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointConfig_Exec proto.InternalMessageInfo

func (m *EntrypointConfig_Exec) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *EntrypointConfig_Exec) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *EntrypointConfig_Exec) GetPty() *ExecStreamRequest_PTY {
	if m != nil {
		return m.Pty
	}
	return nil
}

// A batch of data for log streaming from the entrypoint.
type EntrypointLogBatch struct {
	// instance_id is a unique ID generated by the running entrypoint. This is
	// not an auth mechanism, just a way to associate data with the correct instance.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// lines is the set of lines
	Lines                []*LogBatch_Entry `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EntrypointLogBatch) Reset()         { *m = EntrypointLogBatch{} }
func (m *EntrypointLogBatch) String() string { return proto.CompactTextString(m) }
func (*EntrypointLogBatch) ProtoMessage()    {}
func (*EntrypointLogBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{61}
}

func (m *EntrypointLogBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointLogBatch.Unmarshal(m, b)
}
func (m *EntrypointLogBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointLogBatch.Marshal(b, m, deterministic)
}
func (m *EntrypointLogBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointLogBatch.Merge(m, src)
}
func (m *EntrypointLogBatch) XXX_Size() int {
	return xxx_messageInfo_EntrypointLogBatch.Size(m)
}
func (m *EntrypointLogBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointLogBatch.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointLogBatch proto.InternalMessageInfo

func (m *EntrypointLogBatch) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *EntrypointLogBatch) GetLines() []*LogBatch_Entry {
	if m != nil {
		return m.Lines
	}
	return nil
}

type EntrypointExecRequest struct {
	// Types that are valid to be assigned to Event:
	//	*EntrypointExecRequest_Open_
	//	*EntrypointExecRequest_Exit_
	//	*EntrypointExecRequest_Output_
	//	*EntrypointExecRequest_Error_
	Event                isEntrypointExecRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *EntrypointExecRequest) Reset()         { *m = EntrypointExecRequest{} }
func (m *EntrypointExecRequest) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest) ProtoMessage()    {}
func (*EntrypointExecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{62}
}

func (m *EntrypointExecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest.Unmarshal(m, b)
}
func (m *EntrypointExecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest.Merge(m, src)
}
func (m *EntrypointExecRequest) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest.Size(m)
}
func (m *EntrypointExecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest proto.InternalMessageInfo

type isEntrypointExecRequest_Event interface {
	isEntrypointExecRequest_Event()
}

type EntrypointExecRequest_Open_ struct {
	Open *EntrypointExecRequest_Open `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

type EntrypointExecRequest_Exit_ struct {
	Exit *EntrypointExecRequest_Exit `protobuf:"bytes,2,opt,name=exit,proto3,oneof"`
}

type EntrypointExecRequest_Output_ struct {
	Output *EntrypointExecRequest_Output `protobuf:"bytes,3,opt,name=output,proto3,oneof"`
}

type EntrypointExecRequest_Error_ struct {
	Error *EntrypointExecRequest_Error `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*EntrypointExecRequest_Open_) isEntrypointExecRequest_Event() {}

func (*EntrypointExecRequest_Exit_) isEntrypointExecRequest_Event() {}

func (*EntrypointExecRequest_Output_) isEntrypointExecRequest_Event() {}

func (*EntrypointExecRequest_Error_) isEntrypointExecRequest_Event() {}

func (m *EntrypointExecRequest) GetEvent() isEntrypointExecRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *EntrypointExecRequest) GetOpen() *EntrypointExecRequest_Open {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Open_); ok {
		return x.Open
	}
	return nil
}

func (m *EntrypointExecRequest) GetExit() *EntrypointExecRequest_Exit {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Exit_); ok {
		return x.Exit
	}
	return nil
}

func (m *EntrypointExecRequest) GetOutput() *EntrypointExecRequest_Output {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Output_); ok {
		return x.Output
	}
	return nil
}

func (m *EntrypointExecRequest) GetError() *EntrypointExecRequest_Error {
	if x, ok := m.GetEvent().(*EntrypointExecRequest_Error_); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EntrypointExecRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EntrypointExecRequest_Open_)(nil),
		(*EntrypointExecRequest_Exit_)(nil),
		(*EntrypointExecRequest_Output_)(nil),
		(*EntrypointExecRequest_Error_)(nil),
	}
}

type EntrypointExecRequest_Open struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntrypointExecRequest_Open) Reset()         { *m = EntrypointExecRequest_Open{} }
func (m *EntrypointExecRequest_Open) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Open) ProtoMessage()    {}
func (*EntrypointExecRequest_Open) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{62, 0}
}

func (m *EntrypointExecRequest_Open) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Open.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Open) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Open.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Open) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Open.Merge(m, src)
}
func (m *EntrypointExecRequest_Open) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Open.Size(m)
}
func (m *EntrypointExecRequest_Open) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Open.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Open proto.InternalMessageInfo

func (m *EntrypointExecRequest_Open) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *EntrypointExecRequest_Open) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type EntrypointExecRequest_Exit struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntrypointExecRequest_Exit) Reset()         { *m = EntrypointExecRequest_Exit{} }
func (m *EntrypointExecRequest_Exit) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Exit) ProtoMessage()    {}
func (*EntrypointExecRequest_Exit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{62, 1}
}

func (m *EntrypointExecRequest_Exit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Exit.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Exit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Exit.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Exit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Exit.Merge(m, src)
}
func (m *EntrypointExecRequest_Exit) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Exit.Size(m)
}
func (m *EntrypointExecRequest_Exit) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Exit.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Exit proto.InternalMessageInfo

func (m *EntrypointExecRequest_Exit) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type EntrypointExecRequest_Output struct {
	Channel              EntrypointExecRequest_Output_Channel `protobuf:"varint,1,opt,name=channel,proto3,enum=hashicorp.waypoint.EntrypointExecRequest_Output_Channel" json:"channel,omitempty"`
	Data                 []byte                               `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *EntrypointExecRequest_Output) Reset()         { *m = EntrypointExecRequest_Output{} }
func (m *EntrypointExecRequest_Output) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Output) ProtoMessage()    {}
func (*EntrypointExecRequest_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{62, 2}
}

func (m *EntrypointExecRequest_Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Output.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Output.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Output.Merge(m, src)
}
func (m *EntrypointExecRequest_Output) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Output.Size(m)
}
func (m *EntrypointExecRequest_Output) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Output.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Output proto.InternalMessageInfo

func (m *EntrypointExecRequest_Output) GetChannel() EntrypointExecRequest_Output_Channel {
	if m != nil {
		return m.Channel
	}
	return EntrypointExecRequest_Output_UNKNOWN
}

func (m *EntrypointExecRequest_Output) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EntrypointExecRequest_Error struct {
	Error                *status.Status `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EntrypointExecRequest_Error) Reset()         { *m = EntrypointExecRequest_Error{} }
func (m *EntrypointExecRequest_Error) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecRequest_Error) ProtoMessage()    {}
func (*EntrypointExecRequest_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{62, 3}
}

func (m *EntrypointExecRequest_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecRequest_Error.Unmarshal(m, b)
}
func (m *EntrypointExecRequest_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecRequest_Error.Marshal(b, m, deterministic)
}
func (m *EntrypointExecRequest_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecRequest_Error.Merge(m, src)
}
func (m *EntrypointExecRequest_Error) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecRequest_Error.Size(m)
}
func (m *EntrypointExecRequest_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecRequest_Error.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecRequest_Error proto.InternalMessageInfo

func (m *EntrypointExecRequest_Error) GetError() *status.Status {
	if m != nil {
		return m.Error
	}
	return nil
}

type EntrypointExecResponse struct {
	// Types that are valid to be assigned to Event:
	//	*EntrypointExecResponse_Input
	//	*EntrypointExecResponse_Winch
	//	*EntrypointExecResponse_Opened
	Event                isEntrypointExecResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *EntrypointExecResponse) Reset()         { *m = EntrypointExecResponse{} }
func (m *EntrypointExecResponse) String() string { return proto.CompactTextString(m) }
func (*EntrypointExecResponse) ProtoMessage()    {}
func (*EntrypointExecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{63}
}

func (m *EntrypointExecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntrypointExecResponse.Unmarshal(m, b)
}
func (m *EntrypointExecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntrypointExecResponse.Marshal(b, m, deterministic)
}
func (m *EntrypointExecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntrypointExecResponse.Merge(m, src)
}
func (m *EntrypointExecResponse) XXX_Size() int {
	return xxx_messageInfo_EntrypointExecResponse.Size(m)
}
func (m *EntrypointExecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EntrypointExecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EntrypointExecResponse proto.InternalMessageInfo

type isEntrypointExecResponse_Event interface {
	isEntrypointExecResponse_Event()
}

type EntrypointExecResponse_Input struct {
	Input []byte `protobuf:"bytes,1,opt,name=input,proto3,oneof"`
}

type EntrypointExecResponse_Winch struct {
	Winch *ExecStreamRequest_WindowSize `protobuf:"bytes,2,opt,name=winch,proto3,oneof"`
}

type EntrypointExecResponse_Opened struct {
	Opened bool `protobuf:"varint,3,opt,name=opened,proto3,oneof"`
}

func (*EntrypointExecResponse_Input) isEntrypointExecResponse_Event() {}

func (*EntrypointExecResponse_Winch) isEntrypointExecResponse_Event() {}

func (*EntrypointExecResponse_Opened) isEntrypointExecResponse_Event() {}

func (m *EntrypointExecResponse) GetEvent() isEntrypointExecResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *EntrypointExecResponse) GetInput() []byte {
	if x, ok := m.GetEvent().(*EntrypointExecResponse_Input); ok {
		return x.Input
	}
	return nil
}

func (m *EntrypointExecResponse) GetWinch() *ExecStreamRequest_WindowSize {
	if x, ok := m.GetEvent().(*EntrypointExecResponse_Winch); ok {
		return x.Winch
	}
	return nil
}

func (m *EntrypointExecResponse) GetOpened() bool {
	if x, ok := m.GetEvent().(*EntrypointExecResponse_Opened); ok {
		return x.Opened
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EntrypointExecResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EntrypointExecResponse_Input)(nil),
		(*EntrypointExecResponse_Winch)(nil),
		(*EntrypointExecResponse_Opened)(nil),
	}
}

// The outer structure of the token that is directly Marshaled and
// ASCII armored.
type TokenTransport struct {
	// A Marshaled token, stored as bytes because we need to to validate
	// it with the given signature.
	Body []byte `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// The signature of body for validation.
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The key used to generate the signature.
	KeyId string `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Any configuration style metadata that can be passed along with the token
	// without invalidating the token body itself.
	Metadata             map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TokenTransport) Reset()         { *m = TokenTransport{} }
func (m *TokenTransport) String() string { return proto.CompactTextString(m) }
func (*TokenTransport) ProtoMessage()    {}
func (*TokenTransport) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{64}
}

func (m *TokenTransport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenTransport.Unmarshal(m, b)
}
func (m *TokenTransport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenTransport.Marshal(b, m, deterministic)
}
func (m *TokenTransport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenTransport.Merge(m, src)
}
func (m *TokenTransport) XXX_Size() int {
	return xxx_messageInfo_TokenTransport.Size(m)
}
func (m *TokenTransport) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenTransport.DiscardUnknown(m)
}

var xxx_messageInfo_TokenTransport proto.InternalMessageInfo

func (m *TokenTransport) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *TokenTransport) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *TokenTransport) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *TokenTransport) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// The authenticated Token information. This is used to authenticate requests.
type Token struct {
	// The user that the token is fore.
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// A random id for the token. Also functions as a nonce when signing.
	TokenId []byte `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// When the token is valid until. After the given date, the token will be rejected.
	// When this is not set, the token is valid forever.
	ValidUntil *timestamp.Timestamp `protobuf:"bytes,3,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	// Indicates whether or not this token can be used for to authenticate RPCs.
	Login bool `protobuf:"varint,4,opt,name=login,proto3" json:"login,omitempty"`
	// Inidicates whether or not this token can be used as an invite.
	Invite               bool     `protobuf:"varint,5,opt,name=invite,proto3" json:"invite,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{65}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Token) GetTokenId() []byte {
	if m != nil {
		return m.TokenId
	}
	return nil
}

func (m *Token) GetValidUntil() *timestamp.Timestamp {
	if m != nil {
		return m.ValidUntil
	}
	return nil
}

func (m *Token) GetLogin() bool {
	if m != nil {
		return m.Login
	}
	return false
}

func (m *Token) GetInvite() bool {
	if m != nil {
		return m.Invite
	}
	return false
}

// Represents a key used to sign tokens using HMAC
type HMACKey struct {
	// The identifier of the key.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A randomly generated key used to sign tokens with
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HMACKey) Reset()         { *m = HMACKey{} }
func (m *HMACKey) String() string { return proto.CompactTextString(m) }
func (*HMACKey) ProtoMessage()    {}
func (*HMACKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{66}
}

func (m *HMACKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HMACKey.Unmarshal(m, b)
}
func (m *HMACKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HMACKey.Marshal(b, m, deterministic)
}
func (m *HMACKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HMACKey.Merge(m, src)
}
func (m *HMACKey) XXX_Size() int {
	return xxx_messageInfo_HMACKey.Size(m)
}
func (m *HMACKey) XXX_DiscardUnknown() {
	xxx_messageInfo_HMACKey.DiscardUnknown(m)
}

var xxx_messageInfo_HMACKey proto.InternalMessageInfo

func (m *HMACKey) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HMACKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

// Passed with GenerateInviteToken with the params on how the invite token should
// be generate.
type InviteTokenRequest struct {
	// How long the token should be valid until. The resulting token has a timestamp
	// encoded within it by adding the current time to this duration.
	Duration             string   `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InviteTokenRequest) Reset()         { *m = InviteTokenRequest{} }
func (m *InviteTokenRequest) String() string { return proto.CompactTextString(m) }
func (*InviteTokenRequest) ProtoMessage()    {}
func (*InviteTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{67}
}

func (m *InviteTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InviteTokenRequest.Unmarshal(m, b)
}
func (m *InviteTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InviteTokenRequest.Marshal(b, m, deterministic)
}
func (m *InviteTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InviteTokenRequest.Merge(m, src)
}
func (m *InviteTokenRequest) XXX_Size() int {
	return xxx_messageInfo_InviteTokenRequest.Size(m)
}
func (m *InviteTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InviteTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InviteTokenRequest proto.InternalMessageInfo

func (m *InviteTokenRequest) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

// Returned by any action that creates a token.
type NewTokenResponse struct {
	// The new token which can be presented to whichever API expects it.
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewTokenResponse) Reset()         { *m = NewTokenResponse{} }
func (m *NewTokenResponse) String() string { return proto.CompactTextString(m) }
func (*NewTokenResponse) ProtoMessage()    {}
func (*NewTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{68}
}

func (m *NewTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewTokenResponse.Unmarshal(m, b)
}
func (m *NewTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewTokenResponse.Marshal(b, m, deterministic)
}
func (m *NewTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewTokenResponse.Merge(m, src)
}
func (m *NewTokenResponse) XXX_Size() int {
	return xxx_messageInfo_NewTokenResponse.Size(m)
}
func (m *NewTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewTokenResponse proto.InternalMessageInfo

func (m *NewTokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// Passed to ConvertInviteToken to create a new token that can be used to authenticate RPCs.
type ConvertInviteTokenRequest struct {
	// A token previous returned by GenerateInviteToken.
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConvertInviteTokenRequest) Reset()         { *m = ConvertInviteTokenRequest{} }
func (m *ConvertInviteTokenRequest) String() string { return proto.CompactTextString(m) }
func (*ConvertInviteTokenRequest) ProtoMessage()    {}
func (*ConvertInviteTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{69}
}

func (m *ConvertInviteTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvertInviteTokenRequest.Unmarshal(m, b)
}
func (m *ConvertInviteTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvertInviteTokenRequest.Marshal(b, m, deterministic)
}
func (m *ConvertInviteTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvertInviteTokenRequest.Merge(m, src)
}
func (m *ConvertInviteTokenRequest) XXX_Size() int {
	return xxx_messageInfo_ConvertInviteTokenRequest.Size(m)
}
func (m *ConvertInviteTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvertInviteTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConvertInviteTokenRequest proto.InternalMessageInfo

func (m *ConvertInviteTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterEnum("hashicorp.waypoint.Component_Type", Component_Type_name, Component_Type_value)
	proto.RegisterEnum("hashicorp.waypoint.Status_State", Status_State_name, Status_State_value)
	proto.RegisterEnum("hashicorp.waypoint.OperationOrder_Order", OperationOrder_Order_name, OperationOrder_Order_value)
	proto.RegisterEnum("hashicorp.waypoint.Job_State", Job_State_name, Job_State_value)
	proto.RegisterEnum("hashicorp.waypoint.Deployment_State", Deployment_State_name, Deployment_State_value)
	proto.RegisterEnum("hashicorp.waypoint.ExecStreamResponse_Output_Channel", ExecStreamResponse_Output_Channel_name, ExecStreamResponse_Output_Channel_value)
	proto.RegisterEnum("hashicorp.waypoint.EntrypointExecRequest_Output_Channel", EntrypointExecRequest_Output_Channel_name, EntrypointExecRequest_Output_Channel_value)
	proto.RegisterType((*Application)(nil), "hashicorp.waypoint.Application")
	proto.RegisterType((*Project)(nil), "hashicorp.waypoint.Project")
	proto.RegisterType((*Workspace)(nil), "hashicorp.waypoint.Workspace")
	proto.RegisterType((*Ref)(nil), "hashicorp.waypoint.Ref")
	proto.RegisterType((*Ref_Application)(nil), "hashicorp.waypoint.Ref.Application")
	proto.RegisterType((*Ref_Project)(nil), "hashicorp.waypoint.Ref.Project")
	proto.RegisterType((*Ref_Workspace)(nil), "hashicorp.waypoint.Ref.Workspace")
	proto.RegisterType((*Ref_Runner)(nil), "hashicorp.waypoint.Ref.Runner")
	proto.RegisterType((*Ref_RunnerId)(nil), "hashicorp.waypoint.Ref.RunnerId")
	proto.RegisterType((*Ref_RunnerAny)(nil), "hashicorp.waypoint.Ref.RunnerAny")
	proto.RegisterType((*Component)(nil), "hashicorp.waypoint.Component")
	proto.RegisterType((*Status)(nil), "hashicorp.waypoint.Status")
	proto.RegisterType((*StatusFilter)(nil), "hashicorp.waypoint.StatusFilter")
	proto.RegisterType((*StatusFilter_Filter)(nil), "hashicorp.waypoint.StatusFilter.Filter")
	proto.RegisterType((*OperationOrder)(nil), "hashicorp.waypoint.OperationOrder")
	proto.RegisterType((*QueueJobRequest)(nil), "hashicorp.waypoint.QueueJobRequest")
	proto.RegisterType((*QueueJobResponse)(nil), "hashicorp.waypoint.QueueJobResponse")
	proto.RegisterType((*ValidateJobRequest)(nil), "hashicorp.waypoint.ValidateJobRequest")
	proto.RegisterType((*ValidateJobResponse)(nil), "hashicorp.waypoint.ValidateJobResponse")
	proto.RegisterType((*Job)(nil), "hashicorp.waypoint.Job")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.Job.LabelsEntry")
	proto.RegisterType((*Job_Result)(nil), "hashicorp.waypoint.Job.Result")
	proto.RegisterType((*Job_Local)(nil), "hashicorp.waypoint.Job.Local")
	proto.RegisterType((*Job_Noop)(nil), "hashicorp.waypoint.Job.Noop")
	proto.RegisterType((*Job_BuildOp)(nil), "hashicorp.waypoint.Job.BuildOp")
	proto.RegisterType((*Job_BuildResult)(nil), "hashicorp.waypoint.Job.BuildResult")
	proto.RegisterType((*Job_PushOp)(nil), "hashicorp.waypoint.Job.PushOp")
	proto.RegisterType((*Job_PushResult)(nil), "hashicorp.waypoint.Job.PushResult")
	proto.RegisterType((*Job_DeployOp)(nil), "hashicorp.waypoint.Job.DeployOp")
	proto.RegisterType((*Job_DeployResult)(nil), "hashicorp.waypoint.Job.DeployResult")
	proto.RegisterType((*Job_DestroyDeployOp)(nil), "hashicorp.waypoint.Job.DestroyDeployOp")
	proto.RegisterType((*Job_ReleaseOp)(nil), "hashicorp.waypoint.Job.ReleaseOp")
	proto.RegisterType((*Job_ReleaseResult)(nil), "hashicorp.waypoint.Job.ReleaseResult")
	proto.RegisterType((*GetJobRequest)(nil), "hashicorp.waypoint.GetJobRequest")
	proto.RegisterType((*GetJobStreamRequest)(nil), "hashicorp.waypoint.GetJobStreamRequest")
	proto.RegisterType((*GetJobStreamResponse)(nil), "hashicorp.waypoint.GetJobStreamResponse")
	proto.RegisterType((*GetJobStreamResponse_Open)(nil), "hashicorp.waypoint.GetJobStreamResponse.Open")
	proto.RegisterType((*GetJobStreamResponse_State)(nil), "hashicorp.waypoint.GetJobStreamResponse.State")
	proto.RegisterType((*GetJobStreamResponse_Terminal)(nil), "hashicorp.waypoint.GetJobStreamResponse.Terminal")
	proto.RegisterType((*GetJobStreamResponse_Terminal_Line)(nil), "hashicorp.waypoint.GetJobStreamResponse.Terminal.Line")
	proto.RegisterType((*GetJobStreamResponse_Error)(nil), "hashicorp.waypoint.GetJobStreamResponse.Error")
	proto.RegisterType((*GetJobStreamResponse_Complete)(nil), "hashicorp.waypoint.GetJobStreamResponse.Complete")
	proto.RegisterType((*Runner)(nil), "hashicorp.waypoint.Runner")
	proto.RegisterType((*RunnerConfigRequest)(nil), "hashicorp.waypoint.RunnerConfigRequest")
	proto.RegisterType((*RunnerConfigRequest_Open)(nil), "hashicorp.waypoint.RunnerConfigRequest.Open")
	proto.RegisterType((*RunnerConfigResponse)(nil), "hashicorp.waypoint.RunnerConfigResponse")
	proto.RegisterType((*RunnerConfig)(nil), "hashicorp.waypoint.RunnerConfig")
	proto.RegisterType((*RunnerJobStreamRequest)(nil), "hashicorp.waypoint.RunnerJobStreamRequest")
	proto.RegisterType((*RunnerJobStreamRequest_Request)(nil), "hashicorp.waypoint.RunnerJobStreamRequest.Request")
	proto.RegisterType((*RunnerJobStreamRequest_Ack)(nil), "hashicorp.waypoint.RunnerJobStreamRequest.Ack")
	proto.RegisterType((*RunnerJobStreamRequest_Complete)(nil), "hashicorp.waypoint.RunnerJobStreamRequest.Complete")
	proto.RegisterType((*RunnerJobStreamRequest_Error)(nil), "hashicorp.waypoint.RunnerJobStreamRequest.Error")
	proto.RegisterType((*RunnerJobStreamResponse)(nil), "hashicorp.waypoint.RunnerJobStreamResponse")
	proto.RegisterType((*RunnerJobStreamResponse_JobAssignment)(nil), "hashicorp.waypoint.RunnerJobStreamResponse.JobAssignment")
	proto.RegisterType((*RunnerGetDeploymentConfigRequest)(nil), "hashicorp.waypoint.RunnerGetDeploymentConfigRequest")
	proto.RegisterType((*RunnerGetDeploymentConfigResponse)(nil), "hashicorp.waypoint.RunnerGetDeploymentConfigResponse")
	proto.RegisterType((*GetRunnerRequest)(nil), "hashicorp.waypoint.GetRunnerRequest")
	proto.RegisterType((*SetServerConfigRequest)(nil), "hashicorp.waypoint.SetServerConfigRequest")
	proto.RegisterType((*ServerConfig)(nil), "hashicorp.waypoint.ServerConfig")
	proto.RegisterType((*ServerConfig_AdvertiseAddr)(nil), "hashicorp.waypoint.ServerConfig.AdvertiseAddr")
	proto.RegisterType((*UpsertBuildRequest)(nil), "hashicorp.waypoint.UpsertBuildRequest")
	proto.RegisterType((*UpsertBuildResponse)(nil), "hashicorp.waypoint.UpsertBuildResponse")
	proto.RegisterType((*ListBuildsRequest)(nil), "hashicorp.waypoint.ListBuildsRequest")
	proto.RegisterType((*ListBuildsResponse)(nil), "hashicorp.waypoint.ListBuildsResponse")
	proto.RegisterType((*GetLatestBuildRequest)(nil), "hashicorp.waypoint.GetLatestBuildRequest")
	proto.RegisterType((*Build)(nil), "hashicorp.waypoint.Build")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.Build.LabelsEntry")
	proto.RegisterType((*Artifact)(nil), "hashicorp.waypoint.Artifact")
	proto.RegisterType((*UpsertPushedArtifactRequest)(nil), "hashicorp.waypoint.UpsertPushedArtifactRequest")
	proto.RegisterType((*UpsertPushedArtifactResponse)(nil), "hashicorp.waypoint.UpsertPushedArtifactResponse")
	proto.RegisterType((*GetLatestPushedArtifactRequest)(nil), "hashicorp.waypoint.GetLatestPushedArtifactRequest")
	proto.RegisterType((*ListPushedArtifactsRequest)(nil), "hashicorp.waypoint.ListPushedArtifactsRequest")
	proto.RegisterType((*ListPushedArtifactsResponse)(nil), "hashicorp.waypoint.ListPushedArtifactsResponse")
	proto.RegisterType((*PushedArtifact)(nil), "hashicorp.waypoint.PushedArtifact")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.PushedArtifact.LabelsEntry")
	proto.RegisterType((*GetDeploymentRequest)(nil), "hashicorp.waypoint.GetDeploymentRequest")
	proto.RegisterType((*UpsertDeploymentRequest)(nil), "hashicorp.waypoint.UpsertDeploymentRequest")
	proto.RegisterType((*UpsertDeploymentResponse)(nil), "hashicorp.waypoint.UpsertDeploymentResponse")
	proto.RegisterType((*ListDeploymentsRequest)(nil), "hashicorp.waypoint.ListDeploymentsRequest")
	proto.RegisterType((*ListDeploymentsResponse)(nil), "hashicorp.waypoint.ListDeploymentsResponse")
	proto.RegisterType((*Deployment)(nil), "hashicorp.waypoint.Deployment")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.Deployment.LabelsEntry")
	proto.RegisterType((*UpsertReleaseRequest)(nil), "hashicorp.waypoint.UpsertReleaseRequest")
	proto.RegisterType((*UpsertReleaseResponse)(nil), "hashicorp.waypoint.UpsertReleaseResponse")
	proto.RegisterType((*Release)(nil), "hashicorp.waypoint.Release")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.Release.LabelsEntry")
	proto.RegisterType((*Release_Split)(nil), "hashicorp.waypoint.Release.Split")
	proto.RegisterType((*Release_SplitTarget)(nil), "hashicorp.waypoint.Release.SplitTarget")
	proto.RegisterType((*GetLogStreamRequest)(nil), "hashicorp.waypoint.GetLogStreamRequest")
	proto.RegisterType((*LogBatch)(nil), "hashicorp.waypoint.LogBatch")
	proto.RegisterType((*LogBatch_Entry)(nil), "hashicorp.waypoint.LogBatch.Entry")
	proto.RegisterType((*ConfigVar)(nil), "hashicorp.waypoint.ConfigVar")
	proto.RegisterType((*ConfigSetRequest)(nil), "hashicorp.waypoint.ConfigSetRequest")
	proto.RegisterType((*ConfigSetResponse)(nil), "hashicorp.waypoint.ConfigSetResponse")
	proto.RegisterType((*ConfigGetRequest)(nil), "hashicorp.waypoint.ConfigGetRequest")
	proto.RegisterType((*ConfigGetResponse)(nil), "hashicorp.waypoint.ConfigGetResponse")
	proto.RegisterType((*ExecStreamRequest)(nil), "hashicorp.waypoint.ExecStreamRequest")
	proto.RegisterType((*ExecStreamRequest_Start)(nil), "hashicorp.waypoint.ExecStreamRequest.Start")
	proto.RegisterType((*ExecStreamRequest_Input)(nil), "hashicorp.waypoint.ExecStreamRequest.Input")
	proto.RegisterType((*ExecStreamRequest_PTY)(nil), "hashicorp.waypoint.ExecStreamRequest.PTY")
	proto.RegisterType((*ExecStreamRequest_WindowSize)(nil), "hashicorp.waypoint.ExecStreamRequest.WindowSize")
	proto.RegisterType((*ExecStreamResponse)(nil), "hashicorp.waypoint.ExecStreamResponse")
	proto.RegisterType((*ExecStreamResponse_Exit)(nil), "hashicorp.waypoint.ExecStreamResponse.Exit")
	proto.RegisterType((*ExecStreamResponse_Output)(nil), "hashicorp.waypoint.ExecStreamResponse.Output")
	proto.RegisterType((*EntrypointConfigRequest)(nil), "hashicorp.waypoint.EntrypointConfigRequest")
	proto.RegisterType((*EntrypointConfigResponse)(nil), "hashicorp.waypoint.EntrypointConfigResponse")
	proto.RegisterType((*EntrypointConfig)(nil), "hashicorp.waypoint.EntrypointConfig")
	proto.RegisterType((*EntrypointConfig_Exec)(nil), "hashicorp.waypoint.EntrypointConfig.Exec")
	proto.RegisterType((*EntrypointLogBatch)(nil), "hashicorp.waypoint.EntrypointLogBatch")
	proto.RegisterType((*EntrypointExecRequest)(nil), "hashicorp.waypoint.EntrypointExecRequest")
	proto.RegisterType((*EntrypointExecRequest_Open)(nil), "hashicorp.waypoint.EntrypointExecRequest.Open")
	proto.RegisterType((*EntrypointExecRequest_Exit)(nil), "hashicorp.waypoint.EntrypointExecRequest.Exit")
	proto.RegisterType((*EntrypointExecRequest_Output)(nil), "hashicorp.waypoint.EntrypointExecRequest.Output")
	proto.RegisterType((*EntrypointExecRequest_Error)(nil), "hashicorp.waypoint.EntrypointExecRequest.Error")
	proto.RegisterType((*EntrypointExecResponse)(nil), "hashicorp.waypoint.EntrypointExecResponse")
	proto.RegisterType((*TokenTransport)(nil), "hashicorp.waypoint.TokenTransport")
	proto.RegisterMapType((map[string]string)(nil), "hashicorp.waypoint.TokenTransport.MetadataEntry")
	proto.RegisterType((*Token)(nil), "hashicorp.waypoint.Token")
	proto.RegisterType((*HMACKey)(nil), "hashicorp.waypoint.HMACKey")
	proto.RegisterType((*InviteTokenRequest)(nil), "hashicorp.waypoint.InviteTokenRequest")
	proto.RegisterType((*NewTokenResponse)(nil), "hashicorp.waypoint.NewTokenResponse")
	proto.RegisterType((*ConvertInviteTokenRequest)(nil), "hashicorp.waypoint.ConvertInviteTokenRequest")
}

func init() {
	proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7)
}

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 4311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5b, 0xdd, 0x6f, 0x1b, 0x57,
	0x76, 0xd7, 0xf0, 0x9b, 0x87, 0xfa, 0x60, 0xae, 0xbf, 0xe8, 0xb1, 0x37, 0x76, 0x26, 0x4e, 0x2c,
	0x27, 0x59, 0xda, 0x51, 0x62, 0x47, 0xb2, 0xe3, 0xb8, 0xfa, 0xa0, 0x25, 0x7a, 0x65, 0x49, 0x1e,
	0x52, 0x71, 0xdc, 0xb4, 0x21, 0x46, 0x9c, 0x2b, 0x69, 0x2c, 0x6a, 0x86, 0x99, 0x19, 0x4a, 0xe1,
	0x02, 0xfb, 0x56, 0xa0, 0x45, 0x9f, 0xfb, 0xb0, 0x40, 0xb1, 0xdd, 0xf6, 0xa5, 0xd8, 0xd7, 0xf6,
	0xad, 0xd8, 0xd7, 0x05, 0xda, 0xfe, 0x0f, 0x05, 0x8a, 0xa2, 0xed, 0x1f, 0xd0, 0xbe, 0x14, 0xd8,
	0xa7, 0xe2, 0x7e, 0xcd, 0x07, 0x39, 0x43, 0x0e, 0x25, 0x15, 0x58, 0xa0, 0xfb, 0x22, 0xcd, 0x9d,
	0x39, 0xe7, 0xdc, 0x7b, 0xcf, 0x3d, 0xe7, 0x77, 0xcf, 0xbd, 0xe7, 0x10, 0xa6, 0x1d, 0x6c, 0x9f,
	0x60, 0xbb, 0xda, 0xb5, 0x2d, 0xd7, 0x42, 0xe8, 0x50, 0x73, 0x0e, 0x8d, 0xb6, 0x65, 0x77, 0xab,
	0xa7, 0x5a, 0xbf, 0x6b, 0x19, 0xa6, 0x2b, 0x5f, 0x3f, 0xb0, 0xac, 0x83, 0x0e, 0xbe, 0x4f, 0x29,
	0xf6, 0x7a, 0xfb, 0xf7, 0x35, 0xb3, 0xcf, 0xc8, 0xe5, 0x1b, 0x83, 0x9f, 0xf0, 0x71, 0xd7, 0x15,
	0x1f, 0x6f, 0x0d, 0x7e, 0x74, 0x8d, 0x63, 0xec, 0xb8, 0xda, 0x71, 0x97, 0x13, 0x5c, 0xe3, 0x04,
	0x76, 0xb7, 0x7d, 0xdf, 0x71, 0x35, 0xb7, 0xe7, 0xb0, 0x0f, 0xca, 0x1f, 0x41, 0x69, 0xb9, 0xdb,
	0xed, 0x18, 0x6d, 0xcd, 0x35, 0x2c, 0x13, 0x2d, 0x41, 0xbe, 0x6b, 0x5b, 0x6f, 0x71, 0xdb, 0xad,
	0xa4, 0x6e, 0x4b, 0xf3, 0xa5, 0x85, 0x5b, 0xd5, 0xe1, 0x61, 0x56, 0x55, 0xbc, 0x5f, 0xdd, 0x61,
	0x64, 0xaa, 0xa0, 0x47, 0x08, 0x32, 0xa6, 0x76, 0x8c, 0x2b, 0xd2, 0x6d, 0x69, 0xbe, 0xa8, 0xd2,
	0x67, 0xe5, 0x47, 0x90, 0xdf, 0x19, 0xf1, 0xf9, 0x16, 0x14, 0x5f, 0x5b, 0xf6, 0x91, 0xd3, 0xd5,
	0xda, 0x38, 0x92, 0xe0, 0x9f, 0x52, 0x90, 0x56, 0xf1, 0xbe, 0x5c, 0x0f, 0x8f, 0xf2, 0x36, 0x94,
	0x34, 0xbf, 0xc9, 0x39, 0x82, 0xaf, 0x50, 0x25, 0x3c, 0x8f, 0xa2, 0x37, 0x4c, 0xf9, 0x7d, 0x7f,
	0x48, 0x01, 0x22, 0x29, 0x4c, 0x74, 0x2f, 0x38, 0xb0, 0x9b, 0x50, 0x3c, 0x15, 0x0d, 0x4e, 0xe8,
	0xbf, 0x90, 0x7f, 0x06, 0x39, 0xb5, 0x67, 0x9a, 0xd8, 0x46, 0x0f, 0x21, 0xad, 0x99, 0x7d, 0x4a,
	0x51, 0x5a, 0x78, 0x2f, 0x4e, 0x6f, 0x8c, 0x78, 0xd9, 0xec, 0x6f, 0x4c, 0xa9, 0x84, 0x1e, 0x2d,
	0x40, 0xca, 0xd0, 0xb9, 0xb6, 0x6f, 0x8f, 0xe6, 0xaa, 0xeb, 0x1b, 0x53, 0x6a, 0xca, 0xd0, 0x57,
	0x0a, 0x90, 0x73, 0x35, 0xfb, 0x00, 0xbb, 0xb2, 0x0c, 0x05, 0xf1, 0x0d, 0xcd, 0x52, 0x49, 0x6c,
	0x84, 0x29, 0x43, 0x97, 0x4b, 0x50, 0xf4, 0x7a, 0x53, 0xfe, 0x54, 0x82, 0xe2, 0xaa, 0x75, 0xdc,
	0xb5, 0x4c, 0x6c, 0xba, 0xe8, 0x11, 0x64, 0xdc, 0x7e, 0x97, 0x4d, 0x67, 0x76, 0x41, 0x89, 0xea,
	0xd6, 0x23, 0xae, 0x36, 0xfb, 0x5d, 0xac, 0x52, 0x7a, 0x6f, 0x91, 0x52, 0x81, 0x45, 0xaa, 0x42,
	0x86, 0x50, 0xa0, 0x12, 0xe4, 0x77, 0xb7, 0x7e, 0xb2, 0xb5, 0xfd, 0x7a, 0xab, 0x3c, 0x45, 0x1a,
	0x2b, 0xbb, 0xf5, 0xcd, 0xb5, 0x9a, 0x5a, 0x96, 0xd0, 0x34, 0x14, 0xd4, 0xda, 0x7a, 0xbd, 0xd1,
	0x54, 0xdf, 0x94, 0x53, 0xca, 0xaf, 0x53, 0x90, 0x6b, 0x50, 0x1b, 0x44, 0x8f, 0x20, 0x4b, 0xac,
	0x51, 0x8c, 0x23, 0x72, 0xfa, 0x8c, 0x94, 0xfe, 0xc3, 0x2a, 0x23, 0x27, 0x2b, 0xa7, 0x63, 0x57,
	0x33, 0x3a, 0x8e, 0x58, 0x5e, 0xde, 0x44, 0xf3, 0x90, 0xc5, 0xb6, 0x6d, 0xd9, 0x95, 0x34, 0x55,
	0x28, 0xaa, 0x32, 0xc3, 0xaf, 0xda, 0xdd, 0x36, 0x97, 0xa4, 0x32, 0x02, 0xb4, 0x04, 0xe0, 0xb8,
	0x9a, 0xed, 0xb6, 0x88, 0xaf, 0x54, 0x32, 0x94, 0x5c, 0x16, 0xe4, 0xc2, 0x91, 0xaa, 0x4d, 0xe1,
	0x48, 0x6a, 0x91, 0x52, 0x93, 0x36, 0x7a, 0x06, 0x33, 0x6d, 0xeb, 0xb8, 0xdb, 0xc1, 0x2e, 0x66,
	0xdc, 0xd9, 0xb1, 0xdc, 0xd3, 0x82, 0x81, 0xbc, 0x52, 0x96, 0x20, 0x4b, 0xe7, 0x33, 0xa4, 0x33,
	0x75, 0x77, 0x6b, 0xab, 0xbe, 0xb5, 0x5e, 0x96, 0x48, 0xa3, 0xb1, 0xbb, 0xba, 0x5a, 0x6b, 0x34,
	0xca, 0x29, 0x54, 0x84, 0x6c, 0x4d, 0x55, 0xb7, 0xd5, 0x72, 0x5a, 0xf9, 0xa5, 0x04, 0xd3, 0x6c,
	0x22, 0xcf, 0x8d, 0x8e, 0x8b, 0x6d, 0xb4, 0x0c, 0xf9, 0x7d, 0xfa, 0xe4, 0x54, 0xa4, 0xdb, 0xe9,
	0xf9, 0xd2, 0xc2, 0xdd, 0x78, 0x2d, 0x32, 0x96, 0x2a, 0xfb, 0xa7, 0x0a, 0x3e, 0x79, 0x13, 0x72,
	0x5c, 0xd8, 0xa2, 0x58, 0x90, 0x54, 0xb2, 0x05, 0xd9, 0x98, 0xe2, 0x4b, 0x42, 0x4c, 0x92, 0x89,
	0x53, 0xfe, 0x4e, 0x82, 0xd9, 0xed, 0x2e, 0xb6, 0xa9, 0x27, 0x6e, 0xdb, 0x3a, 0xb6, 0xd1, 0x57,
	0x90, 0xb5, 0xc8, 0x03, 0x17, 0x3b, 0x1f, 0x25, 0x36, 0xcc, 0x52, 0xa5, 0x7f, 0x55, 0xc6, 0x46,
	0xcc, 0x4e, 0xc7, 0x4e, 0x9b, 0x2e, 0x6a, 0x41, 0xa5, 0xcf, 0xe8, 0x32, 0x64, 0x3b, 0xc6, 0xb1,
	0xe1, 0xd2, 0xa5, 0x9b, 0x51, 0x59, 0x43, 0x79, 0x08, 0x59, 0xd6, 0x65, 0x11, 0xb2, 0xbb, 0x5b,
	0x8d, 0x5a, 0xb3, 0x3c, 0x85, 0x66, 0x01, 0x1a, 0xcd, 0x65, 0xb5, 0xd9, 0x6a, 0xd6, 0x5f, 0xd6,
	0xca, 0x12, 0x7a, 0x07, 0x66, 0x56, 0xb7, 0x5f, 0xee, 0x6c, 0xd6, 0x9a, 0x35, 0xf6, 0x2a, 0xa5,
	0x7c, 0x09, 0x73, 0xaf, 0x7a, 0xb8, 0x87, 0x5f, 0x58, 0x7b, 0x2a, 0xfe, 0xbe, 0x87, 0x1d, 0x17,
	0xdd, 0x83, 0xf4, 0x5b, 0x6b, 0x8f, 0xbb, 0xf3, 0xb5, 0xa8, 0x11, 0x13, 0x62, 0x42, 0xa3, 0xdc,
	0x83, 0xb2, 0xcf, 0xed, 0x74, 0x2d, 0xd3, 0xc1, 0xe8, 0x0a, 0xe4, 0xde, 0x5a, 0x7b, 0x2d, 0xcf,
	0x21, 0xb3, 0x6f, 0xad, 0xbd, 0xba, 0xae, 0xec, 0x03, 0xfa, 0x5a, 0xeb, 0x18, 0xba, 0xe6, 0x9e,
	0xad, 0x2f, 0xf4, 0x01, 0xcc, 0xea, 0x86, 0xa3, 0xed, 0x75, 0x70, 0x4b, 0x73, 0x1c, 0xe3, 0xc0,
	0xa4, 0x3a, 0x2d, 0xa8, 0x33, 0xfc, 0xed, 0x32, 0x7d, 0xa9, 0xfc, 0xb9, 0x04, 0x97, 0x42, 0x1d,
	0xf1, 0x61, 0x5d, 0x86, 0xec, 0x09, 0x79, 0x4d, 0xfb, 0x2a, 0xa8, 0xac, 0x81, 0x9e, 0x42, 0xf9,
	0x84, 0x11, 0x1b, 0x96, 0xd9, 0x62, 0x0e, 0x94, 0x8a, 0x75, 0xa0, 0x39, 0x9f, 0xb6, 0x46, 0x5d,
	0xe9, 0x5d, 0x00, 0x36, 0x16, 0x32, 0x00, 0xbe, 0x48, 0x81, 0x37, 0xca, 0xcf, 0x11, 0xa4, 0x5f,
	0x58, 0x7b, 0x83, 0x00, 0x85, 0x6a, 0x61, 0x1c, 0x67, 0x3d, 0xbe, 0x1f, 0x87, 0x81, 0x81, 0x1d,
	0x20, 0x0c, 0xf6, 0xcf, 0x82, 0x00, 0x9d, 0x1e, 0x0d, 0xbf, 0x1e, 0xac, 0x07, 0x30, 0x1c, 0xad,
	0xc2, 0x0c, 0x83, 0xd3, 0x96, 0x4d, 0xf1, 0x92, 0xa3, 0xc1, 0xbb, 0xa3, 0xd1, 0x58, 0x9d, 0x66,
	0x4c, 0x1c, 0xfe, 0x9f, 0x40, 0xae, 0xa3, 0xed, 0xe1, 0x8e, 0x53, 0xc9, 0x52, 0x37, 0x7c, 0x3f,
	0x66, 0x19, 0xab, 0x9b, 0x94, 0xaa, 0x66, 0xba, 0x76, 0x5f, 0xe5, 0x2c, 0xe8, 0x21, 0x64, 0x3b,
	0x56, 0x5b, 0xeb, 0x54, 0x2e, 0xd3, 0x9e, 0x7f, 0x14, 0xcb, 0x4b, 0x88, 0x88, 0xd3, 0x51, 0x6a,
	0xb4, 0x00, 0x19, 0xd3, 0xb2, 0xba, 0x95, 0x05, 0xca, 0x75, 0x33, 0x8e, 0x6b, 0xcb, 0xb2, 0xba,
	0x1b, 0x92, 0x4a, 0x69, 0xd1, 0x17, 0x90, 0xdd, 0xeb, 0x19, 0x1d, 0xbd, 0xf2, 0x59, 0xfc, 0x06,
	0x4f, 0x98, 0x56, 0x08, 0xd1, 0x36, 0xe1, 0x63, 0xf4, 0xe8, 0x73, 0xc8, 0x74, 0x7b, 0xce, 0x61,
	0xe5, 0xf3, 0x78, 0xe5, 0x10, 0xbe, 0x9d, 0x9e, 0x73, 0x48, 0xd9, 0x28, 0x35, 0x7a, 0x0c, 0x39,
	0x1d, 0x77, 0x3b, 0x56, 0xbf, 0xf2, 0x30, 0x7e, 0x8b, 0x23, 0x7c, 0x6b, 0x94, 0x8a, 0x72, 0x72,
	0x0e, 0xb4, 0x03, 0xb3, 0x3a, 0x76, 0x5c, 0xdb, 0xea, 0xb7, 0xb8, 0x8c, 0x47, 0x54, 0xc6, 0xdd,
	0x78, 0x19, 0x94, 0x3a, 0x20, 0x6a, 0x46, 0x0f, 0xbe, 0x42, 0x4f, 0x21, 0x6f, 0xe3, 0x0e, 0xd6,
	0x1c, 0x5c, 0xf9, 0x22, 0xde, 0x50, 0x88, 0x28, 0x95, 0x91, 0x51, 0x21, 0x82, 0x07, 0x7d, 0x26,
	0xe0, 0x51, 0xa7, 0x38, 0x16, 0xbb, 0x4c, 0xa1, 0xcd, 0xaa, 0x0e, 0x73, 0xcc, 0x17, 0xb0, 0x2e,
	0xec, 0x0b, 0x27, 0xdb, 0xed, 0xd5, 0x59, 0xc1, 0xc8, 0x6d, 0x6c, 0x09, 0xe0, 0x7b, 0x02, 0x34,
	0x6c, 0xd7, 0xd9, 0x1f, 0xbf, 0x67, 0x51, 0x6a, 0xba, 0x67, 0x3d, 0x81, 0x12, 0x13, 0xc6, 0x78,
	0x0f, 0xc6, 0xf2, 0x72, 0x07, 0xa6, 0xcc, 0x0f, 0xa1, 0xa0, 0xb5, 0x8f, 0x18, 0xe7, 0xe1, 0x58,
	0xce, 0xbc, 0xd6, 0x3e, 0x8a, 0xde, 0x27, 0x8d, 0xc9, 0xf6, 0x49, 0x7f, 0x37, 0x7f, 0x3b, 0x6e,
	0x37, 0x7f, 0x04, 0x39, 0x1b, 0x3b, 0xbd, 0x8e, 0x5b, 0x39, 0x1a, 0x6d, 0x9e, 0x2a, 0xa5, 0x52,
	0x39, 0xb5, 0xbc, 0x04, 0xa5, 0x80, 0x3f, 0xa2, 0x32, 0xa4, 0x8f, 0x70, 0x9f, 0x43, 0x14, 0x79,
	0xe4, 0x80, 0xd9, 0x13, 0x21, 0x0f, 0x6b, 0x3c, 0x4e, 0x2d, 0x4a, 0xf2, 0x6f, 0x25, 0xc8, 0x31,
	0x69, 0x68, 0x49, 0xf8, 0x94, 0x14, 0x0f, 0x61, 0x9e, 0x4f, 0xf1, 0x11, 0x70, 0xaf, 0x7a, 0xc4,
	0xbd, 0x8a, 0x81, 0x9f, 0x32, 0xca, 0xab, 0x38, 0x23, 0xf3, 0xab, 0x2f, 0x3d, 0xbf, 0x62, 0x88,
	0x77, 0x67, 0xb4, 0x5f, 0x89, 0x69, 0x73, 0xcf, 0x7a, 0xe6, 0xfb, 0x01, 0xc3, 0xba, 0x0f, 0xc6,
	0xf8, 0x01, 0xe7, 0x17, 0x5c, 0x72, 0x1e, 0xb2, 0x14, 0x8b, 0xe4, 0x1c, 0x64, 0x08, 0xbc, 0xc8,
	0x9f, 0x40, 0x9e, 0x23, 0x06, 0x7a, 0x0f, 0xa6, 0xc5, 0x16, 0x45, 0xa7, 0xc6, 0xb6, 0x9a, 0x12,
	0x7f, 0x47, 0x66, 0x22, 0x9f, 0x40, 0x29, 0xa0, 0x0b, 0x74, 0x3f, 0xac, 0xbf, 0xeb, 0x51, 0x83,
	0x61, 0xf4, 0xc9, 0xb5, 0x46, 0xfa, 0xc1, 0xfa, 0xb2, 0xed, 0x1a, 0xfb, 0x5a, 0x9b, 0x6b, 0x4d,
	0x5e, 0x82, 0x1c, 0xc3, 0xa7, 0x89, 0xbb, 0x94, 0x37, 0x01, 0xfc, 0x45, 0x40, 0x5f, 0x41, 0x41,
	0xe3, 0xa2, 0xb9, 0x84, 0x24, 0x83, 0xf0, 0x78, 0xe4, 0x17, 0x50, 0x10, 0x28, 0x75, 0x6e, 0x59,
	0x5b, 0x30, 0x1d, 0x5c, 0x64, 0xf4, 0x15, 0x00, 0x5b, 0xe6, 0x63, 0x6c, 0x0a, 0x89, 0x91, 0xfe,
	0xb0, 0xe6, 0x51, 0xa9, 0x01, 0x0e, 0xf9, 0x15, 0xcc, 0x0d, 0x00, 0xe9, 0xb9, 0x45, 0x36, 0xa0,
	0xe8, 0x01, 0x2a, 0x7a, 0x0e, 0x33, 0xae, 0xad, 0xed, 0xef, 0x1b, 0xed, 0x96, 0xd3, 0xed, 0x18,
	0xee, 0xe8, 0x23, 0x13, 0xe5, 0xaa, 0x36, 0x08, 0xa1, 0x3a, 0xcd, 0xf9, 0x68, 0x4b, 0x7e, 0x0e,
	0x33, 0x21, 0xeb, 0x44, 0x0f, 0x7d, 0xab, 0x66, 0x22, 0x6f, 0x8c, 0x10, 0xe9, 0xd9, 0xb2, 0xa2,
	0x46, 0x46, 0xe3, 0x00, 0xb9, 0x57, 0xbb, 0xb5, 0xdd, 0xda, 0x1a, 0x0b, 0xc6, 0x5f, 0x2f, 0xd7,
	0x9b, 0x24, 0x32, 0x4f, 0x05, 0xc3, 0xf4, 0xb4, 0x1f, 0x99, 0x67, 0x82, 0x11, 0x7b, 0x76, 0x65,
	0x06, 0x4a, 0xba, 0xe6, 0x6a, 0x2d, 0xc7, 0xea, 0xd9, 0x6d, 0xbc, 0x52, 0x82, 0xa2, 0x25, 0xe2,
	0xdb, 0x17, 0x99, 0xc2, 0x95, 0xf2, 0xc2, 0x8b, 0x4c, 0x61, 0xb1, 0xbc, 0xa3, 0x7c, 0x08, 0x33,
	0xeb, 0xd8, 0x0d, 0x84, 0x82, 0x31, 0x71, 0xe3, 0x27, 0x70, 0x89, 0xd1, 0x35, 0x5c, 0x1b, 0x6b,
	0xc7, 0x63, 0xa8, 0xff, 0x31, 0x0f, 0x97, 0xc3, 0xe4, 0x3c, 0xfc, 0x5b, 0x85, 0x8c, 0xd5, 0xc5,
	0x26, 0x57, 0xcf, 0x8f, 0xa3, 0xd4, 0x13, 0xc5, 0x47, 0x82, 0x73, 0x73, 0x63, 0x4a, 0xa5, 0xcc,
	0xe8, 0x79, 0xf0, 0x90, 0x50, 0x5a, 0xa8, 0x26, 0x96, 0x12, 0x3e, 0x32, 0xa0, 0x6d, 0x28, 0xb8,
	0xd8, 0x3e, 0x36, 0x4c, 0xad, 0xc3, 0x41, 0xec, 0xd3, 0xc4, 0xa2, 0x9a, 0x9c, 0x71, 0x63, 0x4a,
	0xf5, 0x84, 0x90, 0x81, 0xb1, 0xed, 0x22, 0x33, 0xe1, 0xc0, 0x68, 0x18, 0x4b, 0x06, 0xc6, 0x36,
	0x93, 0x6d, 0x28, 0x88, 0x6d, 0x88, 0x1f, 0xed, 0x92, 0x0f, 0x6c, 0x95, 0x33, 0x92, 0x81, 0x09,
	0x21, 0x04, 0x24, 0x89, 0x06, 0xe5, 0xbf, 0x95, 0x84, 0xa9, 0x2d, 0x41, 0xa1, 0x6b, 0xe3, 0x13,
	0xc3, 0xea, 0x39, 0xfc, 0xf0, 0x3b, 0x26, 0x98, 0xf0, 0xc8, 0xd1, 0x17, 0x90, 0x6f, 0xf7, 0x6c,
	0x9b, 0x38, 0x62, 0x2a, 0x09, 0xa7, 0xa0, 0x16, 0xa7, 0x8c, 0xf4, 0xf8, 0x53, 0x86, 0xfc, 0x2f,
	0x12, 0x14, 0x84, 0x8a, 0xd1, 0x26, 0x39, 0x69, 0x99, 0x58, 0x9c, 0x2f, 0x1f, 0x4d, 0xbc, 0x48,
	0xd5, 0x4d, 0xc3, 0xc4, 0x2a, 0x13, 0x82, 0x64, 0x28, 0xec, 0xf5, 0xf6, 0xf7, 0xb1, 0x8d, 0x75,
	0x7e, 0x74, 0xf1, 0xda, 0xf2, 0x3e, 0x64, 0x08, 0x29, 0xd9, 0x86, 0x6d, 0xed, 0x54, 0x6c, 0xc3,
	0xb6, 0x76, 0x4a, 0x4e, 0x80, 0x84, 0x5d, 0x5c, 0x3c, 0x90, 0x67, 0xb4, 0x08, 0x45, 0xef, 0x9e,
	0x8b, 0xcf, 0x6a, 0x64, 0x30, 0xe4, 0x11, 0xcb, 0x9f, 0x42, 0x96, 0x9d, 0x5c, 0xbc, 0x00, 0x43,
	0x1a, 0x13, 0x60, 0xc8, 0x1d, 0x28, 0x88, 0xa5, 0x4d, 0xce, 0x15, 0x08, 0x4b, 0x52, 0x93, 0x84,
	0x25, 0x2b, 0x79, 0xc8, 0xe2, 0x13, 0x6c, 0xba, 0x4a, 0xcf, 0xbb, 0x5e, 0x1a, 0x3c, 0x3c, 0xdd,
	0x04, 0xd8, 0xeb, 0xb7, 0x0c, 0xbd, 0x65, 0x99, 0x9d, 0xbe, 0xa7, 0xc9, 0x7e, 0x5d, 0xdf, 0x36,
	0x3b, 0x24, 0xd0, 0x85, 0xb6, 0xb8, 0xc0, 0x71, 0x2a, 0x69, 0xba, 0x70, 0x3f, 0x1a, 0x79, 0xcd,
	0xa3, 0x06, 0x18, 0x94, 0xbf, 0x92, 0xe0, 0x12, 0xeb, 0x77, 0xd5, 0x32, 0xf7, 0x8d, 0x03, 0x81,
	0x37, 0x2b, 0x21, 0xfc, 0xf8, 0x24, 0x12, 0x5e, 0x87, 0xd9, 0x42, 0xf0, 0x21, 0x3f, 0x66, 0xce,
	0x80, 0x16, 0x20, 0xc7, 0xc3, 0x61, 0x89, 0xaf, 0x5d, 0xac, 0x34, 0x95, 0x53, 0xfa, 0x7a, 0xd9,
	0x81, 0xcb, 0xe1, 0x8e, 0x38, 0xc0, 0x2d, 0x42, 0xae, 0x4d, 0xdf, 0x8c, 0xbc, 0x51, 0x0b, 0x72,
	0x72, 0x7a, 0x65, 0x0b, 0xa6, 0x83, 0xef, 0xd1, 0x57, 0x50, 0x62, 0x5f, 0x5a, 0x27, 0x9a, 0x77,
	0xb7, 0x12, 0xa3, 0x42, 0x42, 0xf6, 0xb5, 0x66, 0x13, 0x15, 0xf2, 0x47, 0x47, 0xf9, 0xe7, 0x0c,
	0x5c, 0x65, 0x02, 0x87, 0x50, 0x7b, 0x8b, 0xec, 0x53, 0xf4, 0x91, 0x4f, 0x7d, 0x21, 0x7e, 0x94,
	0x83, 0xcc, 0x55, 0xfe, 0x7f, 0x63, 0x4a, 0x15, 0x42, 0xd0, 0x0a, 0xa4, 0xb5, 0xf6, 0xd1, 0x28,
	0x38, 0x8e, 0x91, 0xb5, 0xdc, 0x3e, 0xa2, 0xd7, 0x90, 0xed, 0x23, 0xf4, 0x2a, 0x80, 0x79, 0xcc,
	0x97, 0x3e, 0x9b, 0x40, 0x50, 0x14, 0xea, 0xa1, 0x8d, 0x30, 0x1c, 0x3f, 0x98, 0x40, 0xde, 0x30,
	0x20, 0x7b, 0x3b, 0x45, 0xf6, 0x02, 0x76, 0x0a, 0xf9, 0x43, 0xc8, 0x8b, 0xc5, 0xb8, 0x01, 0x45,
	0x66, 0x5c, 0xfe, 0x2e, 0x5a, 0xb0, 0xf9, 0x01, 0x4c, 0xce, 0x42, 0x7a, 0xb9, 0x7d, 0x24, 0xaf,
	0x04, 0x9c, 0xdf, 0x77, 0x69, 0x69, 0xa2, 0x93, 0xc6, 0xe4, 0x98, 0xe3, 0x5b, 0xfb, 0xaf, 0x25,
	0xb8, 0x36, 0xa4, 0x29, 0x6e, 0xf1, 0xdf, 0x8a, 0xcb, 0x97, 0x40, 0x68, 0xb6, 0x94, 0x48, 0xd5,
	0x5c, 0x41, 0x2f, 0xac, 0xbd, 0x65, 0x4f, 0xc0, 0xc6, 0x94, 0x1a, 0x10, 0x27, 0x3f, 0x86, 0x99,
	0xd0, 0xe7, 0x09, 0x6e, 0xaa, 0xfc, 0xd1, 0x2b, 0x70, 0x9b, 0xf5, 0xbd, 0x8e, 0x5d, 0x3f, 0x3e,
	0x0c, 0x21, 0x84, 0x72, 0x0c, 0xef, 0x8d, 0xa0, 0xe1, 0x53, 0xbd, 0x05, 0x25, 0x96, 0x42, 0x69,
	0x69, 0xba, 0x6e, 0xf3, 0xc5, 0x02, 0xf6, 0x6a, 0x59, 0xd7, 0x6d, 0x74, 0x17, 0xe6, 0x38, 0x81,
	0x61, 0x3a, 0xb8, 0xdd, 0xb3, 0x31, 0x07, 0xc6, 0x59, 0xf6, 0xba, 0xce, 0xdf, 0x2a, 0xf7, 0xa1,
	0xbc, 0x2e, 0x6e, 0x6e, 0x92, 0x18, 0x82, 0xa2, 0xc2, 0xd5, 0x06, 0x76, 0x1b, 0x54, 0x4a, 0x18,
	0x12, 0x7d, 0xc4, 0x91, 0xe2, 0x11, 0x27, 0xc4, 0x28, 0x10, 0xe7, 0x57, 0x12, 0x4c, 0x07, 0x3f,
	0xa0, 0xd7, 0x30, 0xa7, 0xe9, 0x27, 0xd8, 0x76, 0x0d, 0x07, 0xd3, 0x29, 0x0a, 0xd8, 0xa9, 0x8e,
	0x93, 0x59, 0x5d, 0x16, 0x7c, 0x44, 0x0f, 0xea, 0xac, 0x16, 0x6c, 0x3a, 0xf2, 0x33, 0x98, 0x09,
	0x11, 0x90, 0xed, 0x34, 0xa0, 0x42, 0xfa, 0x4c, 0x36, 0xe6, 0x01, 0xad, 0x79, 0x6d, 0xa5, 0x06,
	0x68, 0xb7, 0xeb, 0x60, 0xdb, 0xe5, 0xa7, 0x36, 0x36, 0xf5, 0x49, 0xcf, 0x50, 0xca, 0x73, 0xb8,
	0x14, 0x12, 0xc3, 0xd7, 0x75, 0x62, 0x39, 0x7f, 0x29, 0xc1, 0x3b, 0x9b, 0x86, 0xc3, 0xc4, 0x38,
	0x62, 0x38, 0xb5, 0xe1, 0xb4, 0xd0, 0xb9, 0xaf, 0x13, 0x53, 0x93, 0x5f, 0x27, 0x2a, 0xeb, 0x80,
	0x82, 0x83, 0xe3, 0x93, 0xfc, 0x14, 0x72, 0x74, 0xf0, 0x62, 0x4d, 0x47, 0xcc, 0x92, 0x13, 0x2a,
	0xbf, 0x94, 0xe0, 0xca, 0x3a, 0x76, 0x37, 0x35, 0x17, 0x3b, 0x61, 0xcd, 0xff, 0xae, 0x4c, 0xf5,
	0x37, 0x69, 0xc8, 0xd2, 0x81, 0x0d, 0x8e, 0x28, 0x77, 0x11, 0x23, 0xca, 0x9f, 0xe1, 0x2e, 0x77,
	0x30, 0x4c, 0x5a, 0x80, 0x1c, 0x4b, 0x78, 0xf2, 0xf9, 0xc9, 0xf1, 0x29, 0x0d, 0x95, 0x53, 0xa2,
	0x27, 0x50, 0xf4, 0x62, 0x21, 0xbe, 0x19, 0x8e, 0x89, 0x9d, 0x7c, 0x7a, 0xb4, 0x18, 0x38, 0xcd,
	0x67, 0xe2, 0xef, 0x65, 0x87, 0xcf, 0xf1, 0xe8, 0xe9, 0xc0, 0x0d, 0xf2, 0x07, 0xb1, 0x16, 0x12,
	0x75, 0x87, 0x7c, 0x8e, 0xab, 0x2c, 0xe5, 0x4b, 0x28, 0x88, 0xf1, 0xa0, 0x07, 0x43, 0xb7, 0x11,
	0x97, 0x87, 0x82, 0xea, 0x65, 0xb3, 0xef, 0x8f, 0x5b, 0xf9, 0x63, 0xb8, 0xc1, 0xbc, 0x7a, 0xe0,
	0x86, 0x82, 0xdb, 0xea, 0x39, 0xaf, 0x37, 0x94, 0xef, 0xe0, 0x66, 0xb4, 0x78, 0xee, 0x58, 0xe7,
	0x95, 0xff, 0x2b, 0x09, 0xde, 0xf5, 0xbc, 0x2c, 0x7a, 0x0a, 0xbf, 0x2b, 0xee, 0xf6, 0xf3, 0x14,
	0xc8, 0x04, 0x5a, 0xc2, 0xa3, 0x8c, 0x03, 0xc0, 0xf4, 0x45, 0x0c, 0x33, 0x73, 0x06, 0x1f, 0x5c,
	0xf4, 0x7c, 0x8e, 0x41, 0xdd, 0xed, 0x71, 0x19, 0x49, 0xcf, 0xf3, 0x16, 0x83, 0x89, 0xc2, 0x98,
	0x85, 0x0c, 0x27, 0x0a, 0x79, 0x8a, 0x50, 0x69, 0xc1, 0x8d, 0x48, 0xcd, 0x70, 0x23, 0xf9, 0x03,
	0x28, 0x8a, 0x05, 0x17, 0xa3, 0x4a, 0x62, 0x25, 0x3e, 0x93, 0xf2, 0x5f, 0x69, 0x98, 0x0d, 0x7f,
	0x1d, 0xd4, 0x77, 0xfe, 0x22, 0xf4, 0x5d, 0xf8, 0xff, 0x85, 0x79, 0xd7, 0xa1, 0x40, 0x37, 0x3b,
	0x12, 0x73, 0x65, 0x59, 0x2a, 0x9f, 0xb6, 0xeb, 0x3a, 0x7a, 0xee, 0xc1, 0x61, 0x2e, 0x3e, 0x08,
	0x0a, 0xaf, 0xc8, 0x45, 0xe3, 0xe2, 0x13, 0x7a, 0x8d, 0x16, 0xb8, 0xd3, 0xe4, 0x8e, 0xf6, 0x3e,
	0xcc, 0xf8, 0x97, 0x9b, 0x7e, 0xb8, 0x38, 0xed, 0xbf, 0xac, 0xeb, 0xca, 0x1b, 0xb8, 0xc6, 0x70,
	0x6b, 0x98, 0xff, 0x9c, 0xd7, 0xa9, 0xca, 0x1f, 0x42, 0x65, 0x58, 0xb4, 0x07, 0x87, 0xe7, 0x93,
	0xfd, 0x17, 0x29, 0xb8, 0x4a, 0x3c, 0xc9, 0xff, 0xfc, 0x7b, 0x7c, 0xc1, 0xb6, 0xf2, 0x2d, 0x5c,
	0x1b, 0xd2, 0x8a, 0x87, 0x2d, 0x25, 0x5f, 0x7f, 0x62, 0x4c, 0xe3, 0x54, 0x1e, 0x64, 0x51, 0xfe,
	0x3d, 0x03, 0xe0, 0x7f, 0x1b, 0xd4, 0x73, 0xe1, 0x22, 0xf4, 0x5c, 0xbc, 0x00, 0x5c, 0x79, 0x1c,
	0xae, 0x0e, 0xb9, 0x33, 0x7a, 0x8a, 0xe1, 0x2c, 0xa8, 0x8f, 0x49, 0xe9, 0xb3, 0x61, 0x52, 0x66,
	0x42, 0x4c, 0xba, 0x05, 0x25, 0x81, 0x32, 0x3e, 0xb8, 0x80, 0x78, 0x55, 0xd7, 0xd1, 0xe7, 0x21,
	0x47, 0xc9, 0x8d, 0x08, 0x75, 0x02, 0x74, 0x68, 0xc5, 0x43, 0xa5, 0x3c, 0x5d, 0xe7, 0x8f, 0xc6,
	0x28, 0xe1, 0x82, 0x11, 0xe9, 0x71, 0x5c, 0xe5, 0xd0, 0x4e, 0x6d, 0x6b, 0x8d, 0x55, 0x0e, 0x01,
	0xe4, 0xd6, 0x6a, 0x3b, 0x9b, 0xdb, 0x6f, 0xca, 0x69, 0xf2, 0x61, 0xad, 0xd6, 0x68, 0xaa, 0xdb,
	0x6f, 0xca, 0x19, 0xe5, 0x25, 0x5c, 0x66, 0xa8, 0xe1, 0x65, 0x4d, 0x98, 0x5b, 0x9f, 0x31, 0x6d,
	0xb2, 0x05, 0x57, 0x06, 0xc4, 0x71, 0x7f, 0x38, 0xa3, 0xbc, 0xbf, 0xcf, 0x42, 0x9e, 0xbf, 0xfc,
	0xfd, 0xce, 0x2a, 0xac, 0xb8, 0x3a, 0x98, 0xa8, 0x8d, 0xb6, 0x50, 0xaf, 0x42, 0x61, 0x28, 0xb7,
	0x96, 0x3d, 0x53, 0x6e, 0x0d, 0x3d, 0x1b, 0xd8, 0x7c, 0xef, 0x8e, 0x12, 0x10, 0x55, 0xd1, 0x52,
	0x86, 0x74, 0xcf, 0xee, 0x50, 0xd8, 0x29, 0xaa, 0xe4, 0xf1, 0x3c, 0xa9, 0xf6, 0x17, 0x90, 0x65,
	0xc3, 0x5a, 0x86, 0x3c, 0x2b, 0xba, 0x19, 0x59, 0xec, 0x16, 0x9a, 0x58, 0x93, 0x15, 0xe9, 0x08,
	0x3e, 0x79, 0x13, 0x4a, 0x81, 0xf7, 0x89, 0xb6, 0x72, 0x5a, 0x29, 0x8a, 0xed, 0xb6, 0x48, 0xb9,
	0x64, 0x55, 0xd1, 0x54, 0x1e, 0xd3, 0xbc, 0xdc, 0xa6, 0x75, 0x10, 0xbe, 0xe1, 0x4d, 0x14, 0x20,
	0xfc, 0x9b, 0x04, 0x85, 0x4d, 0xeb, 0x60, 0x45, 0x73, 0xdb, 0x87, 0xc9, 0xc6, 0x71, 0x0b, 0x4a,
	0x86, 0xe9, 0xb8, 0x9a, 0xd9, 0xc6, 0x2d, 0x5e, 0x34, 0x5a, 0x54, 0x41, 0xbc, 0xaa, 0xeb, 0x64,
	0x7f, 0x63, 0xa9, 0x9a, 0x74, 0x7c, 0x88, 0x2b, 0xba, 0xac, 0xb2, 0x05, 0x63, 0x0c, 0xf2, 0x2e,
	0x64, 0xd9, 0xba, 0x84, 0xb2, 0x2a, 0xd2, 0x04, 0x59, 0x95, 0xa8, 0x1c, 0x8d, 0xf2, 0x1b, 0x5a,
	0x76, 0xca, 0x2f, 0xc5, 0xd1, 0xfa, 0x59, 0x03, 0x88, 0x8d, 0xa9, 0xb0, 0x63, 0x3f, 0xf1, 0x4b,
	0x77, 0x33, 0x89, 0xea, 0x94, 0x37, 0xa6, 0x46, 0x56, 0x2a, 0x47, 0xdb, 0xde, 0x4a, 0x1e, 0xb2,
	0x4e, 0xdb, 0xea, 0x62, 0x65, 0x1b, 0xca, 0x6c, 0x16, 0x0d, 0xec, 0x05, 0x71, 0x4f, 0xa0, 0x78,
	0xa2, 0xd9, 0x86, 0xb6, 0xd7, 0xc1, 0x09, 0xd3, 0x03, 0x3e, 0xbd, 0x72, 0x09, 0xde, 0x09, 0x08,
	0x64, 0xc0, 0xa9, 0xfc, 0x83, 0x24, 0xba, 0x59, 0xf7, 0xbb, 0x59, 0x3f, 0x6b, 0x91, 0xdc, 0x08,
	0x9d, 0xa5, 0x27, 0xd6, 0xd9, 0x55, 0xc8, 0x75, 0x6d, 0xbc, 0x6f, 0xfc, 0xc0, 0xb5, 0xc6, 0x5b,
	0xbe, 0x86, 0x76, 0xc4, 0x84, 0xd6, 0xfd, 0x09, 0x9d, 0x4f, 0x45, 0xff, 0x93, 0x81, 0x77, 0x6a,
	0x3f, 0xe0, 0x76, 0xd8, 0xb3, 0x56, 0x69, 0x0c, 0x62, 0x8b, 0xc8, 0xf6, 0xe3, 0x28, 0x71, 0x43,
	0x5c, 0x04, 0x92, 0x6d, 0x97, 0x67, 0x9e, 0x6d, 0x2a, 0xc4, 0x30, 0xbb, 0x3d, 0x91, 0x95, 0x4b,
	0x28, 0xa4, 0x4e, 0x58, 0x88, 0x10, 0xca, 0x8b, 0x36, 0x20, 0x7b, 0x6a, 0x98, 0xed, 0x43, 0xae,
	0xcd, 0x07, 0xc9, 0x84, 0xbc, 0x36, 0x4c, 0xdd, 0x3a, 0x6d, 0x18, 0x3f, 0xa5, 0x89, 0x70, 0x2a,
	0x40, 0xfe, 0x19, 0xdd, 0xd4, 0xed, 0x84, 0x60, 0x84, 0x20, 0xa3, 0xd9, 0x07, 0x64, 0x07, 0x4a,
	0xd3, 0xbb, 0x5b, 0xfb, 0x80, 0xec, 0x31, 0xe9, 0xae, 0x2b, 0x4a, 0x81, 0xee, 0x25, 0x1b, 0xc9,
	0x4e, 0xf3, 0x8d, 0x4a, 0xb8, 0xe4, 0x1b, 0x90, 0xa5, 0x53, 0xa3, 0x65, 0xb6, 0x9a, 0xab, 0xd1,
	0x5e, 0xa7, 0x55, 0xfa, 0x2c, 0xff, 0x89, 0x04, 0xe9, 0x9d, 0xe6, 0x1b, 0x62, 0x00, 0x98, 0xd5,
	0x77, 0xb2, 0x72, 0x1e, 0xde, 0x22, 0x3c, 0x2e, 0xb6, 0x8f, 0x85, 0xd3, 0x93, 0x67, 0xf4, 0x0a,
	0x4a, 0xa7, 0x74, 0x9a, 0x2d, 0xc7, 0xf8, 0x29, 0x3e, 0xab, 0x7e, 0x54, 0x38, 0xf5, 0x9e, 0xe5,
	0x3d, 0x00, 0xff, 0x0b, 0xe9, 0xd4, 0xb6, 0x4e, 0x59, 0xe6, 0x3c, 0xab, 0xd2, 0x67, 0xf2, 0xae,
	0x6d, 0xf1, 0x82, 0xf0, 0xac, 0x4a, 0x9f, 0x89, 0x57, 0x9f, 0x1a, 0xba, 0xcb, 0x96, 0x28, 0xab,
	0xb2, 0x06, 0x99, 0xca, 0x21, 0x36, 0x0e, 0x0e, 0x19, 0x76, 0x64, 0x55, 0xde, 0xf2, 0x13, 0x16,
	0xff, 0x99, 0x02, 0x14, 0x1c, 0x19, 0xb7, 0xe6, 0x75, 0xc8, 0x59, 0x3d, 0x97, 0x98, 0xcd, 0x88,
	0xf2, 0x89, 0x61, 0xbe, 0xea, 0x36, 0x65, 0xda, 0x98, 0x52, 0x39, 0x3b, 0x5a, 0x86, 0x0c, 0xfe,
	0xc1, 0x48, 0x6c, 0x7d, 0xa2, 0x48, 0xe1, 0x07, 0x83, 0x08, 0xa1, 0xac, 0xb2, 0x0c, 0x19, 0xd2,
	0x66, 0xb3, 0xd6, 0xb1, 0xd0, 0x04, 0x79, 0x96, 0x7f, 0x21, 0x41, 0x8e, 0xf5, 0x89, 0xb6, 0x21,
	0xdf, 0x3e, 0xd4, 0x4c, 0x13, 0x77, 0x78, 0x95, 0xc1, 0xc3, 0x89, 0xc6, 0x5c, 0x5d, 0x65, 0xcc,
	0xaa, 0x90, 0xe2, 0x99, 0x48, 0xca, 0x37, 0x11, 0xa5, 0x0a, 0x79, 0x4e, 0x37, 0x54, 0x41, 0xd3,
	0x68, 0xae, 0x6d, 0xef, 0x36, 0x59, 0x50, 0xda, 0x68, 0xae, 0xd5, 0x54, 0xb5, 0x9c, 0xf2, 0xf5,
	0xdc, 0x82, 0x6b, 0x74, 0xcf, 0xa1, 0xa3, 0x08, 0x67, 0x55, 0x2e, 0x64, 0x3b, 0x54, 0xbe, 0x81,
	0xca, 0x70, 0x07, 0x7c, 0x35, 0xbf, 0x1c, 0xc8, 0x14, 0x47, 0x9e, 0x66, 0x86, 0xb8, 0x45, 0xee,
	0xe6, 0xb7, 0x12, 0x94, 0x07, 0x3f, 0xa2, 0xa7, 0x64, 0x5d, 0x71, 0x9b, 0x23, 0xdd, 0xbd, 0x24,
	0x02, 0xa9, 0xee, 0x55, 0xca, 0x86, 0x16, 0xa1, 0x80, 0xcd, 0x13, 0x96, 0x6e, 0x4e, 0x25, 0x01,
	0xcb, 0x3c, 0x36, 0x4f, 0xbe, 0xd6, 0x6c, 0x47, 0x3e, 0x26, 0xd6, 0x80, 0x69, 0x4d, 0xbc, 0x61,
	0xea, 0x98, 0x81, 0x74, 0x5a, 0x65, 0x8d, 0x0b, 0x07, 0x0c, 0xc5, 0x02, 0xe4, 0xcf, 0xc3, 0x8b,
	0x60, 0x06, 0x56, 0x43, 0x8a, 0x0f, 0x4e, 0x52, 0x13, 0x06, 0x27, 0xca, 0x7f, 0x67, 0xe0, 0x8a,
	0xdf, 0x23, 0x55, 0x19, 0xb7, 0x93, 0xb5, 0x50, 0x41, 0x42, 0x75, 0xb4, 0xca, 0x03, 0x8c, 0xe1,
	0x8a, 0xa6, 0xb5, 0x90, 0x43, 0x4e, 0x20, 0x25, 0xe8, 0x93, 0xe8, 0x85, 0x87, 0x0f, 0xa3, 0x10,
	0x2f, 0x7a, 0x34, 0x83, 0x10, 0xb1, 0x1e, 0xce, 0x9d, 0xdf, 0x9f, 0x60, 0x48, 0xa1, 0xd4, 0xb9,
	0xfc, 0x94, 0x57, 0x5b, 0x8c, 0x5d, 0x1d, 0xcf, 0x76, 0x52, 0x01, 0xdb, 0x19, 0x89, 0x33, 0x7f,
	0xed, 0xe3, 0x8c, 0x3a, 0x88, 0x33, 0x8b, 0x93, 0xce, 0xfd, 0xff, 0x04, 0x6a, 0xce, 0x95, 0x74,
	0xff, 0x85, 0x04, 0x57, 0x07, 0x47, 0xcc, 0xb1, 0xe3, 0xaa, 0x88, 0x1f, 0xe8, 0x4e, 0x19, 0x11,
	0x12, 0xa4, 0xce, 0x19, 0x12, 0xa0, 0x0a, 0xe4, 0x88, 0x65, 0x62, 0x9d, 0xfd, 0x9c, 0x82, 0x5a,
	0x06, 0x6d, 0xfb, 0xe3, 0xfb, 0x0f, 0x09, 0x66, 0x9b, 0xd6, 0x11, 0x36, 0x9b, 0xb6, 0x66, 0x3a,
	0x5d, 0xcb, 0xa6, 0xab, 0xb4, 0x67, 0xe9, 0x7d, 0xb1, 0x81, 0x93, 0x67, 0x74, 0x13, 0x8a, 0xf4,
	0x87, 0x18, 0xae, 0xc8, 0xeb, 0x4e, 0xab, 0xfe, 0x0b, 0x74, 0x05, 0x72, 0x47, 0xb8, 0x4f, 0x2c,
	0x22, 0xcd, 0x02, 0xdf, 0x23, 0xdc, 0xaf, 0xeb, 0x68, 0x13, 0x0a, 0xc7, 0xd8, 0xd5, 0xa8, 0xfe,
	0x33, 0xd4, 0x5b, 0x23, 0xe7, 0x12, 0xee, 0xbe, 0xfa, 0x92, 0xb3, 0x30, 0xdf, 0xf5, 0x24, 0xc8,
	0x4f, 0x60, 0x26, 0xf4, 0x69, 0xa2, 0x1b, 0x8f, 0xbf, 0x91, 0x20, 0x4b, 0xfb, 0x21, 0xb3, 0xeb,
	0x39, 0xd8, 0x4b, 0x5a, 0x93, 0x67, 0x74, 0x1d, 0x0a, 0x2e, 0xf9, 0x28, 0xf0, 0x7f, 0x5a, 0xcd,
	0xd3, 0x76, 0x5d, 0x47, 0x4f, 0xa0, 0x44, 0x7f, 0xa8, 0xd2, 0xea, 0x99, 0xae, 0xd1, 0x49, 0x50,
	0x20, 0x06, 0x94, 0x7c, 0x97, 0x50, 0xd3, 0x5f, 0x17, 0x59, 0x07, 0x86, 0x49, 0xfd, 0xaf, 0xa0,
	0xb2, 0x06, 0x89, 0x1c, 0x0c, 0xf3, 0xc4, 0xe0, 0x65, 0x81, 0x05, 0x95, 0xb7, 0x94, 0x8f, 0x21,
	0xbf, 0xf1, 0x72, 0x79, 0xf5, 0x27, 0xb8, 0x3f, 0x74, 0x63, 0xc0, 0xa7, 0xca, 0xc6, 0x46, 0x1e,
	0x95, 0x07, 0x80, 0xea, 0x94, 0x8d, 0xce, 0x4a, 0x00, 0x99, 0x0c, 0x05, 0xbd, 0x67, 0x07, 0x7f,
	0xd0, 0xe8, 0xb5, 0x95, 0x79, 0x28, 0x6f, 0xe1, 0x53, 0x4e, 0xee, 0xff, 0x90, 0x87, 0x4e, 0x54,
	0x14, 0x7e, 0xd2, 0x86, 0xf2, 0x29, 0x5c, 0x5f, 0xb5, 0xcc, 0x13, 0x6c, 0xbb, 0x11, 0x5d, 0x44,
	0xb2, 0x2c, 0xfc, 0xeb, 0x55, 0x28, 0xbc, 0xe6, 0x0b, 0x8a, 0xbe, 0x05, 0xf0, 0x53, 0xd7, 0x28,
	0x32, 0x01, 0x39, 0x94, 0x77, 0x97, 0x3f, 0x1c, 0x47, 0xc6, 0x87, 0x7c, 0x02, 0x97, 0x22, 0x52,
	0x34, 0xa8, 0x1a, 0xc7, 0x1e, 0x9d, 0xe5, 0x92, 0xef, 0x27, 0xa6, 0xe7, 0xfd, 0xbe, 0x85, 0xb9,
	0x81, 0xab, 0x5b, 0xf4, 0x51, 0x9c, 0x8c, 0xe1, 0x5b, 0x6f, 0xf9, 0xe3, 0x44, 0xb4, 0xbc, 0xaf,
	0x37, 0xb4, 0x9e, 0x37, 0x70, 0x97, 0x3b, 0x1f, 0x53, 0xa8, 0x34, 0x94, 0x14, 0x90, 0xc7, 0xdc,
	0x18, 0xa3, 0xaf, 0x61, 0x36, 0x5c, 0x0c, 0x80, 0xee, 0xc5, 0xc8, 0x1e, 0x2e, 0x18, 0x90, 0xe3,
	0xab, 0x0d, 0xd0, 0xf7, 0x70, 0x2d, 0x26, 0xfd, 0x89, 0x16, 0x46, 0x76, 0x10, 0x99, 0x2b, 0x95,
	0x13, 0xa4, 0xd5, 0xd0, 0x6b, 0x98, 0x0e, 0xde, 0x9a, 0xa0, 0xbb, 0x71, 0xfd, 0x0c, 0xdc, 0xab,
	0xc8, 0x37, 0x47, 0xc5, 0x0c, 0x0f, 0x24, 0xa4, 0xc3, 0x1c, 0x3d, 0x49, 0xf9, 0x20, 0x1b, 0x6d,
	0xc4, 0x43, 0x20, 0x1c, 0x6d, 0xc4, 0xc3, 0x81, 0xf1, 0xbc, 0xf4, 0x40, 0x42, 0xdf, 0x40, 0xb1,
	0x81, 0x45, 0xd0, 0x77, 0x27, 0x3e, 0x46, 0xf3, 0x2f, 0x0b, 0xe4, 0x0f, 0xc6, 0x50, 0x71, 0xf3,
	0xf9, 0x06, 0x8a, 0xeb, 0x49, 0x24, 0xaf, 0x27, 0x92, 0x1c, 0x3c, 0x8a, 0xef, 0x42, 0x41, 0xfc,
	0x46, 0x11, 0x45, 0xde, 0x1e, 0x0c, 0xfc, 0xfe, 0x51, 0xbe, 0x33, 0x9a, 0x88, 0x8b, 0x5d, 0x83,
	0x1c, 0xab, 0xba, 0x43, 0xef, 0xc5, 0x57, 0xe4, 0x09, 0x91, 0x71, 0xf5, 0x62, 0xe8, 0x3b, 0x28,
	0x05, 0x7e, 0xac, 0x88, 0x22, 0xd7, 0x62, 0xf8, 0x67, 0x93, 0xf2, 0xdd, 0xb1, 0x74, 0x7c, 0x94,
	0x6d, 0x6a, 0x6f, 0x5e, 0xe9, 0x5b, 0xac, 0xbd, 0x0d, 0xd6, 0x21, 0xca, 0xf3, 0x49, 0xcb, 0x0c,
	0x1f, 0x48, 0xe8, 0x25, 0x5d, 0x3b, 0x5e, 0xad, 0x7b, 0x27, 0x86, 0x31, 0x54, 0x72, 0x26, 0x8f,
	0x28, 0x79, 0x45, 0xbb, 0x30, 0x37, 0x50, 0x71, 0x16, 0x8d, 0x5a, 0xd1, 0x65, 0x69, 0xf2, 0xd5,
	0xa1, 0x8d, 0xae, 0x76, 0xdc, 0x75, 0xfb, 0x08, 0x0f, 0x94, 0xb9, 0xde, 0x4d, 0x58, 0xc3, 0x1b,
	0xad, 0x8a, 0xa8, 0x1a, 0x5c, 0xea, 0x22, 0x26, 0xcc, 0x0d, 0xd4, 0x1b, 0x46, 0x8f, 0x3e, 0xba,
	0xfe, 0x33, 0x1a, 0x73, 0x63, 0x0a, 0x18, 0x69, 0x7f, 0x7f, 0x26, 0xc1, 0xf5, 0xd8, 0x02, 0x42,
	0xf4, 0x79, 0xbc, 0xb8, 0xf8, 0x9a, 0x44, 0xf9, 0xe1, 0x84, 0x5c, 0xdc, 0xd8, 0xac, 0x88, 0x93,
	0xe1, 0xc7, 0x89, 0x0e, 0x97, 0xbc, 0xdf, 0x4f, 0x92, 0x11, 0x7b, 0x86, 0xf7, 0x1a, 0x2e, 0x85,
	0x8e, 0x63, 0x5c, 0xdf, 0x1f, 0x8e, 0x16, 0x23, 0x50, 0x33, 0xce, 0x52, 0xe6, 0x25, 0xf4, 0x3d,
	0x5c, 0x0e, 0x07, 0xc0, 0x5c, 0xf2, 0xbd, 0xc4, 0xc1, 0xbd, 0xfc, 0x51, 0x12, 0xd2, 0xc0, 0x3a,
	0x7e, 0x07, 0xa5, 0x40, 0x85, 0x60, 0xf4, 0x1c, 0x86, 0x2b, 0x11, 0xa3, 0x91, 0x20, 0xaa, 0xd4,
	0xb0, 0x2f, 0x72, 0x60, 0x03, 0x3b, 0xd2, 0xfd, 0x78, 0x01, 0xd1, 0xdb, 0xdc, 0x83, 0xe4, 0x0c,
	0xbc, 0xeb, 0x63, 0x28, 0x0f, 0x26, 0xed, 0xa3, 0xed, 0x22, 0xa6, 0x6a, 0x20, 0xda, 0x2e, 0x62,
	0xeb, 0x00, 0x74, 0x98, 0x09, 0xa5, 0xe7, 0xa2, 0x23, 0x91, 0xa8, 0x84, 0xa0, 0x7c, 0x2f, 0x01,
	0xa5, 0x87, 0xac, 0x97, 0xd6, 0xb1, 0x89, 0x6d, 0xcd, 0xc5, 0x81, 0x88, 0x33, 0x7a, 0xdd, 0x86,
	0x43, 0xd2, 0xe8, 0x4d, 0x66, 0x28, 0xd6, 0x55, 0x01, 0x89, 0x4e, 0x36, 0x49, 0x1c, 0xce, 0xfa,
	0x88, 0xb1, 0xdb, 0x84, 0x32, 0x0d, 0x40, 0xc3, 0x91, 0x32, 0xfa, 0x71, 0xcc, 0x66, 0x1a, 0x1d,
	0x51, 0x27, 0xeb, 0x6a, 0x2f, 0x47, 0x07, 0xf8, 0xd9, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x55,
	0x2f, 0x2c, 0x34, 0x00, 0x46, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WaypointClient is the client API for Waypoint service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WaypointClient interface {
	// ListBuilds returns the builds.
	ListBuilds(ctx context.Context, in *ListBuildsRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error)
	// ListPushedArtifacts returns the builds.
	ListPushedArtifacts(ctx context.Context, in *ListPushedArtifactsRequest, opts ...grpc.CallOption) (*ListPushedArtifactsResponse, error)
	// ListDeployments returns the deployments.
	ListDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (*ListDeploymentsResponse, error)
	// GetDeployment returns a deployment
	GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*Deployment, error)
	// GetLatestBuild returns the most recent successfully completed build
	// for an app.
	GetLatestBuild(ctx context.Context, in *GetLatestBuildRequest, opts ...grpc.CallOption) (*Build, error)
	// GetLatestPushedArtifact returns the most recent successfully completed
	// artifact push for an app.
	GetLatestPushedArtifact(ctx context.Context, in *GetLatestPushedArtifactRequest, opts ...grpc.CallOption) (*PushedArtifact, error)
	// GetLogStream reads the log stream for a deployment. This will immediately
	// send a single LogEntry with the lines we have so far. If there are no
	// available lines this will NOT block and instead will return an error.
	// The client can choose to retry or not.
	GetLogStream(ctx context.Context, in *GetLogStreamRequest, opts ...grpc.CallOption) (Waypoint_GetLogStreamClient, error)
	// StartExecStream starts an exec session.
	StartExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_StartExecStreamClient, error)
	// Set a single configuration item for the application.
	SetConfig(ctx context.Context, in *ConfigSetRequest, opts ...grpc.CallOption) (*ConfigSetResponse, error)
	// Retrieve merged configuration values for a specific scope. You can determine
	// where a configuration variable was set by looking at the scope field on
	// each variable.
	GetConfig(ctx context.Context, in *ConfigGetRequest, opts ...grpc.CallOption) (*ConfigGetResponse, error)
	// QueueJob queues a job for execution by a runner. This will return as
	// soon as the job is queued, it will not wait for execution.
	QueueJob(ctx context.Context, in *QueueJobRequest, opts ...grpc.CallOption) (*QueueJobResponse, error)
	// GetJob queries a job by ID.
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*Job, error)
	// ValidateJob checks if a job appears valid. This will check the job
	// structure itself (i.e. missing fields) and can also check to ensure
	// the job is assignable to a runner.
	ValidateJob(ctx context.Context, in *ValidateJobRequest, opts ...grpc.CallOption) (*ValidateJobResponse, error)
	// GetJobStream opens a job event stream for a running job. This can be
	// used to listen for terminal output and other events of a running job.
	// Multiple listeners can open a job stream.
	GetJobStream(ctx context.Context, in *GetJobStreamRequest, opts ...grpc.CallOption) (Waypoint_GetJobStreamClient, error)
	// GetRunner gets information about a single runner.
	GetRunner(ctx context.Context, in *GetRunnerRequest, opts ...grpc.CallOption) (*Runner, error)
	// SetServerConfig sets configuration for the Waypoint server.
	SetServerConfig(ctx context.Context, in *SetServerConfigRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// RunnerConfig is called to register a runner and receive the configuration
	// for the runner. The response is a stream so that the configuration can
	// be updated later.
	RunnerConfig(ctx context.Context, opts ...grpc.CallOption) (Waypoint_RunnerConfigClient, error)
	// RunnerJobStream is called by a runner to request a single job for
	// execution and update the status of that job.
	RunnerJobStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_RunnerJobStreamClient, error)
	// RunnerGetDeploymentConfig is called by a runner for a deployment operation
	// to determine the settings to use for a deployment.
	RunnerGetDeploymentConfig(ctx context.Context, in *RunnerGetDeploymentConfigRequest, opts ...grpc.CallOption) (*RunnerGetDeploymentConfigResponse, error)
	// EntrypointConfig is called to get the configuration for the entrypoint
	// and also to get any potential updates.
	//
	// This endpoint also registers the instance with the server. This MUST be
	// called first otherwise other RPCs related to the entrypoint may fail
	// with FailedPrecondition.
	EntrypointConfig(ctx context.Context, in *EntrypointConfigRequest, opts ...grpc.CallOption) (Waypoint_EntrypointConfigClient, error)
	// EntrypointLogStream is called to open the stream that logs are sent to.
	EntrypointLogStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointLogStreamClient, error)
	// EntrypointExecStream is called to open the data stream for the exec session.
	EntrypointExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointExecStreamClient, error)
	// UpsertBuild updates or inserts a build. A build is responsible for
	// taking some set of source information and turning it into an initial
	// artifact. This artifact is considered "local" until it is pushed.
	UpsertBuild(ctx context.Context, in *UpsertBuildRequest, opts ...grpc.CallOption) (*UpsertBuildResponse, error)
	// UpsertPushedArtifact updates or inserts a pushed artifact. This is
	// useful for local operations to work on a pushed artifact.
	UpsertPushedArtifact(ctx context.Context, in *UpsertPushedArtifactRequest, opts ...grpc.CallOption) (*UpsertPushedArtifactResponse, error)
	// UpsertDeployment updates or inserts a deployment.
	UpsertDeployment(ctx context.Context, in *UpsertDeploymentRequest, opts ...grpc.CallOption) (*UpsertDeploymentResponse, error)
	// UpsertRelease updates or inserts a release.
	UpsertRelease(ctx context.Context, in *UpsertReleaseRequest, opts ...grpc.CallOption) (*UpsertReleaseResponse, error)
	// Generate a new invite token that users can exchange for a login token.
	GenerateInviteToken(ctx context.Context, in *InviteTokenRequest, opts ...grpc.CallOption) (*NewTokenResponse, error)
	// Generate a new login token that users can use to login directly.
	GenerateLoginToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NewTokenResponse, error)
	// Exchange a invite token for a login token.
	ConvertInviteToken(ctx context.Context, in *ConvertInviteTokenRequest, opts ...grpc.CallOption) (*NewTokenResponse, error)
}

type waypointClient struct {
	cc grpc.ClientConnInterface
}

func NewWaypointClient(cc grpc.ClientConnInterface) WaypointClient {
	return &waypointClient{cc}
}

func (c *waypointClient) ListBuilds(ctx context.Context, in *ListBuildsRequest, opts ...grpc.CallOption) (*ListBuildsResponse, error) {
	out := new(ListBuildsResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ListBuilds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) ListPushedArtifacts(ctx context.Context, in *ListPushedArtifactsRequest, opts ...grpc.CallOption) (*ListPushedArtifactsResponse, error) {
	out := new(ListPushedArtifactsResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ListPushedArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) ListDeployments(ctx context.Context, in *ListDeploymentsRequest, opts ...grpc.CallOption) (*ListDeploymentsResponse, error) {
	out := new(ListDeploymentsResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ListDeployments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetDeployment(ctx context.Context, in *GetDeploymentRequest, opts ...grpc.CallOption) (*Deployment, error) {
	out := new(Deployment)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetLatestBuild(ctx context.Context, in *GetLatestBuildRequest, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetLatestBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetLatestPushedArtifact(ctx context.Context, in *GetLatestPushedArtifactRequest, opts ...grpc.CallOption) (*PushedArtifact, error) {
	out := new(PushedArtifact)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetLatestPushedArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetLogStream(ctx context.Context, in *GetLogStreamRequest, opts ...grpc.CallOption) (Waypoint_GetLogStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[0], "/hashicorp.waypoint.Waypoint/GetLogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointGetLogStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Waypoint_GetLogStreamClient interface {
	Recv() (*LogBatch, error)
	grpc.ClientStream
}

type waypointGetLogStreamClient struct {
	grpc.ClientStream
}

func (x *waypointGetLogStreamClient) Recv() (*LogBatch, error) {
	m := new(LogBatch)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) StartExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_StartExecStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[1], "/hashicorp.waypoint.Waypoint/StartExecStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointStartExecStreamClient{stream}
	return x, nil
}

type Waypoint_StartExecStreamClient interface {
	Send(*ExecStreamRequest) error
	Recv() (*ExecStreamResponse, error)
	grpc.ClientStream
}

type waypointStartExecStreamClient struct {
	grpc.ClientStream
}

func (x *waypointStartExecStreamClient) Send(m *ExecStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointStartExecStreamClient) Recv() (*ExecStreamResponse, error) {
	m := new(ExecStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) SetConfig(ctx context.Context, in *ConfigSetRequest, opts ...grpc.CallOption) (*ConfigSetResponse, error) {
	out := new(ConfigSetResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetConfig(ctx context.Context, in *ConfigGetRequest, opts ...grpc.CallOption) (*ConfigGetResponse, error) {
	out := new(ConfigGetResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) QueueJob(ctx context.Context, in *QueueJobRequest, opts ...grpc.CallOption) (*QueueJobResponse, error) {
	out := new(QueueJobResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/QueueJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) ValidateJob(ctx context.Context, in *ValidateJobRequest, opts ...grpc.CallOption) (*ValidateJobResponse, error) {
	out := new(ValidateJobResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ValidateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GetJobStream(ctx context.Context, in *GetJobStreamRequest, opts ...grpc.CallOption) (Waypoint_GetJobStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[2], "/hashicorp.waypoint.Waypoint/GetJobStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointGetJobStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Waypoint_GetJobStreamClient interface {
	Recv() (*GetJobStreamResponse, error)
	grpc.ClientStream
}

type waypointGetJobStreamClient struct {
	grpc.ClientStream
}

func (x *waypointGetJobStreamClient) Recv() (*GetJobStreamResponse, error) {
	m := new(GetJobStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) GetRunner(ctx context.Context, in *GetRunnerRequest, opts ...grpc.CallOption) (*Runner, error) {
	out := new(Runner)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GetRunner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) SetServerConfig(ctx context.Context, in *SetServerConfigRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/SetServerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) RunnerConfig(ctx context.Context, opts ...grpc.CallOption) (Waypoint_RunnerConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[3], "/hashicorp.waypoint.Waypoint/RunnerConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointRunnerConfigClient{stream}
	return x, nil
}

type Waypoint_RunnerConfigClient interface {
	Send(*RunnerConfigRequest) error
	Recv() (*RunnerConfigResponse, error)
	grpc.ClientStream
}

type waypointRunnerConfigClient struct {
	grpc.ClientStream
}

func (x *waypointRunnerConfigClient) Send(m *RunnerConfigRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointRunnerConfigClient) Recv() (*RunnerConfigResponse, error) {
	m := new(RunnerConfigResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) RunnerJobStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_RunnerJobStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[4], "/hashicorp.waypoint.Waypoint/RunnerJobStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointRunnerJobStreamClient{stream}
	return x, nil
}

type Waypoint_RunnerJobStreamClient interface {
	Send(*RunnerJobStreamRequest) error
	Recv() (*RunnerJobStreamResponse, error)
	grpc.ClientStream
}

type waypointRunnerJobStreamClient struct {
	grpc.ClientStream
}

func (x *waypointRunnerJobStreamClient) Send(m *RunnerJobStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointRunnerJobStreamClient) Recv() (*RunnerJobStreamResponse, error) {
	m := new(RunnerJobStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) RunnerGetDeploymentConfig(ctx context.Context, in *RunnerGetDeploymentConfigRequest, opts ...grpc.CallOption) (*RunnerGetDeploymentConfigResponse, error) {
	out := new(RunnerGetDeploymentConfigResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/RunnerGetDeploymentConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) EntrypointConfig(ctx context.Context, in *EntrypointConfigRequest, opts ...grpc.CallOption) (Waypoint_EntrypointConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[5], "/hashicorp.waypoint.Waypoint/EntrypointConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointEntrypointConfigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Waypoint_EntrypointConfigClient interface {
	Recv() (*EntrypointConfigResponse, error)
	grpc.ClientStream
}

type waypointEntrypointConfigClient struct {
	grpc.ClientStream
}

func (x *waypointEntrypointConfigClient) Recv() (*EntrypointConfigResponse, error) {
	m := new(EntrypointConfigResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) EntrypointLogStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointLogStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[6], "/hashicorp.waypoint.Waypoint/EntrypointLogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointEntrypointLogStreamClient{stream}
	return x, nil
}

type Waypoint_EntrypointLogStreamClient interface {
	Send(*EntrypointLogBatch) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type waypointEntrypointLogStreamClient struct {
	grpc.ClientStream
}

func (x *waypointEntrypointLogStreamClient) Send(m *EntrypointLogBatch) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointEntrypointLogStreamClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) EntrypointExecStream(ctx context.Context, opts ...grpc.CallOption) (Waypoint_EntrypointExecStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Waypoint_serviceDesc.Streams[7], "/hashicorp.waypoint.Waypoint/EntrypointExecStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &waypointEntrypointExecStreamClient{stream}
	return x, nil
}

type Waypoint_EntrypointExecStreamClient interface {
	Send(*EntrypointExecRequest) error
	Recv() (*EntrypointExecResponse, error)
	grpc.ClientStream
}

type waypointEntrypointExecStreamClient struct {
	grpc.ClientStream
}

func (x *waypointEntrypointExecStreamClient) Send(m *EntrypointExecRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *waypointEntrypointExecStreamClient) Recv() (*EntrypointExecResponse, error) {
	m := new(EntrypointExecResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *waypointClient) UpsertBuild(ctx context.Context, in *UpsertBuildRequest, opts ...grpc.CallOption) (*UpsertBuildResponse, error) {
	out := new(UpsertBuildResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) UpsertPushedArtifact(ctx context.Context, in *UpsertPushedArtifactRequest, opts ...grpc.CallOption) (*UpsertPushedArtifactResponse, error) {
	out := new(UpsertPushedArtifactResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertPushedArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) UpsertDeployment(ctx context.Context, in *UpsertDeploymentRequest, opts ...grpc.CallOption) (*UpsertDeploymentResponse, error) {
	out := new(UpsertDeploymentResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertDeployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) UpsertRelease(ctx context.Context, in *UpsertReleaseRequest, opts ...grpc.CallOption) (*UpsertReleaseResponse, error) {
	out := new(UpsertReleaseResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/UpsertRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GenerateInviteToken(ctx context.Context, in *InviteTokenRequest, opts ...grpc.CallOption) (*NewTokenResponse, error) {
	out := new(NewTokenResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GenerateInviteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) GenerateLoginToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NewTokenResponse, error) {
	out := new(NewTokenResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/GenerateLoginToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *waypointClient) ConvertInviteToken(ctx context.Context, in *ConvertInviteTokenRequest, opts ...grpc.CallOption) (*NewTokenResponse, error) {
	out := new(NewTokenResponse)
	err := c.cc.Invoke(ctx, "/hashicorp.waypoint.Waypoint/ConvertInviteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WaypointServer is the server API for Waypoint service.
type WaypointServer interface {
	// ListBuilds returns the builds.
	ListBuilds(context.Context, *ListBuildsRequest) (*ListBuildsResponse, error)
	// ListPushedArtifacts returns the builds.
	ListPushedArtifacts(context.Context, *ListPushedArtifactsRequest) (*ListPushedArtifactsResponse, error)
	// ListDeployments returns the deployments.
	ListDeployments(context.Context, *ListDeploymentsRequest) (*ListDeploymentsResponse, error)
	// GetDeployment returns a deployment
	GetDeployment(context.Context, *GetDeploymentRequest) (*Deployment, error)
	// GetLatestBuild returns the most recent successfully completed build
	// for an app.
	GetLatestBuild(context.Context, *GetLatestBuildRequest) (*Build, error)
	// GetLatestPushedArtifact returns the most recent successfully completed
	// artifact push for an app.
	GetLatestPushedArtifact(context.Context, *GetLatestPushedArtifactRequest) (*PushedArtifact, error)
	// GetLogStream reads the log stream for a deployment. This will immediately
	// send a single LogEntry with the lines we have so far. If there are no
	// available lines this will NOT block and instead will return an error.
	// The client can choose to retry or not.
	GetLogStream(*GetLogStreamRequest, Waypoint_GetLogStreamServer) error
	// StartExecStream starts an exec session.
	StartExecStream(Waypoint_StartExecStreamServer) error
	// Set a single configuration item for the application.
	SetConfig(context.Context, *ConfigSetRequest) (*ConfigSetResponse, error)
	// Retrieve merged configuration values for a specific scope. You can determine
	// where a configuration variable was set by looking at the scope field on
	// each variable.
	GetConfig(context.Context, *ConfigGetRequest) (*ConfigGetResponse, error)
	// QueueJob queues a job for execution by a runner. This will return as
	// soon as the job is queued, it will not wait for execution.
	QueueJob(context.Context, *QueueJobRequest) (*QueueJobResponse, error)
	// GetJob queries a job by ID.
	GetJob(context.Context, *GetJobRequest) (*Job, error)
	// ValidateJob checks if a job appears valid. This will check the job
	// structure itself (i.e. missing fields) and can also check to ensure
	// the job is assignable to a runner.
	ValidateJob(context.Context, *ValidateJobRequest) (*ValidateJobResponse, error)
	// GetJobStream opens a job event stream for a running job. This can be
	// used to listen for terminal output and other events of a running job.
	// Multiple listeners can open a job stream.
	GetJobStream(*GetJobStreamRequest, Waypoint_GetJobStreamServer) error
	// GetRunner gets information about a single runner.
	GetRunner(context.Context, *GetRunnerRequest) (*Runner, error)
	// SetServerConfig sets configuration for the Waypoint server.
	SetServerConfig(context.Context, *SetServerConfigRequest) (*empty.Empty, error)
	// RunnerConfig is called to register a runner and receive the configuration
	// for the runner. The response is a stream so that the configuration can
	// be updated later.
	RunnerConfig(Waypoint_RunnerConfigServer) error
	// RunnerJobStream is called by a runner to request a single job for
	// execution and update the status of that job.
	RunnerJobStream(Waypoint_RunnerJobStreamServer) error
	// RunnerGetDeploymentConfig is called by a runner for a deployment operation
	// to determine the settings to use for a deployment.
	RunnerGetDeploymentConfig(context.Context, *RunnerGetDeploymentConfigRequest) (*RunnerGetDeploymentConfigResponse, error)
	// EntrypointConfig is called to get the configuration for the entrypoint
	// and also to get any potential updates.
	//
	// This endpoint also registers the instance with the server. This MUST be
	// called first otherwise other RPCs related to the entrypoint may fail
	// with FailedPrecondition.
	EntrypointConfig(*EntrypointConfigRequest, Waypoint_EntrypointConfigServer) error
	// EntrypointLogStream is called to open the stream that logs are sent to.
	EntrypointLogStream(Waypoint_EntrypointLogStreamServer) error
	// EntrypointExecStream is called to open the data stream for the exec session.
	EntrypointExecStream(Waypoint_EntrypointExecStreamServer) error
	// UpsertBuild updates or inserts a build. A build is responsible for
	// taking some set of source information and turning it into an initial
	// artifact. This artifact is considered "local" until it is pushed.
	UpsertBuild(context.Context, *UpsertBuildRequest) (*UpsertBuildResponse, error)
	// UpsertPushedArtifact updates or inserts a pushed artifact. This is
	// useful for local operations to work on a pushed artifact.
	UpsertPushedArtifact(context.Context, *UpsertPushedArtifactRequest) (*UpsertPushedArtifactResponse, error)
	// UpsertDeployment updates or inserts a deployment.
	UpsertDeployment(context.Context, *UpsertDeploymentRequest) (*UpsertDeploymentResponse, error)
	// UpsertRelease updates or inserts a release.
	UpsertRelease(context.Context, *UpsertReleaseRequest) (*UpsertReleaseResponse, error)
	// Generate a new invite token that users can exchange for a login token.
	GenerateInviteToken(context.Context, *InviteTokenRequest) (*NewTokenResponse, error)
	// Generate a new login token that users can use to login directly.
	GenerateLoginToken(context.Context, *empty.Empty) (*NewTokenResponse, error)
	// Exchange a invite token for a login token.
	ConvertInviteToken(context.Context, *ConvertInviteTokenRequest) (*NewTokenResponse, error)
}

// UnimplementedWaypointServer can be embedded to have forward compatible implementations.
type UnimplementedWaypointServer struct {
}

func (*UnimplementedWaypointServer) ListBuilds(ctx context.Context, req *ListBuildsRequest) (*ListBuildsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListBuilds not implemented")
}
func (*UnimplementedWaypointServer) ListPushedArtifacts(ctx context.Context, req *ListPushedArtifactsRequest) (*ListPushedArtifactsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListPushedArtifacts not implemented")
}
func (*UnimplementedWaypointServer) ListDeployments(ctx context.Context, req *ListDeploymentsRequest) (*ListDeploymentsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListDeployments not implemented")
}
func (*UnimplementedWaypointServer) GetDeployment(ctx context.Context, req *GetDeploymentRequest) (*Deployment, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetDeployment not implemented")
}
func (*UnimplementedWaypointServer) GetLatestBuild(ctx context.Context, req *GetLatestBuildRequest) (*Build, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetLatestBuild not implemented")
}
func (*UnimplementedWaypointServer) GetLatestPushedArtifact(ctx context.Context, req *GetLatestPushedArtifactRequest) (*PushedArtifact, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetLatestPushedArtifact not implemented")
}
func (*UnimplementedWaypointServer) GetLogStream(req *GetLogStreamRequest, srv Waypoint_GetLogStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method GetLogStream not implemented")
}
func (*UnimplementedWaypointServer) StartExecStream(srv Waypoint_StartExecStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method StartExecStream not implemented")
}
func (*UnimplementedWaypointServer) SetConfig(ctx context.Context, req *ConfigSetRequest) (*ConfigSetResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method SetConfig not implemented")
}
func (*UnimplementedWaypointServer) GetConfig(ctx context.Context, req *ConfigGetRequest) (*ConfigGetResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedWaypointServer) QueueJob(ctx context.Context, req *QueueJobRequest) (*QueueJobResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method QueueJob not implemented")
}
func (*UnimplementedWaypointServer) GetJob(ctx context.Context, req *GetJobRequest) (*Job, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (*UnimplementedWaypointServer) ValidateJob(ctx context.Context, req *ValidateJobRequest) (*ValidateJobResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ValidateJob not implemented")
}
func (*UnimplementedWaypointServer) GetJobStream(req *GetJobStreamRequest, srv Waypoint_GetJobStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method GetJobStream not implemented")
}
func (*UnimplementedWaypointServer) GetRunner(ctx context.Context, req *GetRunnerRequest) (*Runner, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetRunner not implemented")
}
func (*UnimplementedWaypointServer) SetServerConfig(ctx context.Context, req *SetServerConfigRequest) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method SetServerConfig not implemented")
}
func (*UnimplementedWaypointServer) RunnerConfig(srv Waypoint_RunnerConfigServer) error {
	return status1.Errorf(codes.Unimplemented, "method RunnerConfig not implemented")
}
func (*UnimplementedWaypointServer) RunnerJobStream(srv Waypoint_RunnerJobStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method RunnerJobStream not implemented")
}
func (*UnimplementedWaypointServer) RunnerGetDeploymentConfig(ctx context.Context, req *RunnerGetDeploymentConfigRequest) (*RunnerGetDeploymentConfigResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method RunnerGetDeploymentConfig not implemented")
}
func (*UnimplementedWaypointServer) EntrypointConfig(req *EntrypointConfigRequest, srv Waypoint_EntrypointConfigServer) error {
	return status1.Errorf(codes.Unimplemented, "method EntrypointConfig not implemented")
}
func (*UnimplementedWaypointServer) EntrypointLogStream(srv Waypoint_EntrypointLogStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method EntrypointLogStream not implemented")
}
func (*UnimplementedWaypointServer) EntrypointExecStream(srv Waypoint_EntrypointExecStreamServer) error {
	return status1.Errorf(codes.Unimplemented, "method EntrypointExecStream not implemented")
}
func (*UnimplementedWaypointServer) UpsertBuild(ctx context.Context, req *UpsertBuildRequest) (*UpsertBuildResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertBuild not implemented")
}
func (*UnimplementedWaypointServer) UpsertPushedArtifact(ctx context.Context, req *UpsertPushedArtifactRequest) (*UpsertPushedArtifactResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertPushedArtifact not implemented")
}
func (*UnimplementedWaypointServer) UpsertDeployment(ctx context.Context, req *UpsertDeploymentRequest) (*UpsertDeploymentResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertDeployment not implemented")
}
func (*UnimplementedWaypointServer) UpsertRelease(ctx context.Context, req *UpsertReleaseRequest) (*UpsertReleaseResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method UpsertRelease not implemented")
}
func (*UnimplementedWaypointServer) GenerateInviteToken(ctx context.Context, req *InviteTokenRequest) (*NewTokenResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GenerateInviteToken not implemented")
}
func (*UnimplementedWaypointServer) GenerateLoginToken(ctx context.Context, req *empty.Empty) (*NewTokenResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GenerateLoginToken not implemented")
}
func (*UnimplementedWaypointServer) ConvertInviteToken(ctx context.Context, req *ConvertInviteTokenRequest) (*NewTokenResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ConvertInviteToken not implemented")
}

func RegisterWaypointServer(s *grpc.Server, srv WaypointServer) {
	s.RegisterService(&_Waypoint_serviceDesc, srv)
}

func _Waypoint_ListBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBuildsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ListBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ListBuilds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ListBuilds(ctx, req.(*ListBuildsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_ListPushedArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPushedArtifactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ListPushedArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ListPushedArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ListPushedArtifacts(ctx, req.(*ListPushedArtifactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_ListDeployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ListDeployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ListDeployments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ListDeployments(ctx, req.(*ListDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetDeployment(ctx, req.(*GetDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetLatestBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetLatestBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetLatestBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetLatestBuild(ctx, req.(*GetLatestBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetLatestPushedArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestPushedArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetLatestPushedArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetLatestPushedArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetLatestPushedArtifact(ctx, req.(*GetLatestPushedArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetLogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetLogStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WaypointServer).GetLogStream(m, &waypointGetLogStreamServer{stream})
}

type Waypoint_GetLogStreamServer interface {
	Send(*LogBatch) error
	grpc.ServerStream
}

type waypointGetLogStreamServer struct {
	grpc.ServerStream
}

func (x *waypointGetLogStreamServer) Send(m *LogBatch) error {
	return x.ServerStream.SendMsg(m)
}

func _Waypoint_StartExecStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).StartExecStream(&waypointStartExecStreamServer{stream})
}

type Waypoint_StartExecStreamServer interface {
	Send(*ExecStreamResponse) error
	Recv() (*ExecStreamRequest, error)
	grpc.ServerStream
}

type waypointStartExecStreamServer struct {
	grpc.ServerStream
}

func (x *waypointStartExecStreamServer) Send(m *ExecStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointStartExecStreamServer) Recv() (*ExecStreamRequest, error) {
	m := new(ExecStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).SetConfig(ctx, req.(*ConfigSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetConfig(ctx, req.(*ConfigGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_QueueJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).QueueJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/QueueJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).QueueJob(ctx, req.(*QueueJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_ValidateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ValidateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ValidateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ValidateJob(ctx, req.(*ValidateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GetJobStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetJobStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WaypointServer).GetJobStream(m, &waypointGetJobStreamServer{stream})
}

type Waypoint_GetJobStreamServer interface {
	Send(*GetJobStreamResponse) error
	grpc.ServerStream
}

type waypointGetJobStreamServer struct {
	grpc.ServerStream
}

func (x *waypointGetJobStreamServer) Send(m *GetJobStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Waypoint_GetRunner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRunnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GetRunner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GetRunner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GetRunner(ctx, req.(*GetRunnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_SetServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).SetServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/SetServerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).SetServerConfig(ctx, req.(*SetServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_RunnerConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).RunnerConfig(&waypointRunnerConfigServer{stream})
}

type Waypoint_RunnerConfigServer interface {
	Send(*RunnerConfigResponse) error
	Recv() (*RunnerConfigRequest, error)
	grpc.ServerStream
}

type waypointRunnerConfigServer struct {
	grpc.ServerStream
}

func (x *waypointRunnerConfigServer) Send(m *RunnerConfigResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointRunnerConfigServer) Recv() (*RunnerConfigRequest, error) {
	m := new(RunnerConfigRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_RunnerJobStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).RunnerJobStream(&waypointRunnerJobStreamServer{stream})
}

type Waypoint_RunnerJobStreamServer interface {
	Send(*RunnerJobStreamResponse) error
	Recv() (*RunnerJobStreamRequest, error)
	grpc.ServerStream
}

type waypointRunnerJobStreamServer struct {
	grpc.ServerStream
}

func (x *waypointRunnerJobStreamServer) Send(m *RunnerJobStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointRunnerJobStreamServer) Recv() (*RunnerJobStreamRequest, error) {
	m := new(RunnerJobStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_RunnerGetDeploymentConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunnerGetDeploymentConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).RunnerGetDeploymentConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/RunnerGetDeploymentConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).RunnerGetDeploymentConfig(ctx, req.(*RunnerGetDeploymentConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_EntrypointConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EntrypointConfigRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WaypointServer).EntrypointConfig(m, &waypointEntrypointConfigServer{stream})
}

type Waypoint_EntrypointConfigServer interface {
	Send(*EntrypointConfigResponse) error
	grpc.ServerStream
}

type waypointEntrypointConfigServer struct {
	grpc.ServerStream
}

func (x *waypointEntrypointConfigServer) Send(m *EntrypointConfigResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Waypoint_EntrypointLogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).EntrypointLogStream(&waypointEntrypointLogStreamServer{stream})
}

type Waypoint_EntrypointLogStreamServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*EntrypointLogBatch, error)
	grpc.ServerStream
}

type waypointEntrypointLogStreamServer struct {
	grpc.ServerStream
}

func (x *waypointEntrypointLogStreamServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointEntrypointLogStreamServer) Recv() (*EntrypointLogBatch, error) {
	m := new(EntrypointLogBatch)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_EntrypointExecStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WaypointServer).EntrypointExecStream(&waypointEntrypointExecStreamServer{stream})
}

type Waypoint_EntrypointExecStreamServer interface {
	Send(*EntrypointExecResponse) error
	Recv() (*EntrypointExecRequest, error)
	grpc.ServerStream
}

type waypointEntrypointExecStreamServer struct {
	grpc.ServerStream
}

func (x *waypointEntrypointExecStreamServer) Send(m *EntrypointExecResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *waypointEntrypointExecStreamServer) Recv() (*EntrypointExecRequest, error) {
	m := new(EntrypointExecRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Waypoint_UpsertBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertBuild(ctx, req.(*UpsertBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_UpsertPushedArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPushedArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertPushedArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertPushedArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertPushedArtifact(ctx, req.(*UpsertPushedArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_UpsertDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertDeployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertDeployment(ctx, req.(*UpsertDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_UpsertRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).UpsertRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/UpsertRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).UpsertRelease(ctx, req.(*UpsertReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GenerateInviteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InviteTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GenerateInviteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GenerateInviteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GenerateInviteToken(ctx, req.(*InviteTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_GenerateLoginToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).GenerateLoginToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/GenerateLoginToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).GenerateLoginToken(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Waypoint_ConvertInviteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConvertInviteTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaypointServer).ConvertInviteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hashicorp.waypoint.Waypoint/ConvertInviteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaypointServer).ConvertInviteToken(ctx, req.(*ConvertInviteTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Waypoint_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hashicorp.waypoint.Waypoint",
	HandlerType: (*WaypointServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBuilds",
			Handler:    _Waypoint_ListBuilds_Handler,
		},
		{
			MethodName: "ListPushedArtifacts",
			Handler:    _Waypoint_ListPushedArtifacts_Handler,
		},
		{
			MethodName: "ListDeployments",
			Handler:    _Waypoint_ListDeployments_Handler,
		},
		{
			MethodName: "GetDeployment",
			Handler:    _Waypoint_GetDeployment_Handler,
		},
		{
			MethodName: "GetLatestBuild",
			Handler:    _Waypoint_GetLatestBuild_Handler,
		},
		{
			MethodName: "GetLatestPushedArtifact",
			Handler:    _Waypoint_GetLatestPushedArtifact_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _Waypoint_SetConfig_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _Waypoint_GetConfig_Handler,
		},
		{
			MethodName: "QueueJob",
			Handler:    _Waypoint_QueueJob_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _Waypoint_GetJob_Handler,
		},
		{
			MethodName: "ValidateJob",
			Handler:    _Waypoint_ValidateJob_Handler,
		},
		{
			MethodName: "GetRunner",
			Handler:    _Waypoint_GetRunner_Handler,
		},
		{
			MethodName: "SetServerConfig",
			Handler:    _Waypoint_SetServerConfig_Handler,
		},
		{
			MethodName: "RunnerGetDeploymentConfig",
			Handler:    _Waypoint_RunnerGetDeploymentConfig_Handler,
		},
		{
			MethodName: "UpsertBuild",
			Handler:    _Waypoint_UpsertBuild_Handler,
		},
		{
			MethodName: "UpsertPushedArtifact",
			Handler:    _Waypoint_UpsertPushedArtifact_Handler,
		},
		{
			MethodName: "UpsertDeployment",
			Handler:    _Waypoint_UpsertDeployment_Handler,
		},
		{
			MethodName: "UpsertRelease",
			Handler:    _Waypoint_UpsertRelease_Handler,
		},
		{
			MethodName: "GenerateInviteToken",
			Handler:    _Waypoint_GenerateInviteToken_Handler,
		},
		{
			MethodName: "GenerateLoginToken",
			Handler:    _Waypoint_GenerateLoginToken_Handler,
		},
		{
			MethodName: "ConvertInviteToken",
			Handler:    _Waypoint_ConvertInviteToken_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetLogStream",
			Handler:       _Waypoint_GetLogStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StartExecStream",
			Handler:       _Waypoint_StartExecStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetJobStream",
			Handler:       _Waypoint_GetJobStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RunnerConfig",
			Handler:       _Waypoint_RunnerConfig_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "RunnerJobStream",
			Handler:       _Waypoint_RunnerJobStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "EntrypointConfig",
			Handler:       _Waypoint_EntrypointConfig_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EntrypointLogStream",
			Handler:       _Waypoint_EntrypointLogStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "EntrypointExecStream",
			Handler:       _Waypoint_EntrypointExecStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server.proto",
}
